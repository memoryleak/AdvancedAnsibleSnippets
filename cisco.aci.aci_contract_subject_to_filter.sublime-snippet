<snippet>
  <content><![CDATA[- name: ${1:Bind Contract Subjects to Filters (vz:RsSubjFiltAtt)}
  cisco.aci.aci_contract_subject_to_filter:
    action: ${2:# The action required when the condition is met}
    annotation: ${3:# User-defined string for annotating an object}
    certificate_name: ${4:# The X}
    contract: ${5:# The name of the contract}
    direction: ${6:# The direction of traffic matching for the filter}
    directives: ${7:# Determines if the binding should be set to log}
    filter: ${8:# The name of the Filter to bind to the Subject}
    host: ${9:# IP Address or hostname of APIC resolvable by Ansible control host}
    output_level: ${10:# Influence the output of this ACI module}
    output_path: ${11:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${12:# The password to use for authentication}
    port: ${13:# Port number to be used for REST connection}
    priority_override: ${14:# Overrides the filter priority for the a single applied filter}
    private_key: ${15:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${16:# Use C(present) or C(absent) for adding or removing}
    subject: ${17:# The name of the Contract Subject}
    tenant: ${18:# The name of the tenant}
    timeout: ${19:# The socket level timeout in seconds}
    use_proxy: ${20:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${21:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${22:# The username to use for authentication}
    validate_certs: ${23:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_contract_subject_to_filter]]></content>
  <tabTrigger>cisco.aci.aci_contract_subject_to_filter</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind Contract Subjects to Filters (vz:RsSubjFiltAtt)</description>
</snippet>