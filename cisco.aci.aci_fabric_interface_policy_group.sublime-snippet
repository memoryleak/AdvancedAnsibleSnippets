<snippet>
  <content><![CDATA[- name: ${1:Manage Fabric Interface Policy Groups (fabric:LePortPGrp, fabric:SpPortPGrp)}
  cisco.aci.aci_fabric_interface_policy_group:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    description: ${4:# The description of the Fabric Leaf or Spine Interface Policy Group}
    dwdm_policy: ${5:# The name of the DWDM policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    host: ${6:# IP Address or hostname of APIC resolvable by Ansible control host}
    l3_interface_policy: ${7:# The name of the L3 Interface policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    link_flap_policy: ${8:# The name of the Link Flap policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    link_level_policy: ${9:# The name of the Link Level policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    macsec_policy: ${10:# The name of the MACSec policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    monitoring_policy: ${11:# The name of the Monitoring policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    name: ${12:# The name of the Fabric Leaf or Spine Interface Policy Group}
    name_alias: ${13:# The alias for the current object}
    output_level: ${14:# Influence the output of this ACI module}
    output_path: ${15:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${16:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${17:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${18:# The password to use for authentication}
    port: ${19:# Port number to be used for REST connection}
    private_key: ${20:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${21:# Use C(present) or C(absent) for adding or removing}
    timeout: ${22:# The socket level timeout in seconds}
    transceiver_policy_tdn: ${23:# The target Dn of the Transceiver policy to bind to the Fabric Leaf or Spine Interface Policy Group}
    type: ${24:# The type of the Fabric Leaf or Spine Interface Policy Group}
    use_proxy: ${25:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${26:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${27:# The username to use for authentication}
    validate_certs: ${28:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_fabric_interface_policy_group]]></content>
  <tabTrigger>cisco.aci.aci_fabric_interface_policy_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Fabric Interface Policy Groups (fabric:LePortPGrp, fabric:SpPortPGrp)</description>
</snippet>