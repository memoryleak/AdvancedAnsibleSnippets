<snippet>
  <content><![CDATA[- name: ${1:Manages F5 BIG-IP GTM pools}
  f5networks.f5_modules.bigip_gtm_pool:
    alternate_lb_method: ${2:# The load balancing mode the system tries if the C(preferred_lb_method) is unsuccessful in picking a pool}
    availability_requirements: ${3:# If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available}
    fallback_ip: ${4:# Specifies the IPv4 or IPv6 address of the server to which the system directs requests when it cannot use one of its pools to do so}
    fallback_lb_method: ${5:# The load balancing mode the system tries if both the C(preferred_lb_method) and C(alternate_lb_method)s are unsuccessful in picking a pool}
    max_answers_returned: ${6:# Specifies the maximum number of available virtual servers the system lists in a response}
    members: ${7:# Members to assign to the pool}
    monitors: ${8:# Specifies the health monitors the system currently uses to monitor this resource}
    name: ${9:# Name of the GTM pool}
    partition: ${10:# Device partition to manage resources on}
    preferred_lb_method: ${11:# The load balancing mode the system tries first}
    provider: ${12:# A dict object containing connection details}
    state: ${13:# Pool state}
    ttl: ${14:# Specifies the number of seconds the IP address, once found, is valid}
    type: ${15:# The type of GTM pool you want to create}
  tags:
    - f5networks
    - f5_modules
    - bigip_gtm_pool]]></content>
  <tabTrigger>f5networks.f5_modules.bigip_gtm_pool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages F5 BIG-IP GTM pools</description>
</snippet>