<snippet>
  <content><![CDATA[- name: ${1:Interacts with webservices}
  ansible.builtin.uri:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    body: ${3:# The body of the http request/response to the web service}
    body_format: ${4:# The serialization format of the body}
    ca_path: ${5:# PEM formatted file that contains a CA certificate to be used for validation}
    ciphers: ${6:# SSL/TLS Ciphers to use for the request}
    client_cert: ${7:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${8:# PEM formatted file that contains your private key to be used for SSL client authentication}
    creates: ${9:# A filename, when it already exists, this step will not be run}
    decompress: ${10:# Whether to attempt to decompress gzip content-encoded responses}
    dest: ${11:# A path of where to download the file to (if desired)}
    follow_redirects: ${12:# Whether or not the URI module should follow redirects}
    force: ${13:# If V(true) do not get a cached copy}
    force_basic_auth: ${14:# Force the sending of the Basic authentication header upon initial request}
    group: ${15:# Name of the group that should own the filesystem object, as would be fed to C(chown)}
    headers: ${16:# Add custom HTTP headers to a request in the format of a YAML hash}
    http_agent: ${17:# Header to identify as, generally appears in web server logs}
    method: ${18:# The HTTP method of the request or response}
    mode: ${19:# The permissions the resulting filesystem object should have}
    owner: ${20:# Name of the user that should own the filesystem object, as would be fed to C(chown)}
    remote_src: ${21:# If V(false), the module will search for the O(src) on the controller node}
    removes: ${22:# A filename, when it does not exist, this step will not be run}
    return_content: ${23:# Whether or not to return the body of the response as a 'content' key in the dictionary result no matter it succeeded or failed}
    selevel: ${24:# The level part of the SELinux filesystem object context}
    serole: ${25:# The role part of the SELinux filesystem object context}
    setype: ${26:# The type part of the SELinux filesystem object context}
    seuser: ${27:# The user part of the SELinux filesystem object context}
    src: ${28:# Path to file to be submitted to the remote server}
    status_code: ${29:# A list of valid, numeric, HTTP status codes that signifies success of the request}
    timeout: ${30:# The socket level timeout in seconds}
    unix_socket: ${31:# Path to Unix domain socket to use for connection}
    unredirected_headers: ${32:# A list of header names that will not be sent on subsequent redirected requests}
    unsafe_writes: ${33:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    url: ${34:# HTTP or HTTPS URL in the form (http|https)://host}
    url_password: ${35:# A password for the module to use for Digest, Basic or WSSE authentication}
    url_username: ${36:# A username for the module to use for Digest, Basic or WSSE authentication}
    use_gssapi: ${37:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
    use_netrc: ${38:# Determining whether to use credentials from C(~/}
    use_proxy: ${39:# If V(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${40:# If V(false), SSL certificates will not be validated}
  tags:
    - uri]]></content>
  <tabTrigger>ansible.builtin.uri</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Interacts with webservices</description>
</snippet>