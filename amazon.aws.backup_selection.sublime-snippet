<snippet>
  <content><![CDATA[- name: ${1:Create, delete and modify AWS Backup selection}
  amazon.aws.backup_selection:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    backup_plan_name: ${5:# Uniquely identifies the backup plan to be associated with the selection of resources}
    backup_selection_name: ${6:# The display name of a resource selection document}
    conditions: ${7:# A list of conditions (expressed as a dict) that you define to assign resources to your backup plans using tags}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    endpoint_url: ${9:# URL to connect to instead of the default AWS endpoints}
    iam_role_arn: ${10:# The ARN of the IAM role that Backup uses to authenticate when backing up the target resource}
    list_of_tags: ${11:# A list of conditions that you define to assign resources to your backup plans using tags}
    not_resources: ${12:# A list of Amazon Resource Names (ARNs) to exclude from a backup plan}
    profile: ${13:# A named AWS profile to use for authentication}
    region: ${14:# The AWS region to use}
    resources: ${15:# A list of Amazon Resource Names (ARNs) to assign to a backup plan}
    secret_key: ${16:# AWS secret access key}
    session_token: ${17:# AWS STS session token for use with temporary credentials}
    state: ${18:# Create, delete a backup selection}
    validate_certs: ${19:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - amazon
    - aws
    - backup_selection]]></content>
  <tabTrigger>amazon.aws.backup_selection</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create, delete and modify AWS Backup selection</description>
</snippet>