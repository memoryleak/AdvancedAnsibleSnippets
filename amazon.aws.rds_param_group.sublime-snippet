<snippet>
  <content><![CDATA[- name: ${1:manage RDS parameter groups}
  amazon.aws.rds_param_group:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    description: ${6:# Database parameter group description}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    engine: ${8:# The type of database for this group}
    immediate: ${9:# Whether to apply the changes immediately, or after the next reboot of any associated instances}
    name: ${10:# Database parameter group identifier}
    params: ${11:# Map of parameter names and values}
    profile: ${12:# A named AWS profile to use for authentication}
    purge_tags: ${13:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    region: ${14:# The AWS region to use}
    secret_key: ${15:# AWS secret access key}
    session_token: ${16:# AWS STS session token for use with temporary credentials}
    state: ${17:# Specifies whether the group should be present or absent}
    tags: ${18:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${19:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - amazon
    - aws
    - rds_param_group]]></content>
  <tabTrigger>amazon.aws.rds_param_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>manage RDS parameter groups</description>
</snippet>