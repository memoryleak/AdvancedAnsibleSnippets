<snippet>
  <content><![CDATA[- name: ${1:Manages templates on Apache CloudStack based clouds}
  ngine_io.cloudstack.cs_template:
    account: ${2:# Account the template, snapshot or VM is related to}
    api_http_method: ${3:# HTTP method used to query the API endpoint}
    api_key: ${4:# API key of the CloudStack API}
    api_secret: ${5:# Secret key of the CloudStack API}
    api_timeout: ${6:# HTTP timeout in seconds}
    api_url: ${7:# URL of the CloudStack API e}
    api_verify_ssl_cert: ${8:# Verify CA authority cert file}
    bits: ${9:# 32 or 64 bits support}
    checksum: ${10:# The MD5 checksum value of this template}
    cross_zones: ${11:# Whether the template should be synced or removed across zones}
    details: ${12:# Template details in key/value pairs}
    display_text: ${13:# Display text of the template}
    domain: ${14:# Domain the template, snapshot or VM is related to}
    format: ${15:# The format for the template}
    hypervisor: ${16:# Name the hypervisor to be used for creating the new template}
    is_dynamically_scalable: ${17:# Register the template having XS/VMware tools installed in order to support dynamic scaling of VM CPU/memory}
    is_extractable: ${18:# Allows the template or its derivatives to be extractable}
    is_featured: ${19:# Register the template to be featured}
    is_public: ${20:# Register the template to be publicly available to all users}
    is_routing: ${21:# Sets the template type to routing, i}
    mode: ${22:# Mode for the template extraction}
    name: ${23:# Name of the template}
    os_type: ${24:# OS type that best represents the OS of this template}
    password_enabled: ${25:# Enable template password reset support}
    poll_async: ${26:# Poll async jobs until job has finished}
    project: ${27:# Name of the project the template to be registered in}
    requires_hvm: ${28:# Whether the template requires HVM or not}
    snapshot: ${29:# Name of the snapshot, created from the VM ROOT volume, the template will be created from}
    sshkey_enabled: ${30:# True if the template supports the sshkey upload feature}
    state: ${31:# State of the template}
    tags: ${32:# List of tags}
    template_filter: ${33:# Name of the filter used to search for the template}
    template_find_options: ${34:# Options to find a template uniquely}
    template_tag: ${35:# The tag for this template}
    url: ${36:# URL of where the template is hosted on I(state=present)}
    vm: ${37:# VM name the template will be created from its volume or alternatively from a snapshot}
    zone: ${38:# Name of the zone you wish the template to be registered or deleted from}
  tags:
    - ngine_io
    - cloudstack
    - cs_template]]></content>
  <tabTrigger>ngine_io.cloudstack.cs_template</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages templates on Apache CloudStack based clouds</description>
</snippet>