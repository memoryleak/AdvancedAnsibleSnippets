<snippet>
  <content><![CDATA[- name: ${1:Create/Delete Compute Instances from OpenStack}
  openstack.cloud.server:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    auto_ip: ${5:# Ensure instance has public ip however the cloud wants to do that}
    availability_zone: ${6:# Availability zone in which to create the server}
    boot_from_volume: ${7:# Should the instance boot from a persistent volume created based on the image given}
    boot_volume: ${8:# Volume name or id to use as the volume to boot from}
    ca_cert: ${9:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${10:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${11:# A path to a client key to use as part of the SSL transaction}
    cloud: ${12:# Named cloud or cloud config to operate against}
    config_drive: ${13:# Whether to boot the server with config drive enabled}
    delete_ips: ${14:# When I(state) is C(absent) and this option is true, any floating IP address associated with this server will be deleted along with it}
    description: ${15:# Description of the server}
    flavor: ${16:# The name or id of the flavor in which the new instance has to be created}
    flavor_include: ${17:# Text to use to filter flavor names, for the case, such as Rackspace, where there are multiple flavors that have the same ram count}
    flavor_ram: ${18:# The minimum amount of ram in MB that the flavor in which the new instance has to be created must have}
    floating_ip_pools: ${19:# Name of floating IP pool from which to choose a floating IP}
    floating_ips: ${20:# list of valid floating IPs that pre-exist to assign to this node}
    image: ${21:# The name or id of the base image to boot}
    image_exclude: ${22:# Text to use to filter image names, for the case, such as HP, where there are multiple image names matching the common identifying portions}
    interface: ${23:# Endpoint URL type to fetch from the service catalog}
    key_name: ${24:# The key pair name to be used when creating a instance}
    metadata: ${25:# A list of key value pairs that should be provided as a metadata to the new instance or a string containing a list of key-value pairs}
    name: ${26:# Name that has to be given to the instance}
    network: ${27:# Name or ID of a network to attach this instance to}
    nics: ${28:# A list of networks to which the instance's interface should be attached}
    region_name: ${29:# Name of the region}
    reuse_ips: ${30:# When I(auto_ip) is true and this option is true, the I(auto_ip) code will attempt to re-use unassigned floating ips in the project before creating a new one}
    scheduler_hints: ${31:# Arbitrary key/value pairs to the scheduler for custom use}
    sdk_log_level: ${32:# Log level of the OpenStackSDK}
    sdk_log_path: ${33:# Path to the logfile of the OpenStackSDK}
    security_groups: ${34:# Names or IDs of the security groups to which the instance should be added}
    state: ${35:# Should the resource be C(present) or C(absent)}
    terminate_volume: ${36:# If C(true), delete volume when deleting the instance and if it has been booted from volume(s)}
    timeout: ${37:# The amount of time the module should wait for the instance to get into active state}
    userdata: ${38:# Opaque blob of data which is made available to the instance}
    validate_certs: ${39:# Whether or not SSL API requests should be verified}
    volume_size: ${40:# The size of the volume to create in GB if booting from volume based on an image}
    volumes: ${41:# A list of preexisting volumes names or ids to attach to the instance}
    wait: ${42:# If the module should wait for the instance to be created}
  tags:
    - openstack
    - cloud
    - server]]></content>
  <tabTrigger>openstack.cloud.server</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create/Delete Compute Instances from OpenStack</description>
</snippet>