<snippet>
  <content><![CDATA[- name: ${1:Manages administrator objects on Checkpoint over Web Services API}
  check_point.mgmt.cp_mgmt_administrator:
    authentication_method: ${2:# Authentication method}
    auto_publish_session: ${3:# Publish the current session if changes have been performed after task completes}
    color: ${4:# Color of the object}
    comments: ${5:# Comments string}
    details_level: ${6:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    email: ${7:# Administrator email}
    expiration_date: ${8:# Format, YYYY-MM-DD, YYYY-mm-ddThh,mm,ss}
    ignore_errors: ${9:# Apply changes ignoring errors}
    ignore_warnings: ${10:# Apply changes ignoring warnings}
    multi_domain_profile: ${11:# Administrator multi-domain profile}
    must_change_password: ${12:# True if administrator must change password on the next login}
    name: ${13:# Object name}
    password: ${14:# Administrator password}
    password_hash: ${15:# Administrator password hash}
    permissions_profile: ${16:# Permission profile}
    permissions_profile_list: ${17:# Administrator permissions profile}
    phone_number: ${18:# Administrator phone number}
    radius_server: ${19:# RADIUS server object identified by the name or UID}
    state: ${20:# State of the access rule (present or absent)}
    tacacs_server: ${21:# TACACS server object identified by the name or UID}
    tags: ${22:# Collection of tag identifiers}
    version: ${23:# Version of checkpoint}
    wait_for_task: ${24:# Wait for the task to end}
    wait_for_task_timeout: ${25:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_administrator]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_administrator</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages administrator objects on Checkpoint over Web Services API</description>
</snippet>