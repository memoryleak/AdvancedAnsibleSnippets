<snippet>
  <content><![CDATA[- name: ${1:Manages administrator objects on Checkpoint over Web Services API}
  check_point.mgmt.cp_mgmt_administrator:
    name: ${2:# Object name}
    authentication_method: ${3:# Authentication method}
    email: ${4:# Administrator email}
    expiration_date: ${5:# Format, YYYY-MM-DD, YYYY-mm-ddThh,mm,ss}
    multi_domain_profile: ${6:# Administrator multi-domain profile}
    must_change_password: ${7:# True if administrator must change password on the next login}
    password: ${8:# Administrator password}
    password_hash: ${9:# Administrator password hash}
    permissions_profile: ${10:# Permission profile}
    permissions_profile_list: ${11:# Administrator permissions profile}
    phone_number: ${12:# Administrator phone number}
    radius_server: ${13:# RADIUS server object identified by the name or UID}
    tacacs_server: ${14:# TACACS server object identified by the name or UID}
    tags: ${15:# Collection of tag identifiers}
    color: ${16:# Color of the object}
    comments: ${17:# Comments string}
    details_level: ${18:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    ignore_warnings: ${19:# Apply changes ignoring warnings}
    ignore_errors: ${20:# Apply changes ignoring errors}
    state: ${21:# State of the access rule (present or absent)}
    auto_publish_session: ${22:# Publish the current session if changes have been performed after task completes}
    wait_for_task: ${23:# Wait for the task to end}
    wait_for_task_timeout: ${24:# How many minutes to wait until throwing a timeout error}
    version: ${25:# Version of checkpoint}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_administrator]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_administrator</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages administrator objects on Checkpoint over Web Services API</description>
</snippet>