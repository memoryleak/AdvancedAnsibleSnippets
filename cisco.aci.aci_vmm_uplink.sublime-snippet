<snippet>
  <content><![CDATA[- name: ${1:Manage VMM uplinks (vmm:UplinkP)}
  cisco.aci.aci_vmm_uplink:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    domain: ${4:# Name of the VMM domain}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    output_level: ${6:# Influence the output of this ACI module}
    output_path: ${7:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${8:# The password to use for authentication}
    port: ${9:# Port number to be used for REST connection}
    private_key: ${10:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${11:# Use C(present) or C(absent) for adding or removing}
    timeout: ${12:# The socket level timeout in seconds}
    uplink_id: ${13:# Numerical ID of the uplink}
    uplink_name: ${14:# Name of the uplink}
    use_proxy: ${15:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${16:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${17:# The username to use for authentication}
    validate_certs: ${18:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_vmm_uplink]]></content>
  <tabTrigger>cisco.aci.aci_vmm_uplink</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage VMM uplinks (vmm:UplinkP)</description>
</snippet>