<snippet>
  <content><![CDATA[- name: ${1:Module for setup of UserAccountProfile Avi RESTful Object}
  community.network.avi_useraccountprofile:
    account_lock_timeout: ${2:# Lock timeout period (in minutes)}
    api_context: ${3:# Avi API context that includes current session ID and CSRF Token}
    api_version: ${4:# Avi API version of to use for Avi API and objects}
    avi_api_patch_op: ${5:# Patch operation to use when using avi_api_update_method as patch}
    avi_api_update_method: ${6:# Default method for object update is HTTP PUT}
    avi_credentials: ${7:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    avi_disable_session_cache_as_fact: ${8:# It disables avi session information to be cached as a fact}
    controller: ${9:# IP address or hostname of the controller}
    credentials_timeout_threshold: ${10:# The time period after which credentials expire}
    max_concurrent_sessions: ${11:# Maximum number of concurrent sessions allowed}
    max_login_failure_count: ${12:# Number of login attempts before lockout}
    max_password_history_count: ${13:# Maximum number of passwords to be maintained in the password history}
    name: ${14:# Name of the object}
    password: ${15:# Password of Avi user in Avi controller}
    state: ${16:# The state that should be applied on the entity}
    tenant: ${17:# Name of tenant used for all Avi API calls and context of object}
    tenant_uuid: ${18:# UUID of tenant used for all Avi API calls and context of object}
    url: ${19:# Avi controller URL of the object}
    username: ${20:# Username used for accessing Avi controller}
    uuid: ${21:# Unique object identifier of the object}
  tags:
    - community
    - network
    - avi_useraccountprofile]]></content>
  <tabTrigger>community.network.avi_useraccountprofile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module for setup of UserAccountProfile Avi RESTful Object</description>
</snippet>