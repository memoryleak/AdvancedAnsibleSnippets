<snippet>
  <content><![CDATA[- name: ${1:Generate OpenSSL private keys without disk access}
  community.crypto.openssl_privatekey_pipe:
    cipher: ${2:# The cipher to encrypt the private key}
    content: ${3:# The current private key data}
    content_base64: ${4:# Set to V(true) if the content is base64 encoded}
    curve: ${5:# Note that not all curves are supported by all versions of C(cryptography)}
    format: ${6:# Determines which format the private key is written in}
    format_mismatch: ${7:# Determines behavior of the module if the format of a private key does not match the expected format, but all other parameters are as expected}
    passphrase: ${8:# The passphrase for the private key}
    regenerate: ${9:# Allows to configure in which situations the module is allowed to regenerate private keys}
    return_current_key: ${10:# Set to V(true) to return the current private key when the module did not generate a new one}
    select_crypto_backend: ${11:# Determines which crypto backend to use}
    size: ${12:# Size (in bits) of the TLS/SSL key to generate}
    type: ${13:# The algorithm used to generate the TLS/SSL private key}
  tags:
    - community
    - crypto
    - openssl_privatekey_pipe]]></content>
  <tabTrigger>community.crypto.openssl_privatekey_pipe</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Generate OpenSSL private keys without disk access</description>
</snippet>