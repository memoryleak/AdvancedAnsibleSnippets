<snippet>
  <content><![CDATA[- name: ${1:Manage Layer 3 Outside (L3Out) BGP Peers (bgp:PeerP and bgp:InfraPeerP)}
  cisco.aci.aci_l3out_bgp_peer:
    address_type_controls: ${2:# Address Type Controls}
    admin_state: ${3:# Admin state for the BGP session}
    allow_self_as_count: ${4:# Number of allowed self AS}
    annotation: ${5:# User-defined string for annotating an object}
    bgp_controls: ${6:# BGP Controls}
    bgp_infra_peer: ${7:# BGP Infra peer (bgp:InfraPeerP)}
    bgp_password: ${8:# Password for the BGP Peer}
    bgp_peer_prefix_policy: ${9:# BGP Peer Prefix Policy}
    certificate_name: ${10:# The X}
    description: ${11:# Description for the BGP Peer}
    host: ${12:# IP Address or hostname of APIC resolvable by Ansible control host}
    interface_profile: ${13:# Name of the interface profile}
    l3out: ${14:# Name of an existing L3Out}
    local_as_number: ${15:# The local Autonomous System Number (ASN) of the L3Out BGP Peer}
    local_as_number_config: ${16:# The local Autonomous System Number (ASN) configuration of the L3Out BGP Peer}
    node_id: ${17:# Node to build the interface on for Port-channels and single ports}
    node_profile: ${18:# Name of the node profile}
    output_level: ${19:# Influence the output of this ACI module}
    output_path: ${20:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${21:# The password to use for authentication}
    path_ep: ${22:# Path to interface}
    peer_controls: ${23:# Peer Controls}
    peer_ip: ${24:# IP address of the BGP peer}
    peer_type: ${25:# BGP Peer type}
    pod_id: ${26:# Pod to build the interface on}
    port: ${27:# Port number to be used for REST connection}
    private_asn_controls: ${28:# Private AS Controls}
    private_key: ${29:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    remote_asn: ${30:# Autonomous System Number of the BGP peer}
    route_control_profiles: ${31:# List of dictionaries objects, which is used to bind the BGP Peer Connectivity Profile to Route Control Profile}
    state: ${32:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${33:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${34:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    tenant: ${35:# Name of an existing tenant}
    timeout: ${36:# The socket level timeout in seconds}
    transport_data_plane: ${37:# Transport Data Plane type}
    ttl: ${38:# eBGP Multihop Time To Live}
    use_proxy: ${39:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${40:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${41:# The username to use for authentication}
    validate_certs: ${42:# If C(false), SSL certificates will not be validated}
    weight: ${43:# Weight for BGP routes from this neighbor}
  tags:
    - cisco
    - aci
    - aci_l3out_bgp_peer]]></content>
  <tabTrigger>cisco.aci.aci_l3out_bgp_peer</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Layer 3 Outside (L3Out) BGP Peers (bgp:PeerP and bgp:InfraPeerP)</description>
</snippet>