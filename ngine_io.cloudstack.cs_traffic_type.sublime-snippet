<snippet>
  <content><![CDATA[- name: ${1:Manages traffic types on CloudStack Physical Networks}
  ngine_io.cloudstack.cs_traffic_type:
    api_http_method: ${2:# HTTP method used to query the API endpoint}
    api_key: ${3:# API key of the CloudStack API}
    api_secret: ${4:# Secret key of the CloudStack API}
    api_timeout: ${5:# HTTP timeout in seconds}
    api_url: ${6:# URL of the CloudStack API e}
    api_verify_ssl_cert: ${7:# Verify CA authority cert file}
    hyperv_networklabel: ${8:# The network name label of the physical device dedicated to this traffic on a HyperV host}
    isolation_method: ${9:# Use if the physical network has multiple isolation types and traffic type is public}
    kvm_networklabel: ${10:# The network name label of the physical device dedicated to this traffic on a KVM host}
    ovm3_networklabel: ${11:# The network name of the physical device dedicated to this traffic on an OVM3 host}
    physical_network: ${12:# the name of the Physical Network}
    poll_async: ${13:# Poll async jobs until job has finished}
    state: ${14:# State of the traffic type}
    traffic_type: ${15:# the trafficType to be added to the physical network}
    validate_certs: ${16:# If V(false), SSL certificates will not be validated}
    vlan: ${17:# The VLAN id to be used for Management traffic by VMware host}
    vmware_networklabel: ${18:# The network name label of the physical device dedicated to this traffic on a VMware host}
    xen_networklabel: ${19:# The network name label of the physical device dedicated to this traffic on a XenServer host}
    zone: ${20:# Name of the zone with the physical network}
  tags:
    - ngine_io
    - cloudstack
    - cs_traffic_type]]></content>
  <tabTrigger>ngine_io.cloudstack.cs_traffic_type</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages traffic types on CloudStack Physical Networks</description>
</snippet>