<snippet>
  <content><![CDATA[- name: ${1:create, delete, or modify an Amazon Redshift instance}
  community.aws.redshift:
    access_key: ${2:# AWS access key ID}
    allow_version_upgrade: ${3:# When I(allow_version_upgrade=true) the cluster may be automatically upgraded during the maintenance window}
    automated_snapshot_retention_period: ${4:# The number of days that automated snapshots are retained}
    availability_zone: ${5:# Availability zone in which to launch cluster}
    aws_ca_bundle: ${6:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${7:# A dictionary to modify the botocore configuration}
    cluster_parameter_group_name: ${8:# Name of the cluster parameter group}
    cluster_security_groups: ${9:# In which security group the cluster belongs}
    cluster_subnet_group_name: ${10:# Which subnet to place the cluster}
    cluster_type: ${11:# The type of cluster}
    cluster_version: ${12:# Which version the cluster should have}
    command: ${13:# Specifies the action to take}
    db_name: ${14:# Name of the database}
    debug_botocore_endpoint_logs: ${15:# Use a C(botocore}
    elastic_ip: ${16:# An Elastic IP to use for the cluster}
    encrypted: ${17:# If the cluster is encrypted or not}
    endpoint_url: ${18:# URL to connect to instead of the default AWS endpoints}
    enhanced_vpc_routing: ${19:# Whether the cluster should have enhanced VPC routing enabled}
    final_cluster_snapshot_identifier: ${20:# Identifier of the final snapshot to be created before deleting the cluster}
    identifier: ${21:# Redshift cluster identifier}
    new_cluster_identifier: ${22:# Only used when command=modify}
    node_type: ${23:# The node type of the cluster}
    number_of_nodes: ${24:# Number of nodes}
    password: ${25:# Master database password}
    port: ${26:# Which port the cluster is listening on}
    preferred_maintenance_window: ${27:# Maintenance window in format of C(ddd:hh24:mi-ddd:hh24:mi)}
    profile: ${28:# A named AWS profile to use for authentication}
    publicly_accessible: ${29:# If the cluster is accessible publicly or not}
    purge_tags: ${30:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${31:# The AWS region to use}
    secret_key: ${32:# AWS secret access key}
    session_token: ${33:# AWS STS session token for use with temporary credentials}
    skip_final_cluster_snapshot: ${34:# Skip a final snapshot before deleting the cluster}
    tags: ${35:# A dictionary representing the tags to be applied to the resource}
    username: ${36:# Master database username}
    validate_certs: ${37:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    vpc_security_group_ids: ${38:# VPC security group}
    wait: ${39:# When I(command=create), I(command=modify) or I(command=restore) then wait for the database to enter the 'available' state}
    wait_timeout: ${40:# When I(wait=true) defines how long in seconds before giving up}
  tags:
    - community
    - aws
    - redshift]]></content>
  <tabTrigger>community.aws.redshift</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>create, delete, or modify an Amazon Redshift instance</description>
</snippet>