<snippet>
  <content><![CDATA[- name: ${1:Module for setup of VsVip Avi RESTful Object}
  community.network.avi_vsvip:
    api_context: ${2:# Avi API context that includes current session ID and CSRF Token}
    api_version: ${3:# Avi API version of to use for Avi API and objects}
    avi_api_patch_op: ${4:# Patch operation to use when using avi_api_update_method as patch}
    avi_api_update_method: ${5:# Default method for object update is HTTP PUT}
    avi_credentials: ${6:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    avi_disable_session_cache_as_fact: ${7:# It disables avi session information to be cached as a fact}
    cloud_ref: ${8:# It is a reference to an object of type cloud}
    controller: ${9:# IP address or hostname of the controller}
    dns_info: ${10:# Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record}
    east_west_placement: ${11:# Force placement on all service engines in the service engine group (container clouds only)}
    name: ${12:# Name for the vsvip object}
    password: ${13:# Password of Avi user in Avi controller}
    state: ${14:# The state that should be applied on the entity}
    tenant: ${15:# Name of tenant used for all Avi API calls and context of object}
    tenant_ref: ${16:# It is a reference to an object of type tenant}
    tenant_uuid: ${17:# UUID of tenant used for all Avi API calls and context of object}
    url: ${18:# Avi controller URL of the object}
    use_standard_alb: ${19:# This overrides the cloud level default and needs to match the se group value in which it will be used if the se group use_standard_alb value is}
    username: ${20:# Username used for accessing Avi controller}
    uuid: ${21:# Uuid of the vsvip object}
    vip: ${22:# List of virtual service ips and other shareable entities}
    vrf_context_ref: ${23:# Virtual routing context that the virtual service is bound to}
    vsvip_cloud_config_cksum: ${24:# Checksum of cloud configuration for vsvip}
  tags:
    - community
    - network
    - avi_vsvip]]></content>
  <tabTrigger>community.network.avi_vsvip</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module for setup of VsVip Avi RESTful Object</description>
</snippet>