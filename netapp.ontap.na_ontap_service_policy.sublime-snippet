<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP service policy configuration}
  netapp.ontap.na_ontap_service_policy:
    state: ${2:# Whether the specified service policy should exist or not}
    name: ${3:# The name of the service policy}
    ipspace: ${4:# Name of the ipspace}
    services: ${5:# List of services to associate to this service policy}
    vserver: ${6:# The name of the vserver to use}
    scope: ${7:# Set to 'svm' for interfaces owned by an SVM}
    known_services: ${8:# List of known services in 9}
    additional_services: ${9:# As an alternative to updating the C(known_services), new services can be specified here}
    hostname: ${10:# The hostname or IP address of the ONTAP instance}
    username: ${11:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    password: ${12:# Password for the specified user}
    cert_filepath: ${13:# path to SSL client cert file (}
    key_filepath: ${14:# path to SSL client key file}
    https: ${15:# Enable and disable https}
    validate_certs: ${16:# If set to C(no), the SSL certificates will not be validated}
    http_port: ${17:# Override the default port (80 or 443) with this port}
    ontapi: ${18:# The ontap api version to use}
    use_rest: ${19:# Whether to use REST or ZAPI}
    feature_flags: ${20:# Enable or disable a new feature}
    force_ontap_version: ${21:# Override the cluster ONTAP version when using REST}
  tags:
    - netapp
    - ontap
    - na_ontap_service_policy]]></content>
  <tabTrigger>netapp.ontap.na_ontap_service_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP service policy configuration</description>
</snippet>