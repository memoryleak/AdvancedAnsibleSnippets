<snippet>
  <content><![CDATA[- name: ${1:manage AWS Network Firewall policies}
  community.aws.networkfirewall_policy:
    access_key: ${2:# AWS access key ID}
    arn: ${3:# The ARN of the Network Firewall policy}
    aws_ca_bundle: ${4:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${5:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${6:# Use a C(botocore}
    description: ${7:# A description for the Network Firewall policy}
    endpoint_url: ${8:# URL to connect to instead of the default AWS endpoints}
    name: ${9:# The name of the Network Firewall policy}
    profile: ${10:# A named AWS profile to use for authentication}
    purge_stateless_custom_actions: ${11:# If I(purge_stateless_custom_actions=true), existing custom actions will be purged from the resource to match exactly what is defined by the I(stateless_custom_actions) parameter}
    purge_tags: ${12:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${13:# The AWS region to use}
    secret_key: ${14:# AWS secret access key}
    session_token: ${15:# AWS STS session token for use with temporary credentials}
    state: ${16:# Create or remove the Network Firewall policy}
    stateful_default_actions: ${17:# Actions to take on a packet if it doesn't match any of the stateful rules in the policy}
    stateful_rule_groups: ${18:# A list of names or ARNs of stateful firewall rule groups}
    stateful_rule_order: ${19:# Indicates how to manage the order of stateful rule evaluation for the policy}
    stateless_custom_actions: ${20:# A list of dictionaries defining custom actions which can be used in I(stateless_default_actions) and I(stateless_fragment_default_actions)}
    stateless_default_actions: ${21:# Actions to take on a packet if it doesn't match any of the stateless rules in the policy}
    stateless_fragment_default_actions: ${22:# Actions to take on a fragmented UDP packet if it doesn't match any of the stateless rules in the policy}
    stateless_rule_groups: ${23:# A list of names or ARNs of stateless firewall rule groups}
    tags: ${24:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${25:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    wait: ${26:# Whether to wait for the firewall policy to reach the C(ACTIVE) or C(DELETED) state before the module returns}
    wait_timeout: ${27:# Maximum time, in seconds, to wait for the firewall policy to reach the expected state}
  tags:
    - community
    - aws
    - networkfirewall_policy]]></content>
  <tabTrigger>community.aws.networkfirewall_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>manage AWS Network Firewall policies</description>
</snippet>