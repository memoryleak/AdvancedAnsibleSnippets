<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Model}
  google.cloud.gcp_mlengine_model:
    state: ${2:# Whether the given object should exist in GCP}
    name: ${3:# The name specified for the model}
    description: ${4:# The description specified for the model when it was created}
    default_version: ${5:# The default version of the model}
    regions: ${6:# The list of regions where the model is going to be deployed}
    online_prediction_logging: ${7:# If true, online prediction access logs are sent to StackDriver Logging}
    online_prediction_console_logging: ${8:# If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging}
    labels: ${9:# One or more labels that you can add, to organize your models}
    project: ${10:# The Google Cloud Platform project to use}
    auth_kind: ${11:# The type of credential used}
    service_account_contents: ${12:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${13:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${14:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${15:# Array of scopes to be used}
    env_type: ${16:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_mlengine_model]]></content>
  <tabTrigger>google.cloud.gcp_mlengine_model</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Model</description>
</snippet>