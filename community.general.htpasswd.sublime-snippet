<snippet>
  <content><![CDATA[- name: ${1:Manage user files for basic authentication}
  community.general.htpasswd:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    create: ${3:# Used with O(state=present)}
    group: ${4:# Name of the group that should own the filesystem object, as would be fed to I(chown)}
    hash_scheme: ${5:# Hashing scheme to be used}
    mode: ${6:# The permissions the resulting filesystem object should have}
    name: ${7:# User name to add or remove}
    owner: ${8:# Name of the user that should own the filesystem object, as would be fed to I(chown)}
    password: ${9:# Password associated with user}
    path: ${10:# Path to the file that contains the usernames and passwords}
    selevel: ${11:# The level part of the SELinux filesystem object context}
    serole: ${12:# The role part of the SELinux filesystem object context}
    setype: ${13:# The type part of the SELinux filesystem object context}
    seuser: ${14:# The user part of the SELinux filesystem object context}
    state: ${15:# Whether the user entry should be present or not}
    unsafe_writes: ${16:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
  tags:
    - community
    - general
    - htpasswd]]></content>
  <tabTrigger>community.general.htpasswd</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage user files for basic authentication</description>
</snippet>