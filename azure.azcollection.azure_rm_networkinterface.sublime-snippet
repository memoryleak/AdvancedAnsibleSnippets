<snippet>
  <content><![CDATA[- name: ${1:Manage Azure network interfaces}
  azure.azcollection.azure_rm_networkinterface:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    api_profile: ${4:# Selects an API profile to use when communicating with Azure services}
    append_tags: ${5:# Use to control if tags field is canonical or just appends to existing tags}
    auth_source: ${6:# Controls the source of the credentials to use for authentication}
    cert_validation_mode: ${7:# Controls the certificate validation behavior for Azure endpoints}
    client_id: ${8:# Azure client ID}
    cloud_environment: ${9:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    create_with_security_group: ${10:# Whether a security group should be be created with the NIC}
    disable_instance_discovery: ${11:# Determines whether or not instance discovery is performed when attempting to authenticate}
    dns_servers: ${12:# Which DNS servers should the NIC lookup}
    enable_accelerated_networking: ${13:# Whether the network interface should be created with the accelerated networking feature or not}
    enable_ip_forwarding: ${14:# Whether to enable IP forwarding}
    ip_configurations: ${15:# List of IP configurations}
    location: ${16:# Valid Azure location}
    log_mode: ${17:# Parent argument}
    log_path: ${18:# Parent argument}
    name: ${19:# Name of the network interface}
    open_ports: ${20:# When a default security group is created for a Linux host a rule will be added allowing inbound TCP connections to the default SSH port C(22), and for a Windows host rules will be added allowing inbound access to RDP ports C(3389) and C(5986)}
    os_type: ${21:# Determines any rules to be added to a default security group}
    password: ${22:# Active Directory user password}
    profile: ${23:# Security profile found in ~/}
    resource_group: ${24:# Name of a resource group where the network interface exists or will be created}
    secret: ${25:# Azure client secret}
    security_group: ${26:# An existing security group with which to associate the network interface}
    state: ${27:# Assert the state of the network interface}
    subnet_name: ${28:# Name of an existing subnet within the specified virtual network}
    subscription_id: ${29:# Your Azure subscription Id}
    tags: ${30:# Dictionary of string:string pairs to assign as metadata to the object}
    tenant: ${31:# Azure tenant ID}
    thumbprint: ${32:# The thumbprint of the private key specified in I(x509_certificate_path)}
    virtual_network: ${33:# An existing virtual network with which the network interface will be associated}
    x509_certificate_path: ${34:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_networkinterface]]></content>
  <tabTrigger>azure.azcollection.azure_rm_networkinterface</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Azure network interfaces</description>
</snippet>