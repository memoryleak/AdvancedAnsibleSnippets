<snippet>
  <content><![CDATA[- name: ${1:Avi User Module}
  community.network.avi_user:
    access: ${2:# Access settings (write, read, or no access) for each type of resource within Vantage}
    api_context: ${3:# Avi API context that includes current session ID and CSRF Token}
    api_version: ${4:# Avi API version of to use for Avi API and objects}
    avi_api_patch_op: ${5:# Patch operation to use when using avi_api_update_method as patch}
    avi_api_update_method: ${6:# Default method for object update is HTTP PUT}
    avi_credentials: ${7:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    avi_disable_session_cache_as_fact: ${8:# It disables avi session information to be cached as a fact}
    controller: ${9:# IP address or hostname of the controller}
    default_tenant_ref: ${10:# Default tenant reference}
    email: ${11:# Email address of the user}
    is_active: ${12:# Activates the current user account}
    is_superuser: ${13:# If the user will need to have the same privileges as the admin account, set it to true}
    name: ${14:# Full name of the user}
    obj_password: ${15:# You may either enter a case-sensitive password in this field for the new or existing user}
    obj_username: ${16:# Name that the user will supply when signing into Avi Vantage, such as jdoe or jdoe@avinetworks}
    password: ${17:# Password of Avi user in Avi controller}
    state: ${18:# The state that should be applied on the entity}
    tenant: ${19:# Name of tenant used for all Avi API calls and context of object}
    tenant_uuid: ${20:# UUID of tenant used for all Avi API calls and context of object}
    user_profile_ref: ${21:# Refer user profile}
    username: ${22:# Username used for accessing Avi controller}
  tags:
    - community
    - network
    - avi_user]]></content>
  <tabTrigger>community.network.avi_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Avi User Module</description>
</snippet>