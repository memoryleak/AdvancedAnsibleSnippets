<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP Create, delete, modify network subnets}
  netapp.ontap.na_ontap_net_subnet:
    state: ${2:# Whether the specified network interface group should exist or not}
    broadcast_domain: ${3:# Specify the required broadcast_domain name for the subnet}
    name: ${4:# Specify the subnet name}
    from_name: ${5:# Name of the subnet to be renamed}
    gateway: ${6:# Specify the gateway for the default route of the subnet}
    ipspace: ${7:# Specify the ipspace for the subnet}
    ip_ranges: ${8:# Specify the list of IP address ranges associated with the subnet}
    subnet: ${9:# Specify the subnet (ip and mask)}
    hostname: ${10:# The hostname or IP address of the ONTAP instance}
    username: ${11:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    password: ${12:# Password for the specified user}
    cert_filepath: ${13:# path to SSL client cert file (}
    key_filepath: ${14:# path to SSL client key file}
    https: ${15:# Enable and disable https}
    validate_certs: ${16:# If set to C(no), the SSL certificates will not be validated}
    http_port: ${17:# Override the default port (80 or 443) with this port}
    ontapi: ${18:# The ontap api version to use}
    use_rest: ${19:# Whether to use REST or ZAPI}
    feature_flags: ${20:# Enable or disable a new feature}
    force_ontap_version: ${21:# Override the cluster ONTAP version when using REST}
  tags:
    - netapp
    - ontap
    - na_ontap_net_subnet]]></content>
  <tabTrigger>netapp.ontap.na_ontap_net_subnet</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP Create, delete, modify network subnets</description>
</snippet>