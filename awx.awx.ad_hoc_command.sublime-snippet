<snippet>
  <content><![CDATA[- name: ${1:create, update, or destroy Automation Platform Controller ad hoc commands}
  awx.awx.ad_hoc_command:
    job_type: ${2:# Job_type to use for the ad hoc command}
    execution_environment: ${3:# Execution Environment to use for the ad hoc command}
    inventory: ${4:# Inventory to use for the ad hoc command}
    limit: ${5:# Limit to use for the ad hoc command}
    credential: ${6:# Credential to use for ad hoc command}
    module_name: ${7:# The Ansible module to execute}
    module_args: ${8:# The arguments to pass to the module}
    forks: ${9:# The number of forks to use for this ad hoc execution}
    verbosity: ${10:# Verbosity level for this ad hoc command run}
    extra_vars: ${11:# Extra variables to use for the ad hoc command}
    become_enabled: ${12:# If the become flag should be set}
    diff_mode: ${13:# Show the changes made by Ansible tasks where supported}
    wait: ${14:# Wait for the command to complete}
    interval: ${15:# The interval to request an update from the controller}
    timeout: ${16:# If waiting for the command to complete this will abort after this amount of seconds}
    controller_host: ${17:# URL to your Automation Platform Controller instance}
    controller_username: ${18:# Username for your controller instance}
    controller_password: ${19:# Password for your controller instance}
    controller_oauthtoken: ${20:# The OAuth token to use}
    validate_certs: ${21:# Whether to allow insecure connections to AWX}
    controller_config_file: ${22:# Path to the controller config file}
  tags:
    - awx
    - awx
    - ad_hoc_command]]></content>
  <tabTrigger>awx.awx.ad_hoc_command</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>create, update, or destroy Automation Platform Controller ad hoc commands</description>
</snippet>