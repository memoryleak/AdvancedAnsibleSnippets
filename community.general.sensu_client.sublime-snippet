<snippet>
  <content><![CDATA[- name: ${1:Manages Sensu client configuration}
  community.general.sensu_client:
    state: ${2:# Whether the client should be present or not}
    name: ${3:# A unique name for the client}
    address: ${4:# An address to help identify and reach the client}
    subscriptions: ${5:# An array of client subscriptions, a list of roles and/or responsibilities assigned to the system (e}
    safe_mode: ${6:# If safe mode is enabled for the client}
    redact: ${7:# Client definition attributes to redact (values) when logging and sending client keepalives}
    socket: ${8:# The socket definition scope, used to configure the Sensu client socket}
    keepalives: ${9:# If Sensu should monitor keepalives for this client}
    keepalive: ${10:# The keepalive definition scope, used to configure Sensu client keepalives behavior (e}
    registration: ${11:# The registration definition scope, used to configure Sensu registration event handlers}
    deregister: ${12:# If a deregistration event should be created upon Sensu client process stop}
    deregistration: ${13:# The deregistration definition scope, used to configure automated Sensu client de-registration}
    ec2: ${14:# The ec2 definition scope, used to configure the Sensu Enterprise AWS EC2 integration (Sensu Enterprise users only)}
    chef: ${15:# The chef definition scope, used to configure the Sensu Enterprise Chef integration (Sensu Enterprise users only)}
    puppet: ${16:# The puppet definition scope, used to configure the Sensu Enterprise Puppet integration (Sensu Enterprise users only)}
    servicenow: ${17:# The servicenow definition scope, used to configure the Sensu Enterprise ServiceNow integration (Sensu Enterprise users only)}
  tags:
    - community
    - general
    - sensu_client]]></content>
  <tabTrigger>community.general.sensu_client</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages Sensu client configuration</description>
</snippet>