<snippet>
  <content><![CDATA[- name: ${1:Create, alter, or remove a user (role) from a PostgreSQL server instance}
  community.postgresql.postgresql_user:
    ca_cert: ${2:# Specifies the name of a file containing SSL certificate authority (CA) certificate(s)}
    comment: ${3:# Adds a comment on the user (equivalent to the C(COMMENT ON ROLE) statement)}
    conn_limit: ${4:# Specifies the user (role) connection limit}
    connect_params: ${5:# Any additional parameters to be passed to libpg}
    db: ${6:# Name of database to connect to and where user's permissions are granted}
    encrypted: ${7:# Whether the password is stored hashed in the database}
    expires: ${8:# The date at which the user's password is to expire}
    fail_on_user: ${9:# If C(true), fails when the user (role) cannot be removed}
    login_host: ${10:# Host running the database}
    login_password: ${11:# The password this module should use to establish its PostgreSQL session}
    login_unix_socket: ${12:# Path to a Unix domain socket for local connections}
    login_user: ${13:# The username this module should use to establish its PostgreSQL session}
    name: ${14:# Name of the user (role) to add or remove}
    no_password_changes: ${15:# If C(true), does not inspect the database for password changes}
    password: ${16:# Set the user's password, before 1}
    port: ${17:# Database port to connect to}
    priv: ${18:# This option has been B(deprecated) and will be removed in community}
    role_attr_flags: ${19:# PostgreSQL user attributes string in the format: CREATEDB,CREATEROLE,SUPERUSER}
    session_role: ${20:# Switch to session role after connecting}
    ssl_cert: ${21:# Specifies the file name of the client SSL certificate}
    ssl_key: ${22:# Specifies the location for the secret key used for the client certificate}
    ssl_mode: ${23:# Determines how an SSL session is negotiated with the server}
    state: ${24:# The user (role) state}
    trust_input: ${25:# If C(false), checks whether values of options I(name), I(password), I(privs), I(expires), I(role_attr_flags), I(comment), I(session_role) are potentially dangerous}
  tags:
    - community
    - postgresql
    - postgresql_user]]></content>
  <tabTrigger>community.postgresql.postgresql_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create, alter, or remove a user (role) from a PostgreSQL server instance</description>
</snippet>