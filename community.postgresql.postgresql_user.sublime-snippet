<snippet>
  <content><![CDATA[- name: ${1:Create, alter, or remove a user (role) from a PostgreSQL server instance}
  community.postgresql.postgresql_user:
    ca_cert: ${2:# Specifies the name of a file containing SSL certificate authority (CA) certificate(s)}
    comment: ${3:# Adds a comment on the user (equivalent to the C(COMMENT ON ROLE) statement)}
    configuration: ${4:# Role-specific configuration parameters that would otherwise be set by C(ALTER ROLE user SET variable TO value;)}
    conn_limit: ${5:# Specifies the user (role) connection limit}
    connect_params: ${6:# Any additional parameters to be passed to libpg}
    db: ${7:# Name of database to connect to and where user's permissions are granted}
    encrypted: ${8:# Whether the password is stored hashed in the database}
    expires: ${9:# The date at which the user's password is to expire}
    fail_on_user: ${10:# If C(true), fails when the user (role) cannot be removed}
    login_host: ${11:# Host running the database}
    login_password: ${12:# The password this module should use to establish its PostgreSQL session}
    login_unix_socket: ${13:# Path to a Unix domain socket for local connections}
    login_user: ${14:# The username this module should use to establish its PostgreSQL session}
    name: ${15:# Name of the user (role) to add or remove}
    no_password_changes: ${16:# If C(true), does not inspect the database for password changes}
    password: ${17:# Set the user's password, before 1}
    port: ${18:# Database port to connect to}
    priv: ${19:# This option has been B(deprecated) and will be removed in community}
    reset_unspecified_configuration: ${20:# If set to C(true), the user's default configuration parameters will be reset in case they are not included in O(configuration), otherwise existing parameters will not be modified if not included in O(configuration)}
    role_attr_flags: ${21:# PostgreSQL user attributes string in the format: CREATEDB,CREATEROLE,SUPERUSER}
    session_role: ${22:# Switch to session role after connecting}
    ssl_cert: ${23:# Specifies the file name of the client SSL certificate}
    ssl_key: ${24:# Specifies the location for the secret key used for the client certificate}
    ssl_mode: ${25:# Determines how an SSL session is negotiated with the server}
    state: ${26:# The user (role) state}
    trust_input: ${27:# If C(false), checks whether values of options I(name), I(password), I(privs), I(expires), I(role_attr_flags), I(comment), I(session_role) are potentially dangerous}
  tags:
    - community
    - postgresql
    - postgresql_user]]></content>
  <tabTrigger>community.postgresql.postgresql_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create, alter, or remove a user (role) from a PostgreSQL server instance</description>
</snippet>