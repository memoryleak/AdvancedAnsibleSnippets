<snippet>
  <content><![CDATA[- name: ${1:Manages load balancer rules on Apache CloudStack based clouds}
  ngine_io.cloudstack.cs_loadbalancer_rule:
    account: ${2:# Account the rule is related to}
    algorithm: ${3:# Load balancer algorithm}
    api_http_method: ${4:# HTTP method used to query the API endpoint}
    api_key: ${5:# API key of the CloudStack API}
    api_secret: ${6:# Secret key of the CloudStack API}
    api_timeout: ${7:# HTTP timeout in seconds}
    api_url: ${8:# URL of the CloudStack API e}
    api_verify_ssl_cert: ${9:# Verify CA authority cert file}
    cidr: ${10:# CIDR (full notation) to be used for firewall rule if required}
    description: ${11:# The description of the load balancer rule}
    domain: ${12:# Domain the rule is related to}
    ip_address: ${13:# Public IP address from where the network traffic will be load balanced from}
    name: ${14:# The name of the load balancer rule}
    network: ${15:# Name of the network}
    open_firewall: ${16:# Whether the firewall rule for public port should be created, while creating the new rule}
    poll_async: ${17:# Poll async jobs until job has finished}
    private_port: ${18:# The private port of the private ip address/virtual machine where the network traffic will be load balanced to}
    project: ${19:# Name of the project the load balancer IP address is related to}
    protocol: ${20:# The protocol to be used on the load balancer}
    public_port: ${21:# The public port from where the network traffic will be load balanced from}
    state: ${22:# State of the rule}
    tags: ${23:# List of tags}
    vpc: ${24:# Name of the VPC}
    zone: ${25:# Name of the zone in which the rule should be created}
  tags:
    - ngine_io
    - cloudstack
    - cs_loadbalancer_rule]]></content>
  <tabTrigger>ngine_io.cloudstack.cs_loadbalancer_rule</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages load balancer rules on Apache CloudStack based clouds</description>
</snippet>