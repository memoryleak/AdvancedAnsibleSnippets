<snippet>
  <content><![CDATA[- name: ${1:create and maintain EFS file systems}
  community.aws.efs:
    encrypt: ${2:# If I(encrypt=true) creates an encrypted file system}
    kms_key_id: ${3:# The id of the AWS KMS CMK that will be used to protect the encrypted file system}
    state: ${4:# Allows to create, search and destroy Amazon EFS file system}
    name: ${5:# Creation Token of Amazon EFS file system}
    id: ${6:# ID of Amazon EFS}
    performance_mode: ${7:# File system's performance mode to use}
    tags: ${8:# List of tags of Amazon EFS}
    targets: ${9:# List of mounted targets}
    throughput_mode: ${10:# The throughput_mode for the file system to be created}
    provisioned_throughput_in_mibps: ${11:# If the throughput_mode is provisioned, select the amount of throughput to provisioned in Mibps}
    wait: ${12:# In case of 'present' state should wait for EFS 'available' life cycle state (of course, if current state not 'deleting' or 'deleted') In case of 'absent' state should wait for EFS 'deleted' life cycle state}
    wait_timeout: ${13:# How long the module should wait (in seconds) for desired state before returning}
    transition_to_ia: ${14:# How many days before objects transition to the lower-cost EFS Infrequent Access (IA) storage class}
    access_key: ${15:# AWS access key ID}
    secret_key: ${16:# AWS secret access key}
    session_token: ${17:# AWS STS session token for use with temporary credentials}
    profile: ${18:# A named AWS profile to use for authentication}
    endpoint_url: ${19:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${20:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${21:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${22:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${23:# Use a C(botocore}
    region: ${24:# The AWS region to use}
    purge_tags: ${25:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - community
    - aws
    - efs]]></content>
  <tabTrigger>community.aws.efs</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>create and maintain EFS file systems</description>
</snippet>