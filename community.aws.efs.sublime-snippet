<snippet>
  <content><![CDATA[- name: ${1:create and maintain EFS file systems}
  community.aws.efs:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    encrypt: ${6:# If I(encrypt=true) creates an encrypted file system}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    id: ${8:# ID of Amazon EFS}
    kms_key_id: ${9:# The id of the AWS KMS CMK that will be used to protect the encrypted file system}
    name: ${10:# Creation Token of Amazon EFS file system}
    performance_mode: ${11:# File system's performance mode to use}
    profile: ${12:# A named AWS profile to use for authentication}
    provisioned_throughput_in_mibps: ${13:# If the throughput_mode is provisioned, select the amount of throughput to provisioned in Mibps}
    purge_tags: ${14:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    region: ${15:# The AWS region to use}
    secret_key: ${16:# AWS secret access key}
    session_token: ${17:# AWS STS session token for use with temporary credentials}
    state: ${18:# Allows to create, search and destroy Amazon EFS file system}
    tags: ${19:# List of tags of Amazon EFS}
    targets: ${20:# List of mounted targets}
    throughput_mode: ${21:# The throughput_mode for the file system to be created}
    transition_to_ia: ${22:# How many days before objects transition to the lower-cost EFS Infrequent Access (IA) storage class}
    validate_certs: ${23:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    wait: ${24:# In case of 'present' state should wait for EFS 'available' life cycle state (of course, if current state not 'deleting' or 'deleted') In case of 'absent' state should wait for EFS 'deleted' life cycle state}
    wait_timeout: ${25:# How long the module should wait (in seconds) for desired state before returning}
  tags:
    - community
    - aws
    - efs]]></content>
  <tabTrigger>community.aws.efs</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>create and maintain EFS file systems</description>
</snippet>