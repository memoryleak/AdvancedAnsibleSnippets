<snippet>
  <content><![CDATA[- name: ${1:Bind Domain to Encap Pools (infra:RsVlanNs)}
  cisco.aci.aci_domain_to_encap_pool:
    domain: ${2:# Name of the domain being associated with the Encap Pool}
    domain_type: ${3:# Determines if the Domain is physical (phys) or virtual (vmm)}
    pool: ${4:# The name of the pool}
    pool_allocation_mode: ${5:# The method used for allocating encaps to resources}
    pool_type: ${6:# The encap type of C(pool)}
    state: ${7:# Use C(present) or C(absent) for adding or removing}
    vm_provider: ${8:# The VM platform for VMM Domains}
    host: ${9:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${10:# Port number to be used for REST connection}
    username: ${11:# The username to use for authentication}
    password: ${12:# The password to use for authentication}
    private_key: ${13:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${14:# The X}
    output_level: ${15:# Influence the output of this ACI module}
    timeout: ${16:# The socket level timeout in seconds}
    use_proxy: ${17:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${18:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${19:# If C(no), SSL certificates will not be validated}
    output_path: ${20:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${21:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_domain_to_encap_pool]]></content>
  <tabTrigger>cisco.aci.aci_domain_to_encap_pool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind Domain to Encap Pools (infra:RsVlanNs)</description>
</snippet>