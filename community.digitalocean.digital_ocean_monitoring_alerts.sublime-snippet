<snippet>
  <content><![CDATA[- name: ${1:Programmatically retrieve metrics as well as configure alert policies based on these metrics}
  community.digitalocean.digital_ocean_monitoring_alerts:
    alerts: ${2:# Alert object, required for C(state=present)}
    compare: ${3:# Alert comparison, required for C(state=present)}
    description: ${4:# Alert description, required for C(state=present)}
    enabled: ${5:# Enabled or not, required for C(state=present)}
    entities: ${6:# Alert entities, required for C(state=present)}
    oauth_token: ${7:# DigitalOcean OAuth token; can be specified in C(DO_API_KEY), C(DO_API_TOKEN), or C(DO_OAUTH_TOKEN) environment variables}
    state: ${8:# The usual, C(present) to create, C(absent) to destroy}
    tags: ${9:# Alert tags, required for C(state=present)}
    type: ${10:# Alert type, required for C(state=present)}
    uuid: ${11:# Alert uuid, required for C(state=absent)}
    value: ${12:# Alert threshold, required for C(state=present)}
    window: ${13:# Alert window, required for C(state=present)}
  tags:
    - community
    - digitalocean
    - digital_ocean_monitoring_alerts]]></content>
  <tabTrigger>community.digitalocean.digital_ocean_monitoring_alerts</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Programmatically retrieve metrics as well as configure alert policies based on these metrics</description>
</snippet>