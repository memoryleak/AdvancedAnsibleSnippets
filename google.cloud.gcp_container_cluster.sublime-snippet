<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Cluster}
  google.cloud.gcp_container_cluster:
    state: ${2:# Whether the given object should exist in GCP}
    name: ${3:# The name of this cluster}
    description: ${4:# An optional description of this cluster}
    initial_node_count: ${5:# The number of nodes to create in this cluster}
    node_config: ${6:# Parameters used in creating the cluster's nodes}
    master_auth: ${7:# The authentication information for accessing the master endpoint}
    logging_service: ${8:# The logging service the cluster should use to write logs}
    monitoring_service: ${9:# The monitoring service the cluster should use to write metrics}
    network: ${10:# The name of the Google Compute Engine network to which the cluster is connected}
    database_encryption: ${11:# Configuration of etcd encryption}
    private_cluster_config: ${12:# Configuration for a private cluster}
    cluster_ipv4_cidr: ${13:# The IP address range of the container pods in this cluster, in CIDR notation (e}
    enable_tpu: ${14:# (Optional) Whether to enable Cloud TPU resources in this cluster}
    addons_config: ${15:# Configurations for the various addons available to run in the cluster}
    subnetwork: ${16:# The name of the Google Compute Engine subnetwork to which the cluster is connected}
    locations: ${17:# The list of Google Compute Engine zones in which the cluster's nodes should be located}
    resource_labels: ${18:# The resource labels for the cluster to use to annotate any related Google Compute Engine resources}
    legacy_abac: ${19:# Configuration for the legacy ABAC authorization mode}
    network_policy: ${20:# Configuration options for the NetworkPolicy feature}
    default_max_pods_constraint: ${21:# The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster}
    ip_allocation_policy: ${22:# Configuration for controlling how IPs are allocated in the cluster}
    initial_cluster_version: ${23:# The software version of the master endpoint and kubelets used in the cluster when it was first created}
    master_authorized_networks_config: ${24:# Configuration for controlling how IPs are allocated in the cluster}
    binary_authorization: ${25:# Configuration for the BinaryAuthorization feature}
    release_channel: ${26:# ReleaseChannel indicates which release channel a cluster is subscribed to}
    shielded_nodes: ${27:# Shielded Nodes configuration}
    network_config: ${28:# Network configurations }
    enable_kubernetes_alpha: ${29:# Kubernetes alpha features are enabled on this cluster}
    location: ${30:# The location where the cluster is deployed}
    kubectl_path: ${31:# The path that the kubectl config file will be written to}
    kubectl_context: ${32:# The name of the context for the kubectl config file}
    project: ${33:# The Google Cloud Platform project to use}
    auth_kind: ${34:# The type of credential used}
    service_account_contents: ${35:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${36:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${37:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${38:# Array of scopes to be used}
    env_type: ${39:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_container_cluster]]></content>
  <tabTrigger>google.cloud.gcp_container_cluster</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Cluster</description>
</snippet>