<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Cluster}
  google.cloud.gcp_container_cluster:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    addons_config: ${3:# Configurations for the various addons available to run in the cluster}
    auth_kind: ${4:# The type of credential used}
    binary_authorization: ${5:# Configuration for the BinaryAuthorization feature}
    cluster_ipv4_cidr: ${6:# The IP address range of the container pods in this cluster, in CIDR notation (e}
    database_encryption: ${7:# Configuration of etcd encryption}
    default_max_pods_constraint: ${8:# The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster}
    description: ${9:# An optional description of this cluster}
    enable_kubernetes_alpha: ${10:# Kubernetes alpha features are enabled on this cluster}
    enable_tpu: ${11:# (Optional) Whether to enable Cloud TPU resources in this cluster}
    env_type: ${12:# Specifies which Ansible environment you're running this module within}
    initial_cluster_version: ${13:# The software version of the master endpoint and kubelets used in the cluster when it was first created}
    initial_node_count: ${14:# The number of nodes to create in this cluster}
    ip_allocation_policy: ${15:# Configuration for controlling how IPs are allocated in the cluster}
    kubectl_context: ${16:# The name of the context for the kubectl config file}
    kubectl_path: ${17:# The path that the kubectl config file will be written to}
    legacy_abac: ${18:# Configuration for the legacy ABAC authorization mode}
    location: ${19:# The location where the cluster is deployed}
    locations: ${20:# The list of Google Compute Engine zones in which the cluster's nodes should be located}
    logging_service: ${21:# The logging service the cluster should use to write logs}
    master_auth: ${22:# The authentication information for accessing the master endpoint}
    master_authorized_networks_config: ${23:# Configuration for controlling how IPs are allocated in the cluster}
    monitoring_service: ${24:# The monitoring service the cluster should use to write metrics}
    name: ${25:# The name of this cluster}
    network: ${26:# The name of the Google Compute Engine network to which the cluster is connected}
    network_config: ${27:# Network configurations}
    network_policy: ${28:# Configuration options for the NetworkPolicy feature}
    node_config: ${29:# Parameters used in creating the cluster's nodes}
    private_cluster_config: ${30:# Configuration for a private cluster}
    project: ${31:# The Google Cloud Platform project to use}
    release_channel: ${32:# ReleaseChannel indicates which release channel a cluster is subscribed to}
    resource_labels: ${33:# The resource labels for the cluster to use to annotate any related Google Compute Engine resources}
    scopes: ${34:# Array of scopes to be used}
    service_account_contents: ${35:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${36:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${37:# The path of a Service Account JSON file if serviceaccount is selected as type}
    shielded_nodes: ${38:# Shielded Nodes configuration}
    state: ${39:# Whether the given object should exist in GCP}
    subnetwork: ${40:# The name of the Google Compute Engine subnetwork to which the cluster is connected}
  tags:
    - google
    - cloud
    - gcp_container_cluster]]></content>
  <tabTrigger>google.cloud.gcp_container_cluster</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Cluster</description>
</snippet>