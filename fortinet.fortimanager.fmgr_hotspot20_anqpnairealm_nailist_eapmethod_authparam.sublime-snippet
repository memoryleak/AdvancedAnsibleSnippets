<snippet>
  <content><![CDATA[- name: ${1:EAP auth param}
  fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam:
    access_token: ${2:# The token to access FortiManager without using username and password}
    adom: ${3:# The parameter (adom) in requested url}
    anqp-nai-realm: ${4:# Deprecated, please use 'anqp_nai_realm'}
    anqp_nai_realm: ${5:# The parameter (anqp-nai-realm) in requested url}
    bypass_validation: ${6:# Only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters}
    eap-method: ${7:# Deprecated, please use 'eap_method'}
    eap_method: ${8:# The parameter (eap-method) in requested url}
    enable_log: ${9:# Enable/Disable logging for task}
    forticloud_access_token: ${10:# Authenticate Ansible client with forticloud API access token}
    hotspot20_anqpnairealm_nailist_eapmethod_authparam: ${11:# The top level parameters set}
    nai-list: ${12:# Deprecated, please use 'nai_list'}
    nai_list: ${13:# The parameter (nai-list) in requested url}
    proposed_method: ${14:# The overridden method for the underlying Json RPC request}
    rc_failed: ${15:# The rc codes list with which the conditions to fail will be overriden}
    rc_succeeded: ${16:# The rc codes list with which the conditions to succeed will be overriden}
    state: ${17:# The directive to create, update or delete an object}
    workspace_locking_adom: ${18:# The adom to lock for FortiManager running in workspace mode, the value can be global and others including root}
    workspace_locking_timeout: ${19:# The maximum time in seconds to wait for other user to release the workspace lock}
  tags:
    - fortinet
    - fortimanager
    - fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam]]></content>
  <tabTrigger>fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>EAP auth param</description>
</snippet>