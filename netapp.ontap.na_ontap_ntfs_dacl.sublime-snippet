<snippet>
  <content><![CDATA[- name: ${1:NetApp Ontap create, delate or modify NTFS DACL (discretionary access control list)}
  netapp.ontap.na_ontap_ntfs_dacl:
    access_type: ${2:# Specifies DACL ACE's access type}
    account: ${3:# Specifies DACL ACE's SID or domain account name of NTFS security descriptor}
    advanced_access_rights: ${4:# Specifies DACL ACE's Advanced access rights}
    apply_to: ${5:# Specifies apply DACL entry}
    cert_filepath: ${6:# path to SSL client cert file (}
    feature_flags: ${7:# Enable or disable a new feature}
    force_ontap_version: ${8:# Override the cluster ONTAP version when using REST}
    hostname: ${9:# The hostname or IP address of the ONTAP instance}
    http_port: ${10:# Override the default port (80 or 443) with this port}
    https: ${11:# Enable and disable https}
    key_filepath: ${12:# path to SSL client key file}
    ontapi: ${13:# The ontap api version to use}
    password: ${14:# Password for the specified user}
    rights: ${15:# Specifies DACL ACE's access rights}
    security_descriptor: ${16:# Specifies the NTFS security descriptor}
    state: ${17:# Whether the specified NTFS DACL should exist or not}
    use_rest: ${18:# Whether to use REST or ZAPI}
    username: ${19:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${20:# If set to C(no), the SSL certificates will not be validated}
    vserver: ${21:# Specifies the vserver for the NTFS DACL}
  tags:
    - netapp
    - ontap
    - na_ontap_ntfs_dacl]]></content>
  <tabTrigger>netapp.ontap.na_ontap_ntfs_dacl</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp Ontap create, delate or modify NTFS DACL (discretionary access control list)</description>
</snippet>