<snippet>
  <content><![CDATA[- name: ${1:Manage SSL termination for a Rackspace Cloud Load Balancer}
  community.general.rax_clb_ssl:
    loadbalancer: ${2:# Name or ID of the load balancer on which to manage SSL termination}
    state: ${3:# If set to 'present', SSL termination will be added to this load balancer}
    enabled: ${4:# If set to 'false', temporarily disable SSL termination without discarding}
    private_key: ${5:# The private SSL key as a string in PEM format}
    certificate: ${6:# The public SSL certificates as a string in PEM format}
    intermediate_certificate: ${7:# One or more intermediate certificate authorities as a string in PEM}
    secure_port: ${8:# The port to listen for secure traffic}
    secure_traffic_only: ${9:# If 'true', the load balancer will *only* accept secure traffic}
    https_redirect: ${10:# If 'true', the load balancer will redirect HTTP traffic to HTTPS}
    wait: ${11:# Wait for the balancer to be in state 'running' before turning}
    wait_timeout: ${12:# How long before 'wait' gives up, in seconds}
    api_key: ${13:# Rackspace API key, overrides I(credentials)}
    credentials: ${14:# File to find the Rackspace credentials in}
    env: ${15:# Environment as configured in I(~/}
    region: ${16:# Region to create an instance in}
    username: ${17:# Rackspace username, overrides I(credentials)}
    validate_certs: ${18:# Whether or not to require SSL validation of API endpoints}
    auth_endpoint: ${19:# The URI of the authentication service}
    identity_type: ${20:# Authentication mechanism to use, such as rackspace or keystone}
    tenant_id: ${21:# The tenant ID used for authentication}
    tenant_name: ${22:# The tenant name used for authentication}
  tags:
    - community
    - general
    - rax_clb_ssl]]></content>
  <tabTrigger>community.general.rax_clb_ssl</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage SSL termination for a Rackspace Cloud Load Balancer</description>
</snippet>