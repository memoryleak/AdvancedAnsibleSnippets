<snippet>
  <content><![CDATA[- name: ${1:Resource module for Internal User}
  cisco.ise.internal_user:
    changePassword: ${2:# ChangePassword flag}
    customAttributes: ${3:# Key value map}
    description: ${4:# Internal User's description}
    email: ${5:# Internal User's email}
    enablePassword: ${6:# Internal User's enablePassword}
    enabled: ${7:# Whether the user is enabled/disabled}
    expiryDate: ${8:# To store the internal user's expiry date information}
    expiryDateEnabled: ${9:# ExpiryDateEnabled flag}
    firstName: ${10:# Internal User's firstName}
    id: ${11:# Internal User's id}
    identityGroups: ${12:# CSV of identity group IDs}
    lastName: ${13:# Internal User's lastName}
    name: ${14:# Internal User's name}
    password: ${15:# Internal User's password}
    passwordIDStore: ${16:# The id store where the internal user's password is kept}
    ise_hostname: ${17:# The Identity Services Engine hostname}
    ise_username: ${18:# The Identity Services Engine username to authenticate}
    ise_password: ${19:# The Identity Services Engine password to authenticate}
    ise_verify: ${20:# Flag to enable or disable SSL certificate verification}
    ise_version: ${21:# Informs the SDK which version of Identity Services Engine to use}
    ise_wait_on_rate_limit: ${22:# Flag for Identity Services Engine SDK to enable automatic rate-limit handling}
    ise_debug: ${23:# Flag for Identity Services Engine SDK to enable debugging}
    ise_uses_api_gateway: ${24:# Flag that informs the SDK whether to use the Identity Services Engine's API Gateway to send requests}
    ise_uses_csrf_token: ${25:# Flag that informs the SDK whether we send the CSRF token to ISE's ERS APIs}
  tags:
    - cisco
    - ise
    - internal_user]]></content>
  <tabTrigger>cisco.ise.internal_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Resource module for Internal User</description>
</snippet>