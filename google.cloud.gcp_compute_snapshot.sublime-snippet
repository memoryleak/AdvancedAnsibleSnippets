<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Snapshot}
  google.cloud.gcp_compute_snapshot:
    state: ${2:# Whether the given object should exist in GCP}
    name: ${3:# Name of the resource; provided by the client when the resource is created}
    description: ${4:# An optional description of this resource}
    storage_locations: ${5:# Cloud Storage bucket storage location of the snapshot (regional or multi-regional)}
    labels: ${6:# Labels to apply to this Snapshot}
    source_disk: ${7:# A reference to the disk used to create this snapshot}
    zone: ${8:# A reference to the zone where the disk is hosted}
    snapshot_encryption_key: ${9:# The customer-supplied encryption key of the snapshot}
    source_disk_encryption_key: ${10:# The customer-supplied encryption key of the source snapshot}
    project: ${11:# The Google Cloud Platform project to use}
    auth_kind: ${12:# The type of credential used}
    service_account_contents: ${13:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${14:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${15:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${16:# Array of scopes to be used}
    env_type: ${17:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_compute_snapshot]]></content>
  <tabTrigger>google.cloud.gcp_compute_snapshot</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Snapshot</description>
</snippet>