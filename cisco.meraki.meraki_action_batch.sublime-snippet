<snippet>
  <content><![CDATA[- name: ${1:Manage Action Batch jobs within the Meraki Dashboard}
  cisco.meraki.meraki_action_batch:
    action_batch_id: ${2:# ID of an existing Action Batch job}
    actions: ${3:# List of actions the job should execute}
    auth_key: ${4:# Authentication key provided by the dashboard}
    confirmed: ${5:# Whether job is to be executed}
    host: ${6:# Hostname for Meraki dashboard}
    internal_error_retry_time: ${7:# Number of seconds to retry if server returns an internal server error}
    net_id: ${8:# ID of network, if applicable}
    net_name: ${9:# Name of network, if applicable}
    org_id: ${10:# ID of organization}
    org_name: ${11:# Name of organization}
    output_format: ${12:# Instructs module whether response keys should be snake case (ex}
    output_level: ${13:# Set amount of debug output during module execution}
    rate_limit_retry_time: ${14:# Number of seconds to retry if rate limiter is triggered}
    state: ${15:# Specifies whether to lookup, create, or delete an Action Batch job}
    synchronous: ${16:# Whether job is a synchronous or asynchronous job}
    timeout: ${17:# Time to timeout for HTTP requests}
    use_https: ${18:# If C(no), it will use HTTP}
    use_proxy: ${19:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${20:# Whether to validate HTTP certificates}
  tags:
    - cisco
    - meraki
    - meraki_action_batch]]></content>
  <tabTrigger>cisco.meraki.meraki_action_batch</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Action Batch jobs within the Meraki Dashboard</description>
</snippet>