<snippet>
  <content><![CDATA[- name: ${1:Manage SSL and SSH security profiles in FortiManager}
  community.fortios.fmgr_secprof_ssl_ssh:
    adom: ${2:# The ADOM the configuration should belong to}
    mode: ${3:# Sets one of three modes for managing the object}
    whitelist: ${4:# Enable/disable exempting servers by FortiGuard whitelist}
    use_ssl_server: ${5:# Enable/disable the use of SSL server table for SSL offloading}
    untrusted_caname: ${6:# Untrusted CA certificate used by SSL Inspection}
    ssl_exemptions_log: ${7:# Enable/disable logging SSL exemptions}
    ssl_anomalies_log: ${8:# Enable/disable logging SSL anomalies}
    server_cert_mode: ${9:# Re-sign or replace the server's certificate}
    server_cert: ${10:# Certificate used by SSL Inspection to replace server certificate}
    rpc_over_https: ${11:# Enable/disable inspection of RPC over HTTPS}
    name: ${12:# Name}
    mapi_over_https: ${13:# Enable/disable inspection of MAPI over HTTPS}
    comment: ${14:# Optional comments}
    caname: ${15:# CA certificate used by SSL Inspection}
    ftps: ${16:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    ftps_allow_invalid_server_cert: ${17:# When enabled, allows SSL sessions whose server certificate validation failed}
    ftps_client_cert_request: ${18:# Action based on client certificate request failure}
    ftps_ports: ${19:# Ports to use for scanning (1 - 65535, default = 443)}
    ftps_status: ${20:# Configure protocol inspection status}
    ftps_unsupported_ssl: ${21:# Action based on the SSL encryption used being unsupported}
    ftps_untrusted_cert: ${22:# Allow, ignore, or block the untrusted SSL session server certificate}
    https: ${23:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    https_allow_invalid_server_cert: ${24:# When enabled, allows SSL sessions whose server certificate validation failed}
    https_client_cert_request: ${25:# Action based on client certificate request failure}
    https_ports: ${26:# Ports to use for scanning (1 - 65535, default = 443)}
    https_status: ${27:# Configure protocol inspection status}
    https_unsupported_ssl: ${28:# Action based on the SSL encryption used being unsupported}
    https_untrusted_cert: ${29:# Allow, ignore, or block the untrusted SSL session server certificate}
    imaps: ${30:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    imaps_allow_invalid_server_cert: ${31:# When enabled, allows SSL sessions whose server certificate validation failed}
    imaps_client_cert_request: ${32:# Action based on client certificate request failure}
    imaps_ports: ${33:# Ports to use for scanning (1 - 65535, default = 443)}
    imaps_status: ${34:# Configure protocol inspection status}
    imaps_unsupported_ssl: ${35:# Action based on the SSL encryption used being unsupported}
    imaps_untrusted_cert: ${36:# Allow, ignore, or block the untrusted SSL session server certificate}
    pop3s: ${37:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    pop3s_allow_invalid_server_cert: ${38:# When enabled, allows SSL sessions whose server certificate validation failed}
    pop3s_client_cert_request: ${39:# Action based on client certificate request failure}
    pop3s_ports: ${40:# Ports to use for scanning (1 - 65535, default = 443)}
    pop3s_status: ${41:# Configure protocol inspection status}
    pop3s_unsupported_ssl: ${42:# Action based on the SSL encryption used being unsupported}
    pop3s_untrusted_cert: ${43:# Allow, ignore, or block the untrusted SSL session server certificate}
    smtps: ${44:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    smtps_allow_invalid_server_cert: ${45:# When enabled, allows SSL sessions whose server certificate validation failed}
    smtps_client_cert_request: ${46:# Action based on client certificate request failure}
    smtps_ports: ${47:# Ports to use for scanning (1 - 65535, default = 443)}
    smtps_status: ${48:# Configure protocol inspection status}
    smtps_unsupported_ssl: ${49:# Action based on the SSL encryption used being unsupported}
    smtps_untrusted_cert: ${50:# Allow, ignore, or block the untrusted SSL session server certificate}
    ssh: ${51:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    ssh_inspect_all: ${52:# Level of SSL inspection}
    ssh_ports: ${53:# Ports to use for scanning (1 - 65535, default = 443)}
    ssh_ssh_algorithm: ${54:# Relative strength of encryption algorithms accepted during negotiation}
    ssh_ssh_policy_check: ${55:# Enable/disable SSH policy check}
    ssh_ssh_tun_policy_check: ${56:# Enable/disable SSH tunnel policy check}
    ssh_status: ${57:# Configure protocol inspection status}
    ssh_unsupported_version: ${58:# Action based on SSH version being unsupported}
    ssl: ${59:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    ssl_allow_invalid_server_cert: ${60:# When enabled, allows SSL sessions whose server certificate validation failed}
    ssl_client_cert_request: ${61:# Action based on client certificate request failure}
    ssl_inspect_all: ${62:# Level of SSL inspection}
    ssl_unsupported_ssl: ${63:# Action based on the SSL encryption used being unsupported}
    ssl_untrusted_cert: ${64:# Allow, ignore, or block the untrusted SSL session server certificate}
    ssl_exempt: ${65:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    ssl_exempt_address: ${66:# IPv4 address object}
    ssl_exempt_address6: ${67:# IPv6 address object}
    ssl_exempt_fortiguard_category: ${68:# FortiGuard category ID}
    ssl_exempt_regex: ${69:# Exempt servers by regular expression}
    ssl_exempt_type: ${70:# Type of address object (IPv4 or IPv6) or FortiGuard category}
    ssl_exempt_wildcard_fqdn: ${71:# Exempt servers by wildcard FQDN}
    ssl_server: ${72:# EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!}
    ssl_server_ftps_client_cert_request: ${73:# Action based on client certificate request failure during the FTPS handshake}
    ssl_server_https_client_cert_request: ${74:# Action based on client certificate request failure during the HTTPS handshake}
    ssl_server_imaps_client_cert_request: ${75:# Action based on client certificate request failure during the IMAPS handshake}
    ssl_server_ip: ${76:# IPv4 address of the SSL server}
    ssl_server_pop3s_client_cert_request: ${77:# Action based on client certificate request failure during the POP3S handshake}
    ssl_server_smtps_client_cert_request: ${78:# Action based on client certificate request failure during the SMTPS handshake}
    ssl_server_ssl_other_client_cert_request: ${79:# Action based on client certificate request failure during an SSL protocol handshake}
  tags:
    - community
    - fortios
    - fmgr_secprof_ssl_ssh]]></content>
  <tabTrigger>community.fortios.fmgr_secprof_ssl_ssh</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage SSL and SSH security profiles in FortiManager</description>
</snippet>