<snippet>
  <content><![CDATA[- name: ${1:Manage PSSession Configurations}
  community.windows.win_pssession_configuration:
    access_mode: ${2:# Controls whether the session configuration allows connection from the C(local) machine only, both local and C(remote), or none (C(disabled))}
    alias_definitions: ${3:# A dict that defines aliases for each session}
    assemblies_to_load: ${4:# The assemblies that should be loaded into each session}
    async_poll: ${5:# Sets a delay in seconds between each check of the asynchronous execution status}
    async_timeout: ${6:# Sets a timeout for how long in seconds to wait for asynchronous module execution and waiting for the connection to recover}
    author: ${7:# The author of the session configuration}
    company_name: ${8:# The company that authored the session configuration}
    copyright: ${9:# The copyright statement of the session configuration}
    description: ${10:# The description of the session configuration}
    environment_variables: ${11:# A dict that defines environment variables for each session}
    execution_policy: ${12:# The execution policy controlling script execution in the PowerShell session}
    formats_to_process: ${13:# Paths to format definition files to process for each session}
    function_definitions: ${14:# A dict that defines functions for each session}
    group_managed_service_account: ${15:# If the session will run as a group managed service account (gMSA) then this is the name}
    guid: ${16:# The GUID (UUID) of the session configuration file}
    language_mode: ${17:# Determines the language mode of the PowerShell session}
    lenient_config_fields: ${18:# Some fields used in the session configuration do not affect its function, and are sometimes auto-generated when not specified}
    maximum_received_data_size_per_command_mb: ${19:# Sets the maximum received data size per command in MB}
    maximum_received_object_size_mb: ${20:# Sets the maximum object size in MB}
    modules_to_import: ${21:# A list of modules that should be imported into the session}
    mount_user_drive: ${22:# If C(yes) the session creates and mounts a user-specific PSDrive for use with file transfers}
    name: ${23:# The name of the session configuration to manage}
    powershell_version: ${24:# The minimum required PowerShell version for this session}
    processor_architecure: ${25:# The processor architecture of the session (32 bit vs}
    required_groups: ${26:# For JEA sessions, defines conditional access rules about which groups a connecting user must belong to}
    role_definitions: ${27:# A dict defining the roles for JEA sessions}
    run_as_credential_password: ${28:# The password for I(run_as_credential_username)}
    run_as_credential_username: ${29:# Used to set a RunAs account for the session}
    run_as_virtual_account: ${30:# If C(yes) the session runs as a virtual account}
    run_as_virtual_account_groups: ${31:# If I(run_as_virtual_account=yes) this is a list of groups to add the virtual account to}
    schema_version: ${32:# The schema version of the session configuration file}
    scripts_to_process: ${33:# A list of paths to script files ending in C(}
    security_descriptor_sddl: ${34:# An SDDL string that controls which users and groups can connect to the session}
    session_type: ${35:# Controls what type of session this is}
    startup_script: ${36:# A script that gets run on session startup}
    state: ${37:# The desired state of the configuration}
    thread_apartment_state: ${38:# The apartment state for the PowerShell session}
    thread_options: ${39:# Sets thread options for the session}
    transcript_directory: ${40:# Automatic session transcripts will be written to this directory}
    types_to_process: ${41:# Paths to type definition files to process for each session}
    use_shared_process: ${42:# If C(yes) then the session shares a process for each session}
    user_drive_maximum_size: ${43:# The maximum size of the user drive in bytes}
    variable_definitions: ${44:# A list of dicts where each elements defines a variable for each session}
    visible_aliases: ${45:# The aliases that can be used in the session}
    visible_cmdlets: ${46:# The cmdlets that can be used in the session}
    visible_external_commands: ${47:# The external commands and scripts that can be used in the session}
    visible_functions: ${48:# The functions that can be used in the session}
  tags:
    - community
    - windows
    - win_pssession_configuration]]></content>
  <tabTrigger>community.windows.win_pssession_configuration</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage PSSession Configurations</description>
</snippet>