<snippet>
  <content><![CDATA[- name: ${1:Gather information about the alarms for the specified metric}
  amazon.aws.cloudwatch_metric_alarm_info:
    access_key: ${2:# AWS access key ID}
    action_prefix: ${3:# This parameter can be used to filter the results of the operation to only those alarms that use a certain alarm action}
    alarm_name_prefix: ${4:# An alarm name prefix to retrieve information about alarms that have names that start with this prefix}
    alarm_names: ${5:# The name of the metric}
    alarm_type: ${6:# Specify this to return metric alarms or composite alarms}
    aws_ca_bundle: ${7:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${8:# A dictionary to modify the botocore configuration}
    children_of_alarm_name: ${9:# If specified returns information about the 'children' alarms of the alarm name specified}
    debug_botocore_endpoint_logs: ${10:# Use a C(botocore}
    endpoint_url: ${11:# URL to connect to instead of the default AWS endpoints}
    parents_of_alarm_name: ${12:# If specified returns information about the 'parent' alarms of the alarm name specified}
    profile: ${13:# A named AWS profile to use for authentication}
    region: ${14:# The AWS region to use}
    secret_key: ${15:# AWS secret access key}
    session_token: ${16:# AWS STS session token for use with temporary credentials}
    state_value: ${17:# If specified returns information only about alarms that are currently in the particular state}
    validate_certs: ${18:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - amazon
    - aws
    - cloudwatch_metric_alarm_info]]></content>
  <tabTrigger>amazon.aws.cloudwatch_metric_alarm_info</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Gather information about the alarms for the specified metric</description>
</snippet>