<snippet>
  <content><![CDATA[- name: ${1:Bind leaf selectors to switch policy leaf profiles (infra:LeafS, infra:NodeBlk, infra:RsAccNodePGrep)}
  cisco.aci.aci_switch_leaf_selector:
    description: ${2:# The description to assign to the C(leaf)}
    leaf_profile: ${3:# Name of the Leaf Profile to which we add a Selector}
    leaf: ${4:# Name of Leaf Selector}
    leaf_node_blk: ${5:# Name of Node Block range to be added to Leaf Selector of given Leaf Profile}
    leaf_node_blk_description: ${6:# The description to assign to the C(leaf_node_blk)}
    from: ${7:# Start of Node Block range}
    to: ${8:# Start of Node Block range}
    policy_group: ${9:# Name of the Policy Group to be added to Leaf Selector of given Leaf Profile}
    state: ${10:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${11:# The alias for the current object}
    host: ${12:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${13:# Port number to be used for REST connection}
    username: ${14:# The username to use for authentication}
    password: ${15:# The password to use for authentication}
    private_key: ${16:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${17:# The X}
    output_level: ${18:# Influence the output of this ACI module}
    timeout: ${19:# The socket level timeout in seconds}
    use_proxy: ${20:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${21:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${22:# If C(no), SSL certificates will not be validated}
    output_path: ${23:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${24:# User-defined string for annotating an object}
    owner_key: ${25:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${26:# User-defined string for the ownerTag attribute of an ACI object}
  tags:
    - cisco
    - aci
    - aci_switch_leaf_selector]]></content>
  <tabTrigger>cisco.aci.aci_switch_leaf_selector</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind leaf selectors to switch policy leaf profiles (infra:LeafS, infra:NodeBlk, infra:RsAccNodePGrep)</description>
</snippet>