<snippet>
  <content><![CDATA[- name: ${1:Apply patch files using the GNU patch tool}
  ansible.posix.patch:
    backup: ${2:# Passes C(--backup --version-control=numbered) to patch, producing numbered backup copies}
    basedir: ${3:# Path of a base directory in which the patch file will be applied}
    binary: ${4:# Setting to C(true) will disable patch's heuristic for transforming CRLF line endings into LF}
    dest: ${5:# Path of the file on the remote machine to be patched}
    ignore_whitespace: ${6:# Setting to C(true) will ignore white space changes between patch and input}
    remote_src: ${7:# If C(false), it will search for src at originating/controller machine, if C(true) it will go to the remote/target machine for the C(src)}
    src: ${8:# Path of the patch file as accepted by the GNU patch tool}
    state: ${9:# Whether the patch should be applied or reverted}
    strip: ${10:# Number that indicates the smallest prefix containing leading slashes that will be stripped from each file name found in the patch file}
  tags:
    - patch]]></content>
  <tabTrigger>ansible.posix.patch</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Apply patch files using the GNU patch tool</description>
</snippet>