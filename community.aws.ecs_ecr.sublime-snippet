<snippet>
  <content><![CDATA[- name: ${1:Manage Elastic Container Registry repositories}
  community.aws.ecs_ecr:
    name: ${2:# The name of the repository}
    registry_id: ${3:# AWS account id associated with the registry}
    policy: ${4:# JSON or dict that represents the new policy}
    force_absent: ${5:# If I(force_absent=true), the repository will be removed, even if images are present}
    force_set_policy: ${6:# If I(force_set_policy=false), it prevents setting a policy that would prevent you from setting another policy in the future}
    purge_policy: ${7:# If C(true), remove the policy from the repository}
    image_tag_mutability: ${8:# Configure whether repository should be mutable (ie}
    lifecycle_policy: ${9:# JSON or dict that represents the new lifecycle policy}
    purge_lifecycle_policy: ${10:# if C(true), remove the lifecycle policy from the repository}
    state: ${11:# Create or destroy the repository}
    scan_on_push: ${12:# if C(true), images are scanned for known vulnerabilities after being pushed to the repository}
    access_key: ${13:# AWS access key ID}
    secret_key: ${14:# AWS secret access key}
    session_token: ${15:# AWS STS session token for use with temporary credentials}
    profile: ${16:# A named AWS profile to use for authentication}
    endpoint_url: ${17:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${18:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${19:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${20:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${21:# Use a C(botocore}
    region: ${22:# The AWS region to use}
  tags:
    - community
    - aws
    - ecs_ecr]]></content>
  <tabTrigger>community.aws.ecs_ecr</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Elastic Container Registry repositories</description>
</snippet>