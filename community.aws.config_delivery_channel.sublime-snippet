<snippet>
  <content><![CDATA[- name: ${1:Manage AWS Config delivery channels}
  community.aws.config_delivery_channel:
    name: ${2:# The name of the AWS Config resource}
    state: ${3:# Whether the Config rule should be present or absent}
    s3_bucket: ${4:# The name of the Amazon S3 bucket to which AWS Config delivers configuration snapshots and configuration history files}
    s3_prefix: ${5:# The prefix for the specified Amazon S3 bucket}
    sns_topic_arn: ${6:# The Amazon Resource Name (ARN) of the Amazon SNS topic to which AWS Config sends notifications about configuration changes}
    delivery_frequency: ${7:# The frequency with which AWS Config delivers configuration snapshots}
    access_key: ${8:# AWS access key ID}
    secret_key: ${9:# AWS secret access key}
    session_token: ${10:# AWS STS session token for use with temporary credentials}
    profile: ${11:# A named AWS profile to use for authentication}
    endpoint_url: ${12:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${13:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${14:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${15:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${16:# Use a C(botocore}
    region: ${17:# The AWS region to use}
  tags:
    - community
    - aws
    - config_delivery_channel]]></content>
  <tabTrigger>community.aws.config_delivery_channel</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS Config delivery channels</description>
</snippet>