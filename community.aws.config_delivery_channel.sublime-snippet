<snippet>
  <content><![CDATA[- name: ${1:Manage AWS Config delivery channels}
  community.aws.config_delivery_channel:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    delivery_frequency: ${6:# The frequency with which AWS Config delivers configuration snapshots}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    kms_key_arn: ${8:# The ARN of a KMS key used to encrypt objects delivered by Config}
    name: ${9:# The name of the AWS Config resource}
    profile: ${10:# A named AWS profile to use for authentication}
    region: ${11:# The AWS region to use}
    s3_bucket: ${12:# The name of the Amazon S3 bucket to which AWS Config delivers configuration snapshots and configuration history files}
    s3_prefix: ${13:# The prefix for the specified Amazon S3 bucket}
    secret_key: ${14:# AWS secret access key}
    session_token: ${15:# AWS STS session token for use with temporary credentials}
    sns_topic_arn: ${16:# The Amazon Resource Name (ARN) of the Amazon SNS topic to which AWS Config sends notifications about configuration changes}
    state: ${17:# Whether the Config rule should be present or absent}
    validate_certs: ${18:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - community
    - aws
    - config_delivery_channel]]></content>
  <tabTrigger>community.aws.config_delivery_channel</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS Config delivery channels</description>
</snippet>