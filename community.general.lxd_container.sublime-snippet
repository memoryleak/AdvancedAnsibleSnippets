<snippet>
  <content><![CDATA[- name: ${1:Manage LXD instances}
  community.general.lxd_container:
    architecture: ${2:# The architecture for the instance (for example V(x86_64) or V(i686))}
    client_cert: ${3:# The client certificate file path}
    client_key: ${4:# The client certificate key file path}
    config: ${5:# The config for the instance (for example V('limits}
    devices: ${6:# The devices for the instance (for example V( 'rootfs':  'path': '/dev/kvm', 'type': 'unix-char' ))}
    ephemeral: ${7:# Whether or not the instance is ephemeral (for example V(true) or V(false))}
    force_stop: ${8:# If this is V(true), the C(lxd_container) forces to stop the instance when it stops or restarts the instance}
    ignore_volatile_options: ${9:# If set to V(true), options starting with C(volatile}
    name: ${10:# Name of an instance}
    profiles: ${11:# Profile to be used by the instance}
    project: ${12:# Project of an instance}
    snap_url: ${13:# The unix domain socket path when LXD is installed by snap package manager}
    source: ${14:# The source for the instance (for example V( 'type': 'image', 'mode': 'pull', 'server': 'https://cloud-images}
    state: ${15:# Define the state of an instance}
    target: ${16:# For cluster deployments}
    timeout: ${17:# A timeout for changing the state of the instance}
    trust_password: ${18:# The client trusted password}
    type: ${19:# Instance type can be either V(virtual-machine) or V(container)}
    url: ${20:# The unix domain socket path or the https URL for the LXD server}
    wait_for_container: ${21:# If set to V(true), the tasks will wait till the task reports a success status when performing container operations}
    wait_for_ipv4_addresses: ${22:# If this is V(true), the C(lxd_container) waits until IPv4 addresses are set to the all network interfaces in the instance after starting or restarting}
  tags:
    - community
    - general
    - lxd_container]]></content>
  <tabTrigger>community.general.lxd_container</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage LXD instances</description>
</snippet>