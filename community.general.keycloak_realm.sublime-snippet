<snippet>
  <content><![CDATA[- name: ${1:Allows administration of Keycloak realm via Keycloak API}
  community.general.keycloak_realm:
    state: ${2:# State of the realm}
    id: ${3:# The realm to create}
    realm: ${4:# The realm name}
    access_code_lifespan: ${5:# The realm access code lifespan}
    access_code_lifespan_login: ${6:# The realm access code lifespan login}
    access_code_lifespan_user_action: ${7:# The realm access code lifespan user action}
    access_token_lifespan: ${8:# The realm access token lifespan}
    access_token_lifespan_for_implicit_flow: ${9:# The realm access token lifespan for implicit flow}
    account_theme: ${10:# The realm account theme}
    action_token_generated_by_admin_lifespan: ${11:# The realm action token generated by admin lifespan}
    action_token_generated_by_user_lifespan: ${12:# The realm action token generated by user lifespan}
    admin_events_details_enabled: ${13:# The realm admin events details enabled}
    admin_events_enabled: ${14:# The realm admin events enabled}
    admin_theme: ${15:# The realm admin theme}
    attributes: ${16:# The realm attributes}
    browser_flow: ${17:# The realm browser flow}
    browser_security_headers: ${18:# The realm browser security headers}
    brute_force_protected: ${19:# The realm brute force protected}
    client_authentication_flow: ${20:# The realm client authentication flow}
    client_scope_mappings: ${21:# The realm client scope mappings}
    default_default_client_scopes: ${22:# The realm default default client scopes}
    default_groups: ${23:# The realm default groups}
    default_locale: ${24:# The realm default locale}
    default_optional_client_scopes: ${25:# The realm default optional client scopes}
    default_roles: ${26:# The realm default roles}
    default_signature_algorithm: ${27:# The realm default signature algorithm}
    direct_grant_flow: ${28:# The realm direct grant flow}
    display_name: ${29:# The realm display name}
    display_name_html: ${30:# The realm display name HTML}
    docker_authentication_flow: ${31:# The realm docker authentication flow}
    duplicate_emails_allowed: ${32:# The realm duplicate emails allowed option}
    edit_username_allowed: ${33:# The realm edit username allowed option}
    email_theme: ${34:# The realm email theme}
    enabled: ${35:# The realm enabled option}
    enabled_event_types: ${36:# The realm enabled event types}
    events_enabled: ${37:# Enables or disables login events for this realm}
    events_expiration: ${38:# The realm events expiration}
    events_listeners: ${39:# The realm events listeners}
    failure_factor: ${40:# The realm failure factor}
    internationalization_enabled: ${41:# The realm internationalization enabled option}
    login_theme: ${42:# The realm login theme}
    login_with_email_allowed: ${43:# The realm login with email allowed option}
    max_delta_time_seconds: ${44:# The realm max delta time in seconds}
    max_failure_wait_seconds: ${45:# The realm max failure wait in seconds}
    minimum_quick_login_wait_seconds: ${46:# The realm minimum quick login wait in seconds}
    not_before: ${47:# The realm not before}
    offline_session_idle_timeout: ${48:# The realm offline session idle timeout}
    offline_session_max_lifespan: ${49:# The realm offline session max lifespan}
    offline_session_max_lifespan_enabled: ${50:# The realm offline session max lifespan enabled option}
    otp_policy_algorithm: ${51:# The realm otp policy algorithm}
    otp_policy_digits: ${52:# The realm otp policy digits}
    otp_policy_initial_counter: ${53:# The realm otp policy initial counter}
    otp_policy_look_ahead_window: ${54:# The realm otp policy look ahead window}
    otp_policy_period: ${55:# The realm otp policy period}
    otp_policy_type: ${56:# The realm otp policy type}
    otp_supported_applications: ${57:# The realm otp supported applications}
    password_policy: ${58:# The realm password policy}
    permanent_lockout: ${59:# The realm permanent lockout}
    quick_login_check_milli_seconds: ${60:# The realm quick login check in milliseconds}
    refresh_token_max_reuse: ${61:# The realm refresh token max reuse}
    registration_allowed: ${62:# The realm registration allowed option}
    registration_email_as_username: ${63:# The realm registration email as username option}
    registration_flow: ${64:# The realm registration flow}
    remember_me: ${65:# The realm remember me option}
    reset_credentials_flow: ${66:# The realm reset credentials flow}
    reset_password_allowed: ${67:# The realm reset password allowed option}
    revoke_refresh_token: ${68:# The realm revoke refresh token option}
    smtp_server: ${69:# The realm smtp server}
    ssl_required: ${70:# The realm ssl required option}
    sso_session_idle_timeout: ${71:# The realm sso session idle timeout}
    sso_session_idle_timeout_remember_me: ${72:# The realm sso session idle timeout remember me}
    sso_session_max_lifespan: ${73:# The realm sso session max lifespan}
    sso_session_max_lifespan_remember_me: ${74:# The realm sso session max lifespan remember me}
    supported_locales: ${75:# The realm supported locales}
    user_managed_access_allowed: ${76:# The realm user managed access allowed option}
    verify_email: ${77:# The realm verify email option}
    wait_increment_seconds: ${78:# The realm wait increment in seconds}
    auth_keycloak_url: ${79:# URL to the Keycloak instance}
    auth_client_id: ${80:# OpenID Connect I(client_id) to authenticate to the API with}
    auth_realm: ${81:# Keycloak realm name to authenticate to for API access}
    auth_client_secret: ${82:# Client Secret to use in conjunction with I(auth_client_id) (if required)}
    auth_username: ${83:# Username to authenticate for API access with}
    auth_password: ${84:# Password to authenticate for API access with}
    token: ${85:# Authentication token for Keycloak API}
    validate_certs: ${86:# Verify TLS certificates (do not disable this in production)}
    connection_timeout: ${87:# Controls the HTTP connections timeout period (in seconds) to Keycloak API}
    http_agent: ${88:# Configures the HTTP User-Agent header}
  tags:
    - community
    - general
    - keycloak_realm]]></content>
  <tabTrigger>community.general.keycloak_realm</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Allows administration of Keycloak realm via Keycloak API</description>
</snippet>