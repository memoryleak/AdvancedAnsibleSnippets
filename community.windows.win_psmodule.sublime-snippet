<snippet>
  <content><![CDATA[- name: ${1:Adds or removes a Windows PowerShell module}
  community.windows.win_psmodule:
    accept_license: ${2:# Accepts the module's license}
    allow_clobber: ${3:# If C(yes) allows install modules that contains commands those have the same names as commands that already exists}
    allow_prerelease: ${4:# If C(yes) installs modules marked as prereleases}
    force: ${5:# Overrides warning messages about module installation conflicts}
    maximum_version: ${6:# The maximum version of the PowerShell module that has to be installed}
    minimum_version: ${7:# The minimum version of the PowerShell module that has to be installed}
    name: ${8:# Name of the Windows PowerShell module that has to be installed}
    password: ${9:# Password to authenticate against private repository}
    repository: ${10:# Name of the custom repository to use}
    required_version: ${11:# The exact version of the PowerShell module that has to be installed}
    skip_publisher_check: ${12:# If C(yes), allows you to install a different version of a module that already exists on your computer in the case when a different one is not digitally signed by a trusted publisher and the newest existing module is digitally signed by a trusted publisher}
    state: ${13:# If C(present) a new module is installed}
    username: ${14:# Username to authenticate against private repository}
  tags:
    - community
    - windows
    - win_psmodule]]></content>
  <tabTrigger>community.windows.win_psmodule</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Adds or removes a Windows PowerShell module</description>
</snippet>