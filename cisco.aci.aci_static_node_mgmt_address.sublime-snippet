<snippet>
  <content><![CDATA[- name: ${1:In band or Out of band management IP address}
  cisco.aci.aci_static_node_mgmt_address:
    epg: ${2:# The name of the end point group}
    pod_id: ${3:# The pod number of the leaf, spine or APIC}
    node_id: ${4:# ACI Fabric's node id of a leaf, spine or APIC}
    ipv4_address: ${5:# ipv4 address of in band/out of band mgmt}
    ipv4_gw: ${6:# Gateway address of in band / out of band mgmt network}
    ipv6_address: ${7:# ipv6 address of in band/out of band  mgmt}
    ipv6_gw: ${8:# GW address of in band/out of band mgmt}
    type: ${9:# type of management interface}
    state: ${10:# Use C(present) or C(absent) for adding or removing}
    host: ${11:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${12:# Port number to be used for REST connection}
    username: ${13:# The username to use for authentication}
    password: ${14:# The password to use for authentication}
    private_key: ${15:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${16:# The X}
    output_level: ${17:# Influence the output of this ACI module}
    timeout: ${18:# The socket level timeout in seconds}
    use_proxy: ${19:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${20:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${21:# If C(no), SSL certificates will not be validated}
    output_path: ${22:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${23:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_static_node_mgmt_address]]></content>
  <tabTrigger>cisco.aci.aci_static_node_mgmt_address</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>In band or Out of band management IP address</description>
</snippet>