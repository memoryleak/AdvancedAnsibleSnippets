<snippet>
  <content><![CDATA[- name: ${1:Manage FreeIPA sudo rule}
  community.general.ipa_sudorule:
    cmd: ${2:# List of commands assigned to the rule}
    cmdcategory: ${3:# Command category the rule applies to}
    cmdgroup: ${4:# List of command groups assigned to the rule}
    cn: ${5:# Canonical name}
    deny_cmd: ${6:# List of denied commands assigned to the rule}
    deny_cmdgroup: ${7:# List of denied command groups assigned to the rule}
    description: ${8:# Description of the sudo rule}
    host: ${9:# List of hosts assigned to the rule}
    hostcategory: ${10:# Host category the rule applies to}
    hostgroup: ${11:# List of host groups assigned to the rule}
    ipa_host: ${12:# IP or hostname of IPA server}
    ipa_pass: ${13:# Password of administrative user}
    ipa_port: ${14:# Port of FreeIPA / IPA server}
    ipa_prot: ${15:# Protocol used by IPA server}
    ipa_timeout: ${16:# Specifies idle timeout (in seconds) for the connection}
    ipa_user: ${17:# Administrative account used on IPA server}
    runasextusers: ${18:# List of external RunAs users}
    runasgroupcategory: ${19:# RunAs Group category the rule applies to}
    runasusercategory: ${20:# RunAs User category the rule applies to}
    state: ${21:# State to ensure}
    sudoopt: ${22:# List of options to add to the sudo rule}
    user: ${23:# List of users assigned to the rule}
    usercategory: ${24:# User category the rule applies to}
    usergroup: ${25:# List of user groups assigned to the rule}
    validate_certs: ${26:# This only applies if O(ipa_prot) is V(https)}
  tags:
    - community
    - general
    - ipa_sudorule]]></content>
  <tabTrigger>community.general.ipa_sudorule</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage FreeIPA sudo rule</description>
</snippet>