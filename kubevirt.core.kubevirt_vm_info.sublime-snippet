<snippet>
  <content><![CDATA[- name: ${1:Describe KubeVirt VirtualMachines}
  kubevirt.core.kubevirt_vm_info:
    api_key: ${2:# Token used to authenticate with the API}
    api_version: ${3:# Use this to set the API version of KubeVirt}
    ca_cert: ${4:# Path to a CA certificate used to authenticate with the API}
    client_cert: ${5:# Path to a certificate used to authenticate with the API}
    client_key: ${6:# Path to a key file used to authenticate with the API}
    context: ${7:# The name of a context found in the config file}
    field_selectors: ${8:# List of field selectors to use to filter results}
    host: ${9:# Provide a URL for accessing the API}
    impersonate_groups: ${10:# Group(s) to impersonate for the operation}
    impersonate_user: ${11:# Username to impersonate for the operation}
    kubeconfig: ${12:# Path to an existing Kubernetes config file}
    label_selectors: ${13:# List of label selectors to use to filter results}
    name: ${14:# Specify the name of the C(VirtualMachine)}
    namespace: ${15:# Specify the namespace of C(VirtualMachines)}
    no_proxy: ${16:# The comma separated list of hosts/domains/IP/CIDR that shouldn't go through proxy}
    password: ${17:# Provide a password for authenticating with the API}
    persist_config: ${18:# Whether or not to save the kube config refresh tokens}
    proxy: ${19:# The URL of an HTTP proxy to use for the connection}
    proxy_headers: ${20:# The Header used for the HTTP proxy}
    running: ${21:# Specify whether the C(VirtualMachine) should be running or not}
    username: ${22:# Provide a username for authenticating with the API}
    validate_certs: ${23:# Whether or not to verify the API server's SSL certificates}
    wait: ${24:# Whether to wait for the C(VirtualMachine) to end up in the ready state}
    wait_sleep: ${25:# Number of seconds to sleep between checks}
    wait_timeout: ${26:# How long in seconds to wait for the resource to end up in the ready state}
  tags:
    - kubevirt
    - core
    - kubevirt_vm_info]]></content>
  <tabTrigger>kubevirt.core.kubevirt_vm_info</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Describe KubeVirt VirtualMachines</description>
</snippet>