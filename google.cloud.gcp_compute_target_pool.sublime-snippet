<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP TargetPool}
  google.cloud.gcp_compute_target_pool:
    state: ${2:# Whether the given object should exist in GCP}
    backup_pool: ${3:# This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]}
    description: ${4:# An optional description of this resource}
    failover_ratio: ${5:# This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i}
    health_check: ${6:# A reference to a HttpHealthCheck resource}
    instances: ${7:# A list of virtual machine instances serving this pool}
    name: ${8:# Name of the resource}
    session_affinity: ${9:# Session affinity option}
    region: ${10:# The region where the target pool resides}
    project: ${11:# The Google Cloud Platform project to use}
    auth_kind: ${12:# The type of credential used}
    service_account_contents: ${13:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${14:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${15:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${16:# Array of scopes to be used}
    env_type: ${17:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_compute_target_pool]]></content>
  <tabTrigger>google.cloud.gcp_compute_target_pool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP TargetPool</description>
</snippet>