<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP TargetPool}
  google.cloud.gcp_compute_target_pool:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    backup_pool: ${4:# This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]}
    description: ${5:# An optional description of this resource}
    env_type: ${6:# Specifies which Ansible environment you're running this module within}
    failover_ratio: ${7:# This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i}
    health_check: ${8:# A reference to a HttpHealthCheck resource}
    instances: ${9:# A list of virtual machine instances serving this pool}
    name: ${10:# Name of the resource}
    project: ${11:# The Google Cloud Platform project to use}
    region: ${12:# The region where the target pool resides}
    scopes: ${13:# Array of scopes to be used}
    service_account_contents: ${14:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${15:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${16:# The path of a Service Account JSON file if serviceaccount is selected as type}
    session_affinity: ${17:# Session affinity option}
    state: ${18:# Whether the given object should exist in GCP}
  tags:
    - google
    - cloud
    - gcp_compute_target_pool]]></content>
  <tabTrigger>google.cloud.gcp_compute_target_pool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP TargetPool</description>
</snippet>