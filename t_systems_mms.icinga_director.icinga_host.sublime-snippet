<snippet>
  <content><![CDATA[- name: ${1:Manage hosts in Icinga2}
  t_systems_mms.icinga_director.icinga_host:
    accept_config: ${2:# Whether the agent is configured to accept config}
    address: ${3:# Host address}
    address6: ${4:# Host IPv6 address}
    append: ${5:# Do not overwrite the whole object but instead append the defined properties}
    check_command: ${6:# The name of the check command}
    check_interval: ${7:# Your regular check interval}
    check_period: ${8:# The name of a time period which determines when this object should be monitored}
    check_timeout: ${9:# Check command timeout in seconds}
    command_endpoint: ${10:# The endpoint where commands are executed on}
    disabled: ${11:# Disabled objects will not be deployed}
    display_name: ${12:# Alternative name for this host}
    enable_active_checks: ${13:# Whether to actively check this object}
    enable_event_handler: ${14:# Whether to enable event handlers this object}
    enable_flapping: ${15:# Whether flap detection is enabled on this object}
    enable_notifications: ${16:# Whether to send notifications for this object}
    enable_passive_checks: ${17:# Whether to accept passive check results for this object}
    enable_perfdata: ${18:# Whether to process performance data provided by this object}
    event_command: ${19:# Event command for host which gets called on every check execution if one of these conditions matches}
    flapping_threshold_high: ${20:# Flapping upper bound in percent for a service to be considered flapping}
    flapping_threshold_low: ${21:# Flapping lower bound in percent for a service to be considered not flapping}
    groups: ${22:# Hostgroups that should be directly assigned to this node}
    has_agent: ${23:# Whether this host has the Icinga 2 Agent installed}
    icon_image: ${24:# An URL pointing to an icon for this object}
    icon_image_alt: ${25:# Alternative text to be shown in case above icon is missing}
    imports: ${26:# Choose a Host Template}
    master_should_connect: ${27:# Whether the parent (master) node should actively try to connect to this agent}
    max_check_attempts: ${28:# Defines after how many check attempts a new hard state is reached}
    notes: ${29:# Additional notes for this object}
    notes_url: ${30:# An URL pointing to additional notes for this object}
    object_name: ${31:# Icinga object name for this host}
    retry_interval: ${32:# Retry interval, will be applied after a state change unless the next hard state is reached}
    state: ${33:# Apply feature state}
    vars: ${34:# Custom properties of the host}
    volatile: ${35:# Whether this check is volatile}
    zone: ${36:# Set the zone}
    url: ${37:# HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host}
    force: ${38:# If C(yes) do not get a cached copy}
    http_agent: ${39:# Header to identify as, generally appears in web server logs}
    use_proxy: ${40:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${41:# If C(no), SSL certificates will not be validated}
    url_username: ${42:# The username for use in HTTP basic authentication}
    url_password: ${43:# The password for use in HTTP basic authentication}
    force_basic_auth: ${44:# Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header}
    client_cert: ${45:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${46:# PEM formatted file that contains your private key to be used for SSL client authentication}
    use_gssapi: ${47:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
  tags:
    - t_systems_mms
    - icinga_director
    - icinga_host]]></content>
  <tabTrigger>t_systems_mms.icinga_director.icinga_host</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage hosts in Icinga2</description>
</snippet>