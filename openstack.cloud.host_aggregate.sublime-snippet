<snippet>
  <content><![CDATA[- name: ${1:Manage OpenStack host aggregates}
  openstack.cloud.host_aggregate:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    availability_zone: ${5:# Availability zone to create aggregate into}
    ca_cert: ${6:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${7:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${8:# A path to a client key to use as part of the SSL transaction}
    cloud: ${9:# Named cloud or cloud config to operate against}
    hosts: ${10:# List of hosts to set for an aggregate}
    interface: ${11:# Endpoint URL type to fetch from the service catalog}
    metadata: ${12:# Metadata dict}
    name: ${13:# Name of the aggregate}
    purge_hosts: ${14:# Whether hosts not in I(hosts) should be removed from the aggregate}
    region_name: ${15:# Name of the region}
    sdk_log_level: ${16:# Log level of the OpenStackSDK}
    sdk_log_path: ${17:# Path to the logfile of the OpenStackSDK}
    state: ${18:# Should the resource be present or absent}
    timeout: ${19:# How long should ansible wait for the requested resource}
    validate_certs: ${20:# Whether or not SSL API requests should be verified}
    wait: ${21:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - host_aggregate]]></content>
  <tabTrigger>openstack.cloud.host_aggregate</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage OpenStack host aggregates</description>
</snippet>