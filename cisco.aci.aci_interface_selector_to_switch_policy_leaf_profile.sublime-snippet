<snippet>
  <content><![CDATA[- name: ${1:Bind interface selector profiles to switch policy leaf profiles (infra:RsAccPortP)}
  cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:
    leaf_profile: ${2:# Name of the Leaf Profile to which we add a Selector}
    interface_selector: ${3:# Name of Interface Profile Selector to be added and associated with the Leaf Profile}
    state: ${4:# Use C(present) or C(absent) for adding or removing}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${6:# Port number to be used for REST connection}
    username: ${7:# The username to use for authentication}
    password: ${8:# The password to use for authentication}
    private_key: ${9:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${10:# The X}
    output_level: ${11:# Influence the output of this ACI module}
    timeout: ${12:# The socket level timeout in seconds}
    use_proxy: ${13:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${14:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${15:# If C(no), SSL certificates will not be validated}
    output_path: ${16:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${17:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_interface_selector_to_switch_policy_leaf_profile]]></content>
  <tabTrigger>cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind interface selector profiles to switch policy leaf profiles (infra:RsAccPortP)</description>
</snippet>