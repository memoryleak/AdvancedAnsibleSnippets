<snippet>
  <content><![CDATA[- name: ${1:Manage project members on GitLab Server}
  community.general.gitlab_project_members:
    access_level: ${2:# The access level for the user}
    api_job_token: ${3:# GitLab CI job token for logging in}
    api_oauth_token: ${4:# GitLab OAuth token for logging in}
    api_password: ${5:# The password to use for authentication against the API}
    api_token: ${6:# GitLab access token with API permissions}
    api_url: ${7:# The resolvable endpoint for the API}
    api_username: ${8:# The username to use for authentication against the API}
    ca_path: ${9:# The CA certificates bundle to use to verify GitLab server certificate}
    gitlab_user: ${10:# A username or a list of usernames to add to/remove from the GitLab project}
    gitlab_users_access: ${11:# Provide a list of user to access level mappings}
    project: ${12:# The name (or full path) of the GitLab project the member is added to/removed from}
    purge_users: ${13:# Adds/remove users of the given access_level to match the given O(gitlab_user)/O(gitlab_users_access) list}
    state: ${14:# State of the member in the project}
    validate_certs: ${15:# Whether or not to validate SSL certs when supplying a HTTPS endpoint}
  tags:
    - community
    - general
    - gitlab_project_members]]></content>
  <tabTrigger>community.general.gitlab_project_members</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage project members on GitLab Server</description>
</snippet>