<snippet>
  <content><![CDATA[- name: ${1:Manages MongoDB Document Schema Validators}
  community.mongodb.mongodb_schema:
    action: ${2:# The validation action for MongoDB to perform when handling invalid documents}
    atlas_auth: ${3:# Authentication path intended for MongoDB Atlas Instances}
    auth_mechanism: ${4:# Authentication type}
    collection: ${5:# The collection to work with}
    connection_options: ${6:# Additional connection options}
    db: ${7:# The database to work with}
    debug: ${8:# Enable additional debugging output}
    level: ${9:# The validation level MongoDB should apply when updating existing documents}
    login_database: ${10:# The database where login credentials are stored}
    login_host: ${11:# The host running MongoDB instance to login to}
    login_password: ${12:# The password used to authenticate with}
    login_port: ${13:# The MongoDB server port to login to}
    login_user: ${14:# The MongoDB user to login with}
    properties: ${15:# Individual property specification}
    replica_set: ${16:# Replicaset name}
    required: ${17:# List of fields that are required}
    ssl: ${18:# Whether to use an SSL connection when connecting to the database}
    ssl_ca_certs: ${19:# The ssl_ca_certs option takes a path to a CA file}
    ssl_cert_reqs: ${20:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_certfile: ${21:# Present a client certificate using the ssl_certfile option}
    ssl_crlfile: ${22:# The ssl_crlfile option takes a path to a CRL file}
    ssl_keyfile: ${23:# Private key for the client certificate}
    ssl_pem_passphrase: ${24:# Passphrase to decrypt encrypted private keys}
    state: ${25:# The state of the validator}
    strict_compatibility: ${26:# Enforce strict requirements for pymongo and MongoDB software versions}
  tags:
    - community
    - mongodb
    - mongodb_schema]]></content>
  <tabTrigger>community.mongodb.mongodb_schema</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages MongoDB Document Schema Validators</description>
</snippet>