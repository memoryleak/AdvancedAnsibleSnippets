<snippet>
  <content><![CDATA[- name: ${1:Manage Fabric Wide Settings (infra:SetPol)}
  cisco.aci.aci_fabric_wide_settings:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    disable_remote_ep_learning: ${4:# Whether to disable remote endpoint learning in VRFs containing external bridged/routed domains}
    enforce_domain_validation: ${5:# Whether to perform a validation check if a static path is added but no domain is associated to an EPG}
    enforce_epg_vlan_validation: ${6:# Whether to perform a validation check that prevents overlapping VLAN pools from being associated to an EPG}
    enforce_subnet_check: ${7:# Whether to disable IP address learning on the outside of subnets configured in a VRF, for all VRFs}
    host: ${8:# IP Address or hostname of APIC resolvable by Ansible control host}
    leaf_opflex_client_auth: ${9:# Whether to enforce Opflex client certificate authentication on leaf switches for GOLF and Linux}
    leaf_ssl_opflex: ${10:# Whether to enable SSL Opflex transport for leaf switches}
    opflex_ssl_versions: ${11:# Which versions of TLS to enable for Opflex}
    output_level: ${12:# Influence the output of this ACI module}
    output_path: ${13:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${14:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${15:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${16:# The password to use for authentication}
    port: ${17:# Port number to be used for REST connection}
    private_key: ${18:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    reallocate_gipo: ${19:# Whether to reallocate some non-stretched BD gipos to make room for stretched BDs}
    restrict_infra_vlan_traffic: ${20:# Whether to restrict infra VLAN traffic to only specified network paths}
    spine_opflex_client_auth: ${21:# Whether to enforce Opflex client certificate authentication on spine switches for GOLF and Linux}
    spine_ssl_opflex: ${22:# Whether to enable SSL Opflex transport for spine switches}
    state: ${23:# Use C(present) for updating configuration}
    suppress_previous: ${24:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${25:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    timeout: ${26:# The socket level timeout in seconds}
    use_proxy: ${27:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${28:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${29:# The username to use for authentication}
    validate_certs: ${30:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_fabric_wide_settings]]></content>
  <tabTrigger>cisco.aci.aci_fabric_wide_settings</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Fabric Wide Settings (infra:SetPol)</description>
</snippet>