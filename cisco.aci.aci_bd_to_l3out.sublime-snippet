<snippet>
  <content><![CDATA[- name: ${1:Bind Bridge Domain to L3 Out (fv:RsBDToOut)}
  cisco.aci.aci_bd_to_l3out:
    annotation: ${2:# User-defined string for annotating an object}
    bd: ${3:# The name of the Bridge Domain}
    certificate_name: ${4:# The X}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    l3out: ${6:# The name of the l3out to associate with th Bridge Domain}
    output_level: ${7:# Influence the output of this ACI module}
    output_path: ${8:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${9:# The password to use for authentication}
    port: ${10:# Port number to be used for REST connection}
    private_key: ${11:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${12:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${13:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${14:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    tenant: ${15:# The name of the Tenant}
    timeout: ${16:# The socket level timeout in seconds}
    use_proxy: ${17:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${18:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${19:# The username to use for authentication}
    validate_certs: ${20:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_bd_to_l3out]]></content>
  <tabTrigger>cisco.aci.aci_bd_to_l3out</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind Bridge Domain to L3 Out (fv:RsBDToOut)</description>
</snippet>