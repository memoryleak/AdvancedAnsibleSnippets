<snippet>
  <content><![CDATA[- name: ${1:Resource module for Pnp Workflow}
  cisco.dnac.pnp_workflow:
    _id: ${2:# Pnp Workflow's _id}
    addToInventory: ${3:# AddToInventory flag}
    addedOn: ${4:# Pnp Workflow's addedOn}
    configId: ${5:# Pnp Workflow's configId}
    currTaskIdx: ${6:# Pnp Workflow's currTaskIdx}
    description: ${7:# Pnp Workflow's description}
    endTime: ${8:# Pnp Workflow's endTime}
    execTime: ${9:# Pnp Workflow's execTime}
    id: ${10:# Id path parameter}
    imageId: ${11:# Pnp Workflow's imageId}
    instanceType: ${12:# Pnp Workflow's instanceType}
    lastupdateOn: ${13:# Pnp Workflow's lastupdateOn}
    name: ${14:# Pnp Workflow's name}
    startTime: ${15:# Pnp Workflow's startTime}
    state_: ${16:# Pnp Workflow's state}
    tasks: ${17:# Pnp Workflow's tasks}
    tenantId: ${18:# Pnp Workflow's tenantId}
    type: ${19:# Pnp Workflow's type}
    useState: ${20:# Pnp Workflow's useState}
    version: ${21:# Pnp Workflow's version}
    dnac_host: ${22:# The Cisco DNA Center hostname}
    dnac_port: ${23:# The Cisco DNA Center port}
    dnac_username: ${24:# The Cisco DNA Center username to authenticate}
    dnac_password: ${25:# The Cisco DNA Center password to authenticate}
    dnac_verify: ${26:# Flag to enable or disable SSL certificate verification}
    dnac_version: ${27:# Informs the SDK which version of Cisco DNA Center to use}
    dnac_debug: ${28:# Flag for Cisco DNA Center SDK to enable debugging}
    validate_response_schema: ${29:# Flag for Cisco DNA Center SDK to enable the validation of request bodies against a JSON schema}
  tags:
    - cisco
    - dnac
    - pnp_workflow]]></content>
  <tabTrigger>cisco.dnac.pnp_workflow</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Resource module for Pnp Workflow</description>
</snippet>