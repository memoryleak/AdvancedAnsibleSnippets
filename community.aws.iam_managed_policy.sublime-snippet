<snippet>
  <content><![CDATA[- name: ${1:Manage User Managed IAM policies}
  community.aws.iam_managed_policy:
    policy_name: ${2:# The name of the managed policy}
    policy_description: ${3:# A helpful description of this policy, this value is immutable and only set when creating a new policy}
    policy: ${4:# A properly json formatted policy}
    make_default: ${5:# Make this revision the default revision}
    only_version: ${6:# Remove all other non default revisions, if this is used with C(make_default) it will result in all other versions of this policy being deleted}
    state: ${7:# Should this managed policy be present or absent}
    access_key: ${8:# AWS access key ID}
    secret_key: ${9:# AWS secret access key}
    session_token: ${10:# AWS STS session token for use with temporary credentials}
    profile: ${11:# A named AWS profile to use for authentication}
    endpoint_url: ${12:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${13:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${14:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${15:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${16:# Use a C(botocore}
    region: ${17:# The AWS region to use}
  tags:
    - community
    - aws
    - iam_managed_policy]]></content>
  <tabTrigger>community.aws.iam_managed_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage User Managed IAM policies</description>
</snippet>