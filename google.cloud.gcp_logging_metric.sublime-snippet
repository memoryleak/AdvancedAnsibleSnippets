<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Metric}
  google.cloud.gcp_logging_metric:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    bucket_options: ${4:# The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it describes the bucket boundaries used to create a histogram of the extracted values}
    description: ${5:# A description of this metric, which is used in documentation}
    env_type: ${6:# Specifies which Ansible environment you're running this module within}
    filter: ${7:# An advanced logs filter (U(https://cloud}
    label_extractors: ${8:# A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value}
    metric_descriptor: ${9:# The metric descriptor associated with the logs-based metric}
    name: ${10:# The client-assigned metric identifier}
    project: ${11:# The Google Cloud Platform project to use}
    scopes: ${12:# Array of scopes to be used}
    service_account_contents: ${13:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${14:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${15:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${16:# Whether the given object should exist in GCP}
    value_extractor: ${17:# A valueExtractor is required when using a distribution logs-based metric to extract the values to record from a log entry}
  tags:
    - google
    - cloud
    - gcp_logging_metric]]></content>
  <tabTrigger>google.cloud.gcp_logging_metric</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Metric</description>
</snippet>