<snippet>
  <content><![CDATA[- name: ${1:Ansible module for RouterOS API}
  community.routeros.api:
    add: ${2:# Will add selected arguments in selected path to RouterOS config}
    ca_path: ${3:# PEM formatted file that contains a CA certificate to be used for certificate validation}
    cmd: ${4:# Execute any/arbitrary command in selected path, after the command we can add C(}
    encoding: ${5:# Use the specified encoding when communicating with the RouterOS device}
    extended_query: ${6:# Extended query given path for selected query attributes from RouterOS API}
    force_no_cert: ${7:# Set to V(true) to connect without a certificate when O(tls=true)}
    hostname: ${8:# RouterOS hostname API}
    password: ${9:# RouterOS user password}
    path: ${10:# Main path for all other arguments}
    port: ${11:# RouterOS api port}
    query: ${12:# Query given path for selected query attributes from RouterOS aip}
    remove: ${13:# Remove config/value from RouterOS by '}
    timeout: ${14:# Timeout for the request}
    tls: ${15:# If is set TLS will be used for RouterOS API connection}
    update: ${16:# Update config/value in RouterOS by '}
    username: ${17:# RouterOS login user}
    validate_cert_hostname: ${18:# Set to V(true) to validate hostnames in certificates}
    validate_certs: ${19:# Set to V(false) to skip validation of TLS certificates}
  tags:
    - community
    - routeros
    - api]]></content>
  <tabTrigger>community.routeros.api</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Ansible module for RouterOS API</description>
</snippet>