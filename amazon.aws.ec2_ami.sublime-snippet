<snippet>
  <content><![CDATA[- name: ${1:Create or destroy an image (AMI) in EC2}
  amazon.aws.ec2_ami:
    instance_id: ${2:# Instance ID to create the AMI from}
    name: ${3:# The name of the new AMI}
    architecture: ${4:# The target architecture of the image to register}
    kernel_id: ${5:# The target kernel id of the image to register}
    virtualization_type: ${6:# The virtualization type of the image to register}
    root_device_name: ${7:# The root device name of the image to register}
    wait: ${8:# Wait for the AMI to be in state 'available' before returning}
    wait_timeout: ${9:# How long before wait gives up, in seconds}
    state: ${10:# Register or deregister an AMI}
    description: ${11:# Human-readable string describing the contents and purpose of the AMI}
    no_reboot: ${12:# Flag indicating that the bundling process should not attempt to shutdown the instance before bundling}
    image_id: ${13:# Image ID to be deregistered}
    device_mapping: ${14:# List of device hashes/dictionaries with custom configurations (same block-device-mapping parameters)}
    delete_snapshot: ${15:# Delete snapshots when deregistering the AMI}
    launch_permissions: ${16:# Users and groups that should be able to launch the AMI}
    image_location: ${17:# The S3 location of an image to use for the AMI}
    enhanced_networking: ${18:# A boolean representing whether enhanced networking with ENA is enabled or not}
    billing_products: ${19:# A list of valid billing codes}
    ramdisk_id: ${20:# The ID of the RAM disk}
    sriov_net_support: ${21:# Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI}
    access_key: ${22:# AWS access key ID}
    secret_key: ${23:# AWS secret access key}
    session_token: ${24:# AWS STS session token for use with temporary credentials}
    profile: ${25:# A named AWS profile to use for authentication}
    endpoint_url: ${26:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${27:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${28:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${29:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${30:# Use a C(botocore}
    region: ${31:# The AWS region to use}
    tags: ${32:# A dictionary representing the tags to be applied to the resource}
    purge_tags: ${33:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - amazon
    - aws
    - ec2_ami]]></content>
  <tabTrigger>amazon.aws.ec2_ami</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create or destroy an image (AMI) in EC2</description>
</snippet>