<snippet>
  <content><![CDATA[- name: ${1:Manage AWS Batch Compute Environments}
  community.aws.batch_compute_environment:
    compute_environment_name: ${2:# The name for your compute environment}
    type: ${3:# The type of the compute environment}
    state: ${4:# Describes the desired state}
    compute_environment_state: ${5:# The state of the compute environment}
    service_role: ${6:# The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf}
    compute_resource_type: ${7:# The type of compute resource}
    minv_cpus: ${8:# The minimum number of EC2 vCPUs that an environment should maintain}
    maxv_cpus: ${9:# The maximum number of EC2 vCPUs that an environment can reach}
    desiredv_cpus: ${10:# The desired number of EC2 vCPUS in the compute environment}
    instance_types: ${11:# The instance types that may be launched}
    image_id: ${12:# The Amazon Machine Image (AMI) ID used for instances launched in the compute environment}
    subnets: ${13:# The VPC subnets into which the compute resources are launched}
    security_group_ids: ${14:# The EC2 security groups that are associated with instances launched in the compute environment}
    ec2_key_pair: ${15:# The EC2 key pair that is used for instances launched in the compute environment}
    instance_role: ${16:# The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment}
    tags: ${17:# Key-value pair tags to be applied to resources that are launched in the compute environment}
    bid_percentage: ${18:# The minimum percentage that a Spot Instance price must be when compared with the On-Demand price for that instance type before instances are launched}
    spot_iam_fleet_role: ${19:# The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment}
    access_key: ${20:# AWS access key ID}
    secret_key: ${21:# AWS secret access key}
    session_token: ${22:# AWS STS session token for use with temporary credentials}
    profile: ${23:# A named AWS profile to use for authentication}
    endpoint_url: ${24:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${25:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${26:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${27:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${28:# Use a C(botocore}
    region: ${29:# The AWS region to use}
  tags:
    - community
    - aws
    - batch_compute_environment]]></content>
  <tabTrigger>community.aws.batch_compute_environment</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS Batch Compute Environments</description>
</snippet>