<snippet>
  <content><![CDATA[- name: ${1:Manage an identity provider in a OpenStack cloud}
  openstack.cloud.federation_idp:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${6:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${7:# A path to a client key to use as part of the SSL transaction}
    cloud: ${8:# Named cloud or cloud config to operate against}
    description: ${9:# The description of the identity provider}
    domain_id: ${10:# The ID of a domain that is associated with the identity provider}
    id: ${11:# The ID (and name) of the identity provider}
    interface: ${12:# Endpoint URL type to fetch from the service catalog}
    is_enabled: ${13:# Whether the identity provider is enabled or not}
    region_name: ${14:# Name of the region}
    remote_ids: ${15:# List of the unique identity provider's remote IDs}
    sdk_log_level: ${16:# Log level of the OpenStackSDK}
    sdk_log_path: ${17:# Path to the logfile of the OpenStackSDK}
    state: ${18:# Whether the identity provider should be C(present) or C(absent)}
    timeout: ${19:# How long should ansible wait for the requested resource}
    validate_certs: ${20:# Whether or not SSL API requests should be verified}
    wait: ${21:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - federation_idp]]></content>
  <tabTrigger>openstack.cloud.federation_idp</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage an identity provider in a OpenStack cloud</description>
</snippet>