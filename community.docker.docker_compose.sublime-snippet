<snippet>
  <content><![CDATA[- name: ${1:Manage multi-container Docker applications with Docker Compose V1}
  community.docker.docker_compose:
    api_version: ${2:# The version of the Docker API running on the Docker Host}
    build: ${3:# Use with O(state=present) to always build images prior to starting the application}
    ca_path: ${4:# Use a CA certificate when performing server verification by providing the path to a CA certificate file}
    client_cert: ${5:# Path to the client's TLS certificate file}
    client_key: ${6:# Path to the client's TLS key file}
    debug: ${7:# Debug mode}
    definition: ${8:# Compose file describing one or more services, networks and volumes}
    dependencies: ${9:# When O(state) is V(present) specify whether or not to include linked services}
    docker_host: ${10:# The URL or Unix socket path used to connect to the Docker API}
    env_file: ${11:# By default environment files are loaded from a C(}
    files: ${12:# List of Compose file names relative to O(project_src)}
    hostname_check: ${13:# Whether or not to check the Docker daemon's hostname against the name provided in the client certificate}
    nocache: ${14:# Use with the O(build) option to ignore the cache during the image build process}
    profiles: ${15:# List of profiles to enable when starting services}
    project_name: ${16:# Provide a project name}
    project_src: ${17:# Path to a directory containing a C(docker-compose}
    pull: ${18:# Use with O(state=present) to always pull images prior to starting the application}
    recreate: ${19:# By default containers will be recreated when their configuration differs from the service definition}
    remove_images: ${20:# Use with O(state=absent) to remove all images or only local images}
    remove_orphans: ${21:# Remove containers for services not defined in the Compose file}
    remove_volumes: ${22:# Use with O(state=absent) to remove data volumes}
    restarted: ${23:# Use with O(state=present) to restart all containers defined in the Compose file}
    scale: ${24:# When O(state) is V(present) scale services}
    services: ${25:# When O(state) is V(present) run C(docker-compose up) resp}
    ssl_version: ${26:# Provide a valid SSL version number}
    state: ${27:# Desired state of the project}
    stopped: ${28:# Use with O(state=present) to stop all containers defined in the Compose file}
    timeout: ${29:# Timeout in seconds for container shutdown when attached or when containers are already running}
    tls: ${30:# Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server}
    tls_hostname: ${31:# When verifying the authenticity of the Docker Host server, provide the expected name of the server}
    use_ssh_client: ${32:# Currently ignored for this module, but might suddenly be supported later on}
    validate_certs: ${33:# Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server}
  tags:
    - community
    - docker
    - docker_compose]]></content>
  <tabTrigger>community.docker.docker_compose</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage multi-container Docker applications with Docker Compose V1</description>
</snippet>