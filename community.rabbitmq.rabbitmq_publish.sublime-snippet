<snippet>
  <content><![CDATA[- name: ${1:Publish a message to a RabbitMQ queue}
  community.rabbitmq.rabbitmq_publish:
    auto_delete: ${2:# Set the queue to auto delete}
    body: ${3:# The body of the message}
    cafile: ${4:# CA file used during connection to the RabbitMQ server over SSL}
    certfile: ${5:# Client certificate to establish SSL connection}
    content_type: ${6:# The content type of the body}
    durable: ${7:# Set the queue to be durable}
    exchange: ${8:# The exchange to publish a message to}
    exclusive: ${9:# Set the queue to be exclusive}
    headers: ${10:# A dictionary of headers to post with the message}
    host: ${11:# The RabbitMQ server hostname or IP}
    keyfile: ${12:# Client key to establish SSL connection}
    password: ${13:# The RabbitMQ password}
    port: ${14:# The RabbitMQ server port}
    proto: ${15:# The protocol to use}
    queue: ${16:# The queue to publish a message to}
    routing_key: ${17:# The routing key}
    src: ${18:# A file to upload to the queue}
    url: ${19:# An URL connection string to connect to the RabbitMQ server}
    username: ${20:# The RabbitMQ username}
    vhost: ${21:# The virtual host to target}
  tags:
    - community
    - rabbitmq
    - rabbitmq_publish]]></content>
  <tabTrigger>community.rabbitmq.rabbitmq_publish</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Publish a message to a RabbitMQ queue</description>
</snippet>