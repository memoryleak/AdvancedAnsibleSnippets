<snippet>
  <content><![CDATA[- name: ${1:Manages simple-gateway objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_simple_gateway:
    name: ${2:# Object name}
    ip_address: ${3:# IPv4 or IPv6 address}
    ipv4_address: ${4:# IPv4 address}
    ipv6_address: ${5:# IPv6 address}
    anti_bot: ${6:# Anti-Bot blade enabled}
    anti_virus: ${7:# Anti-Virus blade enabled}
    application_control: ${8:# Application Control blade enabled}
    content_awareness: ${9:# Content Awareness blade enabled}
    firewall: ${10:# Firewall blade enabled}
    firewall_settings: ${11:# N/A}
    interfaces: ${12:# Network interfaces}
    ips: ${13:# Intrusion Prevention System blade enabled}
    logs_settings: ${14:# N/A}
    one_time_password: ${15:# N/A}
    os_name: ${16:# Gateway platform operating system}
    save_logs_locally: ${17:# Save logs locally on the gateway}
    send_alerts_to_server: ${18:# Server(s) to send alerts to}
    send_logs_to_backup_server: ${19:# Backup server(s) to send logs to}
    send_logs_to_server: ${20:# Server(s) to send logs to}
    tags: ${21:# Collection of tag identifiers}
    threat_emulation: ${22:# Threat Emulation blade enabled}
    threat_extraction: ${23:# Threat Extraction blade enabled}
    url_filtering: ${24:# URL Filtering blade enabled}
    gateway_version: ${25:# Gateway platform version}
    vpn: ${26:# VPN blade enabled}
    vpn_settings: ${27:# Gateway VPN settings}
    color: ${28:# Color of the object}
    comments: ${29:# Comments string}
    details_level: ${30:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    groups: ${31:# Collection of group identifiers}
    ignore_warnings: ${32:# Apply changes ignoring warnings}
    ignore_errors: ${33:# Apply changes ignoring errors}
    state: ${34:# State of the access rule (present or absent)}
    auto_publish_session: ${35:# Publish the current session if changes have been performed after task completes}
    wait_for_task: ${36:# Wait for the task to end}
    wait_for_task_timeout: ${37:# How many minutes to wait until throwing a timeout error}
    version: ${38:# Version of checkpoint}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_simple_gateway]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_simple_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages simple-gateway objects on Check Point over Web Services API</description>
</snippet>