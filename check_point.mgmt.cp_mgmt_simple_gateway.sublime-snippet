<snippet>
  <content><![CDATA[- name: ${1:Manages simple-gateway objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_simple_gateway:
    anti_bot: ${2:# Anti-Bot blade enabled}
    anti_virus: ${3:# Anti-Virus blade enabled}
    application_control: ${4:# Application Control blade enabled}
    auto_publish_session: ${5:# Publish the current session if changes have been performed after task completes}
    color: ${6:# Color of the object}
    comments: ${7:# Comments string}
    content_awareness: ${8:# Content Awareness blade enabled}
    details_level: ${9:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    firewall: ${10:# Firewall blade enabled}
    firewall_settings: ${11:# N/A}
    gateway_version: ${12:# Gateway platform version}
    groups: ${13:# Collection of group identifiers}
    ignore_errors: ${14:# Apply changes ignoring errors}
    ignore_warnings: ${15:# Apply changes ignoring warnings}
    interfaces: ${16:# Network interfaces}
    ip_address: ${17:# IPv4 or IPv6 address}
    ips: ${18:# Intrusion Prevention System blade enabled}
    ipv4_address: ${19:# IPv4 address}
    ipv6_address: ${20:# IPv6 address}
    logs_settings: ${21:# N/A}
    name: ${22:# Object name}
    one_time_password: ${23:# N/A}
    os_name: ${24:# Gateway platform operating system}
    save_logs_locally: ${25:# Save logs locally on the gateway}
    send_alerts_to_server: ${26:# Server(s) to send alerts to}
    send_logs_to_backup_server: ${27:# Backup server(s) to send logs to}
    send_logs_to_server: ${28:# Server(s) to send logs to}
    state: ${29:# State of the access rule (present or absent)}
    tags: ${30:# Collection of tag identifiers}
    threat_emulation: ${31:# Threat Emulation blade enabled}
    threat_extraction: ${32:# Threat Extraction blade enabled}
    url_filtering: ${33:# URL Filtering blade enabled}
    version: ${34:# Version of checkpoint}
    vpn: ${35:# VPN blade enabled}
    vpn_settings: ${36:# Gateway VPN settings}
    wait_for_task: ${37:# Wait for the task to end}
    wait_for_task_timeout: ${38:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_simple_gateway]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_simple_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages simple-gateway objects on Check Point over Web Services API</description>
</snippet>