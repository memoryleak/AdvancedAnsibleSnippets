<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP create, delete or modify SnapMirror policies}
  netapp.ontap.na_ontap_snapmirror_policy:
    state: ${2:# Whether the specified SnapMirror policy should exist or not}
    vserver: ${3:# Specifies the vserver for the SnapMirror policy}
    policy_name: ${4:# Specifies the SnapMirror policy name}
    policy_type: ${5:# Specifies the SnapMirror policy type}
    comment: ${6:# Specifies the SnapMirror policy comment}
    tries: ${7:# Specifies the number of tries}
    transfer_priority: ${8:# Specifies the priority at which a SnapMirror transfer runs}
    transfer_schedule: ${9:# Specifies the name of the schedule used to update asynchronous SnapMirror relationships}
    common_snapshot_schedule: ${10:# Specifies the common Snapshot copy schedule associated with the policy, only required for strict_sync_mirror and sync_mirror}
    owner: ${11:# Specifies the owner of the SnapMirror policy}
    is_network_compression_enabled: ${12:# Specifies whether network compression is enabled for transfers}
    ignore_atime: ${13:# Specifies whether incremental transfers will ignore files which have only their access time changed}
    restart: ${14:# Defines the behavior of SnapMirror if an interrupted transfer exists, applies to data protection only}
    snapmirror_label: ${15:# SnapMirror policy rule label}
    keep: ${16:# SnapMirror policy rule retention count for snapshots created}
    prefix: ${17:# SnapMirror policy rule prefix}
    schedule: ${18:# SnapMirror policy rule schedule}
    identity_preservation: ${19:# Specifies which configuration of the source SVM is replicated to the destination SVM}
    copy_all_source_snapshots: ${20:# Specifies whether all source Snapshot copies should be copied to the destination on a transfer rather than specifying specific retentions}
    copy_latest_source_snapshot: ${21:# Specifies that the latest source Snapshot copy (created by SnapMirror before the transfer begins) should be copied to the destination on a transfer}
    create_snapshot_on_source: ${22:# Specifies whether a new Snapshot copy should be created on the source at the beginning of an update or resync operation}
    sync_type: ${23:# This property is only applicable to sync policy types}
    hostname: ${24:# The hostname or IP address of the ONTAP instance}
    username: ${25:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    password: ${26:# Password for the specified user}
    cert_filepath: ${27:# path to SSL client cert file (}
    key_filepath: ${28:# path to SSL client key file}
    https: ${29:# Enable and disable https}
    validate_certs: ${30:# If set to C(no), the SSL certificates will not be validated}
    http_port: ${31:# Override the default port (80 or 443) with this port}
    ontapi: ${32:# The ontap api version to use}
    use_rest: ${33:# Whether to use REST or ZAPI}
    feature_flags: ${34:# Enable or disable a new feature}
    force_ontap_version: ${35:# Override the cluster ONTAP version when using REST}
  tags:
    - netapp
    - ontap
    - na_ontap_snapmirror_policy]]></content>
  <tabTrigger>netapp.ontap.na_ontap_snapmirror_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP create, delete or modify SnapMirror policies</description>
</snippet>