<snippet>
  <content><![CDATA[- name: ${1:Fetch logs from Kubernetes resources}
  kubernetes.core.k8s_log:
    api_key: ${2:# Token used to authenticate with the API}
    api_version: ${3:# Use to specify the API version}
    ca_cert: ${4:# Path to a CA certificate used to authenticate with the API}
    client_cert: ${5:# Path to a certificate used to authenticate with the API}
    client_key: ${6:# Path to a key file used to authenticate with the API}
    container: ${7:# Use to specify the container within a pod to grab the log from}
    context: ${8:# The name of a context found in the config file}
    host: ${9:# Provide a URL for accessing the API}
    impersonate_groups: ${10:# Group(s) to impersonate for the operation}
    impersonate_user: ${11:# Username to impersonate for the operation}
    kind: ${12:# Use to specify an object model}
    kubeconfig: ${13:# Path to an existing Kubernetes config file}
    label_selectors: ${14:# List of label selectors to use to filter results}
    name: ${15:# Use to specify an object name}
    namespace: ${16:# Use to specify an object namespace}
    no_proxy: ${17:# The comma separated list of hosts/domains/IP/CIDR that shouldn't go through proxy}
    password: ${18:# Provide a password for authenticating with the API}
    persist_config: ${19:# Whether or not to save the kube config refresh tokens}
    proxy: ${20:# The URL of an HTTP proxy to use for the connection}
    proxy_headers: ${21:# The Header used for the HTTP proxy}
    since_seconds: ${22:# A relative time in seconds before the current time from which to show logs}
    username: ${23:# Provide a username for authenticating with the API}
    validate_certs: ${24:# Whether or not to verify the API server's SSL certificates}
  tags:
    - kubernetes
    - core
    - k8s_log]]></content>
  <tabTrigger>kubernetes.core.k8s_log</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Fetch logs from Kubernetes resources</description>
</snippet>