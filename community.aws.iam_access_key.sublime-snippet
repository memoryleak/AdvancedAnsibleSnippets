<snippet>
  <content><![CDATA[- name: ${1:Manage AWS IAM User access keys}
  community.aws.iam_access_key:
    user_name: ${2:# The name of the IAM User to which the key belongs}
    id: ${3:# The ID of the access key}
    state: ${4:# Create or remove the access key}
    active: ${5:# Whether the key should be enabled or disabled}
    rotate_keys: ${6:# When there are already 2 access keys attached to the IAM user the oldest key will be removed and a new key created}
    access_key: ${7:# AWS access key ID}
    secret_key: ${8:# AWS secret access key}
    session_token: ${9:# AWS STS session token for use with temporary credentials}
    profile: ${10:# A named AWS profile to use for authentication}
    endpoint_url: ${11:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${12:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${13:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${14:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${15:# Use a C(botocore}
    region: ${16:# The AWS region to use}
  tags:
    - community
    - aws
    - iam_access_key]]></content>
  <tabTrigger>community.aws.iam_access_key</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS IAM User access keys</description>
</snippet>