<snippet>
  <content><![CDATA[- name: ${1:Creates/updates/deletes GitLab Groups}
  community.general.gitlab_group:
    api_job_token: ${2:# GitLab CI job token for logging in}
    api_oauth_token: ${3:# GitLab OAuth token for logging in}
    api_password: ${4:# The password to use for authentication against the API}
    api_token: ${5:# GitLab access token with API permissions}
    api_url: ${6:# The resolvable endpoint for the API}
    api_username: ${7:# The username to use for authentication against the API}
    auto_devops_enabled: ${8:# Default to Auto DevOps pipeline for all projects within this group}
    avatar_path: ${9:# Absolute path image to configure avatar}
    ca_path: ${10:# The CA certificates bundle to use to verify GitLab server certificate}
    description: ${11:# A description for the group}
    force_delete: ${12:# Force delete group even if projects in it}
    name: ${13:# Name of the group you want to create}
    parent: ${14:# Allow to create subgroups}
    path: ${15:# The path of the group you want to create, this will be api_url/group_path}
    project_creation_level: ${16:# Determine if developers can create projects in the group}
    require_two_factor_authentication: ${17:# Require all users in this group to setup two-factor authentication}
    state: ${18:# create or delete group}
    subgroup_creation_level: ${19:# Allowed to create subgroups}
    validate_certs: ${20:# Whether or not to validate SSL certs when supplying a HTTPS endpoint}
    visibility: ${21:# Default visibility of the group}
  tags:
    - community
    - general
    - gitlab_group]]></content>
  <tabTrigger>community.general.gitlab_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates/updates/deletes GitLab Groups</description>
</snippet>