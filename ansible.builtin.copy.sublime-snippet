<snippet>
  <content><![CDATA[- name: ${1:Copy files to remote locations}
  ansible.builtin.copy:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    backup: ${3:# Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly}
    checksum: ${4:# SHA1 checksum of the file being transferred}
    content: ${5:# When used instead of O(src), sets the contents of a file directly to the specified value}
    decrypt: ${6:# This option controls the autodecryption of source files using vault}
    dest: ${7:# Remote absolute path where the file should be copied to}
    directory_mode: ${8:# Set the access permissions of newly created directories to the given mode}
    follow: ${9:# This flag indicates that filesystem links in the destination, if they exist, should be followed}
    force: ${10:# Influence whether the remote file must always be replaced}
    group: ${11:# Name of the group that should own the filesystem object, as would be fed to I(chown)}
    local_follow: ${12:# This flag indicates that filesystem links in the source tree, if they exist, should be followed}
    mode: ${13:# The permissions of the destination file or directory}
    owner: ${14:# Name of the user that should own the filesystem object, as would be fed to I(chown)}
    remote_src: ${15:# Influence whether O(src) needs to be transferred or already is present remotely}
    selevel: ${16:# The level part of the SELinux filesystem object context}
    serole: ${17:# The role part of the SELinux filesystem object context}
    setype: ${18:# The type part of the SELinux filesystem object context}
    seuser: ${19:# The user part of the SELinux filesystem object context}
    src: ${20:# Local path to a file to copy to the remote server}
    unsafe_writes: ${21:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    validate: ${22:# The validation command to run before copying the updated file into the final destination}
  tags:
    - copy]]></content>
  <tabTrigger>ansible.builtin.copy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Copy files to remote locations</description>
</snippet>