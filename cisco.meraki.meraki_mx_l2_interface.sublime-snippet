<snippet>
  <content><![CDATA[- name: ${1:Configure MX layer 2 interfaces}
  cisco.meraki.meraki_mx_l2_interface:
    state: ${2:# Modify or query an port}
    net_name: ${3:# Name of a network}
    net_id: ${4:# ID number of a network}
    org_id: ${5:# ID of organization associated to a network}
    number: ${6:# ID number of MX port}
    vlan: ${7:# Native VLAN when the port is in Trunk mode}
    access_policy: ${8:# The name of the policy}
    allowed_vlans: ${9:# Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port}
    port_type: ${10:# Type of port}
    drop_untagged_traffic: ${11:# Trunk port can Drop all Untagged traffic}
    enabled: ${12:# Enabled state of port}
    auth_key: ${13:# Authentication key provided by the dashboard}
    host: ${14:# Hostname for Meraki dashboard}
    use_proxy: ${15:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_https: ${16:# If C(no), it will use HTTP}
    output_format: ${17:# Instructs module whether response keys should be snake case (ex}
    output_level: ${18:# Set amount of debug output during module execution}
    timeout: ${19:# Time to timeout for HTTP requests}
    validate_certs: ${20:# Whether to validate HTTP certificates}
    org_name: ${21:# Name of organization}
    rate_limit_retry_time: ${22:# Number of seconds to retry if rate limiter is triggered}
    internal_error_retry_time: ${23:# Number of seconds to retry if server returns an internal server error}
  tags:
    - cisco
    - meraki
    - meraki_mx_l2_interface]]></content>
  <tabTrigger>cisco.meraki.meraki_mx_l2_interface</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Configure MX layer 2 interfaces</description>
</snippet>