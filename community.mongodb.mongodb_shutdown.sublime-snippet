<snippet>
  <content><![CDATA[- name: ${1:Cleans up all database resources and then terminates the mongod/mongos process}
  community.mongodb.mongodb_shutdown:
    force: ${2:# Specify true to force the mongod to shut down}
    timeout: ${3:# The number of seconds the primary should wait for a secondary to catch up}
    login_user: ${4:# The MongoDB user to login with}
    login_password: ${5:# The password used to authenticate with}
    login_database: ${6:# The database where login credentials are stored}
    login_host: ${7:# The host running MongoDB instance to login to}
    login_port: ${8:# The MongoDB server port to login to}
    strict_compatibility: ${9:# Enforce strict requirements for pymongo and MongoDB software versions}
    ssl: ${10:# Whether to use an SSL connection when connecting to the database}
    ssl_cert_reqs: ${11:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_ca_certs: ${12:# The ssl_ca_certs option takes a path to a CA file}
    ssl_crlfile: ${13:# The ssl_crlfile option takes a path to a CRL file}
    ssl_certfile: ${14:# Present a client certificate using the ssl_certfile option}
    ssl_keyfile: ${15:# Private key for the client certificate}
    ssl_pem_passphrase: ${16:# Passphrase to decrypt encrypted private keys}
    auth_mechanism: ${17:# Authentication type}
    connection_options: ${18:# Additional connection options}
  tags:
    - community
    - mongodb
    - mongodb_shutdown]]></content>
  <tabTrigger>community.mongodb.mongodb_shutdown</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Cleans up all database resources and then terminates the mongod/mongos process</description>
</snippet>