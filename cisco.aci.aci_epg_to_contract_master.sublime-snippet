<snippet>
  <content><![CDATA[- name: ${1:Manage End Point Group (EPG) contract master relationships (fv:RsSecInherited)}
  cisco.aci.aci_epg_to_contract_master:
    annotation: ${2:# User-defined string for annotating an object}
    ap: ${3:# Name of an existing application network profile, that will contain the EPGs}
    certificate_name: ${4:# The X}
    contract_master_ap: ${5:# Name of the application profile where the contract master EPG is}
    contract_master_epg: ${6:# Name of the end point group which serves as contract master}
    epg: ${7:# Name of the end point group}
    host: ${8:# IP Address or hostname of APIC resolvable by Ansible control host}
    output_level: ${9:# Influence the output of this ACI module}
    output_path: ${10:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${11:# The password to use for authentication}
    port: ${12:# Port number to be used for REST connection}
    private_key: ${13:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${14:# Use C(present) or C(absent) for adding or removing}
    tenant: ${15:# Name of an existing tenant}
    timeout: ${16:# The socket level timeout in seconds}
    use_proxy: ${17:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${18:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${19:# The username to use for authentication}
    validate_certs: ${20:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_epg_to_contract_master]]></content>
  <tabTrigger>cisco.aci.aci_epg_to_contract_master</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage End Point Group (EPG) contract master relationships (fv:RsSecInherited)</description>
</snippet>