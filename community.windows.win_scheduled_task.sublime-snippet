<snippet>
  <content><![CDATA[- name: ${1:Manage scheduled tasks}
  community.windows.win_scheduled_task:
    actions: ${2:# A list of action to configure for the task}
    allow_demand_start: ${3:# Whether the task can be started by using either the Run command or the Context menu}
    allow_hard_terminate: ${4:# Whether the task can be terminated by using TerminateProcess}
    author: ${5:# The author of the task}
    compatibility: ${6:# The integer value with indicates which version of Task Scheduler a task is compatible with}
    date: ${7:# The date when the task was registered}
    delete_expired_task_after: ${8:# The amount of time that the Task Scheduler will wait before deleting the task after it expires}
    description: ${9:# The description of the task}
    disallow_start_if_on_batteries: ${10:# Whether the task will not be started if the computer is running on battery power}
    display_name: ${11:# The name of the user/group that is displayed in the Task Scheduler UI}
    enabled: ${12:# Whether the task is enabled, the task can only run when C(yes)}
    execution_time_limit: ${13:# The amount of time allowed to complete the task}
    group: ${14:# The group that will run the task}
    hidden: ${15:# Whether the task will be hidden in the UI}
    logon_type: ${16:# The logon method that the task will run with}
    multiple_instances: ${17:# An integer that indicates the behaviour when starting a task that is already running}
    name: ${18:# The name of the scheduled task without the path}
    password: ${19:# The password for the user account to run the scheduled task as}
    path: ${20:# Task folder in which this task will be stored}
    priority: ${21:# The priority level (0-10) of the task}
    restart_count: ${22:# The number of times that the Task Scheduler will attempt to restart the task}
    restart_interval: ${23:# How long the Task Scheduler will attempt to restart the task}
    run_level: ${24:# The level of user rights used to run the task}
    run_only_if_idle: ${25:# Whether the task will run the task only if the computer is in an idle state}
    run_only_if_network_available: ${26:# Whether the task will run only when a network is available}
    source: ${27:# The source of the task}
    start_when_available: ${28:# Whether the task can start at any time after its scheduled time has passed}
    state: ${29:# When C(state=present) will ensure the task exists}
    stop_if_going_on_batteries: ${30:# Whether the task will be stopped if the computer begins to run on battery power}
    triggers: ${31:# A list of triggers to configure for the task}
    update_password: ${32:# Whether to update the password even when not other changes have occurred}
    username: ${33:# The user to run the scheduled task as}
    version: ${34:# The version number of the task}
    wake_to_run: ${35:# Whether the task will wake the computer when it is time to run the task}
  tags:
    - community
    - windows
    - win_scheduled_task]]></content>
  <tabTrigger>community.windows.win_scheduled_task</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage scheduled tasks</description>
</snippet>