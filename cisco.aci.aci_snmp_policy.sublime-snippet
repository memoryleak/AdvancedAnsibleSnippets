<snippet>
  <content><![CDATA[- name: ${1:Manage Syslog groups (snmp:Pol)}
  cisco.aci.aci_snmp_policy:
    admin_state: ${2:# Administrative State of the policy}
    annotation: ${3:# User-defined string for annotating an object}
    certificate_name: ${4:# The X}
    contact: ${5:# SNMP contact}
    description: ${6:# Description of the SNMP policy}
    host: ${7:# IP Address or hostname of APIC resolvable by Ansible control host}
    location: ${8:# SNMP location}
    name: ${9:# Name of the SNMP policy}
    output_level: ${10:# Influence the output of this ACI module}
    output_path: ${11:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${12:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${13:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${14:# The password to use for authentication}
    port: ${15:# Port number to be used for REST connection}
    private_key: ${16:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${17:# Use C(present) or C(absent) for adding or removing}
    timeout: ${18:# The socket level timeout in seconds}
    use_proxy: ${19:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${20:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${21:# The username to use for authentication}
    validate_certs: ${22:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_snmp_policy]]></content>
  <tabTrigger>cisco.aci.aci_snmp_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Syslog groups (snmp:Pol)</description>
</snippet>