<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP NodePool}
  google.cloud.gcp_container_node_pool:
    state: ${2:# Whether the given object should exist in GCP}
    name: ${3:# The name of the node pool}
    config: ${4:# The node configuration of the pool}
    initial_node_count: ${5:# The initial node count for the pool}
    version: ${6:# The version of the Kubernetes of this node}
    autoscaling: ${7:# Autoscaler configuration for this NodePool}
    management: ${8:# Management configuration for this NodePool}
    max_pods_constraint: ${9:# The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool}
    conditions: ${10:# Which conditions caused the current node pool state}
    cluster: ${11:# The cluster this node pool belongs to}
    location: ${12:# The location where the node pool is deployed}
    project: ${13:# The Google Cloud Platform project to use}
    auth_kind: ${14:# The type of credential used}
    service_account_contents: ${15:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${16:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${17:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${18:# Array of scopes to be used}
    env_type: ${19:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_container_node_pool]]></content>
  <tabTrigger>google.cloud.gcp_container_node_pool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP NodePool</description>
</snippet>