<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP SslCert}
  google.cloud.gcp_sql_ssl_cert:
    state: ${2:# Whether the given object should exist in GCP}
    cert: ${3:# PEM representation of the X}
    cert_serial_number: ${4:# Serial number, as extracted from the certificate}
    common_name: ${5:# User supplied name}
    create_time: ${6:# The time when the certificate was created in RFC 3339 format, for example 2012-11-15T16:19:00}
    expiration_time: ${7:# The time when the certificate expires in RFC 3339 format, for example 2012-11-15T16:19:00}
    instance: ${8:# The name of the Cloud SQL instance}
    sha1_fingerprint: ${9:# The SHA-1 of the certificate}
    project: ${10:# The Google Cloud Platform project to use}
    auth_kind: ${11:# The type of credential used}
    service_account_contents: ${12:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${13:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${14:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${15:# Array of scopes to be used}
    env_type: ${16:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_sql_ssl_cert]]></content>
  <tabTrigger>google.cloud.gcp_sql_ssl_cert</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP SslCert</description>
</snippet>