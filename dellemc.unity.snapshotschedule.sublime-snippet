<snippet>
  <content><![CDATA[- name: ${1:Manage snapshot schedules on Unity storage system}
  dellemc.unity.snapshotschedule:
    auto_delete: ${2:# Indicates whether the system can automatically delete the snapshot}
    day_interval: ${3:# Number of days between snapshots}
    day_of_month: ${4:# Day of the month for which the snapshot schedule rule applies}
    days_of_week: ${5:# Days of the week for which the snapshot schedule rule applies}
    desired_retention: ${6:# The number of days/hours for which snapshot will be retained}
    hour: ${7:# The hour when the snapshot will be taken}
    hours_of_day: ${8:# Hours of the day when the snapshot will be taken}
    id: ${9:# The ID of the snapshot schedule}
    interval: ${10:# Number of hours between snapshots}
    minute: ${11:# Minute offset from the hour when the snapshot will be taken}
    name: ${12:# The name of the snapshot schedule}
    password: ${13:# The password of the Unity management server}
    port: ${14:# Port number through which communication happens with Unity management server}
    retention_unit: ${15:# The retention unit for the snapshot}
    state: ${16:# Define whether the snapshot schedule should exist or not}
    type: ${17:# Type of the rule to be included in snapshot schedule}
    unispherehost: ${18:# IP or FQDN of the Unity management server}
    username: ${19:# The username of the Unity management server}
    validate_certs: ${20:# Boolean variable to specify whether or not to validate SSL certificate}
  tags:
    - dellemc
    - unity
    - snapshotschedule]]></content>
  <tabTrigger>dellemc.unity.snapshotschedule</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage snapshot schedules on Unity storage system</description>
</snippet>