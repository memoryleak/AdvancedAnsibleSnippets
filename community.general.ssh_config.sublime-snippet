<snippet>
  <content><![CDATA[- name: ${1:Manage SSH config for user}
  community.general.ssh_config:
    controlmaster: ${2:# Sets the C(ControlMaster) option}
    controlpath: ${3:# Sets the C(ControlPath) option}
    controlpersist: ${4:# Sets the C(ControlPersist) option}
    forward_agent: ${5:# Sets the C(ForwardAgent) option}
    group: ${6:# Which group this configuration file belongs to}
    host: ${7:# The endpoint this configuration is valid for}
    host_key_algorithms: ${8:# Sets the C(HostKeyAlgorithms) option}
    hostname: ${9:# The actual host to connect to when connecting to the host defined}
    identity_file: ${10:# The path to an identity file (SSH private key) that will be used when connecting to this host}
    port: ${11:# The actual port to connect to when connecting to the host defined}
    proxycommand: ${12:# Sets the C(ProxyCommand) option}
    proxyjump: ${13:# Sets the C(ProxyJump) option}
    remote_user: ${14:# Specifies the user to log in as}
    ssh_config_file: ${15:# SSH config file}
    state: ${16:# Whether a host entry should exist or not}
    strict_host_key_checking: ${17:# Whether to strictly check the host key when doing connections to the remote host}
    user: ${18:# Which user account this configuration file belongs to}
    user_known_hosts_file: ${19:# Sets the user known hosts file option}
  tags:
    - community
    - general
    - ssh_config]]></content>
  <tabTrigger>community.general.ssh_config</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage SSH config for user</description>
</snippet>