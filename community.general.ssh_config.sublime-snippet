<snippet>
  <content><![CDATA[- name: ${1:Manage SSH config for user}
  community.general.ssh_config:
    add_keys_to_agent: ${2:# Sets the C(AddKeysToAgent) option}
    controlmaster: ${3:# Sets the C(ControlMaster) option}
    controlpath: ${4:# Sets the C(ControlPath) option}
    controlpersist: ${5:# Sets the C(ControlPersist) option}
    forward_agent: ${6:# Sets the C(ForwardAgent) option}
    group: ${7:# Which group this configuration file belongs to}
    host: ${8:# The endpoint this configuration is valid for}
    host_key_algorithms: ${9:# Sets the C(HostKeyAlgorithms) option}
    hostname: ${10:# The actual host to connect to when connecting to the host defined}
    identities_only: ${11:# Specifies that SSH should only use the configured authentication identity and certificate files (either the default files, or those explicitly configured in the C(ssh_config) files or passed on the ssh command-line), even if ssh-agent or a PKCS11Provider or SecurityKeyProvider offers more identities}
    identity_file: ${12:# The path to an identity file (SSH private key) that will be used when connecting to this host}
    port: ${13:# The actual port to connect to when connecting to the host defined}
    proxycommand: ${14:# Sets the C(ProxyCommand) option}
    proxyjump: ${15:# Sets the C(ProxyJump) option}
    remote_user: ${16:# Specifies the user to log in as}
    ssh_config_file: ${17:# SSH config file}
    state: ${18:# Whether a host entry should exist or not}
    strict_host_key_checking: ${19:# Whether to strictly check the host key when doing connections to the remote host}
    user: ${20:# Which user account this configuration file belongs to}
    user_known_hosts_file: ${21:# Sets the user known hosts file option}
  tags:
    - community
    - general
    - ssh_config]]></content>
  <tabTrigger>community.general.ssh_config</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage SSH config for user</description>
</snippet>