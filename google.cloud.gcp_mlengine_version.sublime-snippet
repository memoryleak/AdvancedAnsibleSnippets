<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Version}
  google.cloud.gcp_mlengine_version:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    auto_scaling: ${4:# Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic}
    deployment_uri: ${5:# The Cloud Storage location of the trained model used to create the version}
    description: ${6:# The description specified for the version when it was created}
    env_type: ${7:# Specifies which Ansible environment you're running this module within}
    framework: ${8:# The machine learning framework AI Platform uses to train this version of the model}
    is_default: ${9:# If true, this version will be used to handle prediction requests that do not specify a version}
    labels: ${10:# One or more labels that you can add, to organize your model versions}
    machine_type: ${11:# The type of machine on which to serve the model}
    manual_scaling: ${12:# Manually select the number of nodes to use for serving the model}
    model: ${13:# The model that this version belongs to}
    name: ${14:# The name specified for the version when it was created}
    prediction_class: ${15:# The fully qualified name (module_name}
    project: ${16:# The Google Cloud Platform project to use}
    python_version: ${17:# The version of Python used in prediction}
    runtime_version: ${18:# The AI Platform runtime version to use for this deployment}
    scopes: ${19:# Array of scopes to be used}
    service_account: ${20:# Specifies the service account for resource access control}
    service_account_contents: ${21:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${22:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${23:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${24:# Whether the given object should exist in GCP}
  tags:
    - google
    - cloud
    - gcp_mlengine_version]]></content>
  <tabTrigger>google.cloud.gcp_mlengine_version</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Version</description>
</snippet>