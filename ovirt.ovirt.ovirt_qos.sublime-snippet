<snippet>
  <content><![CDATA[- name: ${1:Module to manage QoS entries in ovirt}
  ovirt.ovirt.ovirt_qos:
    auth: ${2:# Dictionary with values needed to create HTTP/HTTPS connection to oVirt:}
    cpu_limit: ${3:# The maximum processing capability in %}
    data_center: ${4:# Name of the data center where the QoS entry should be created}
    description: ${5:# Description of the QoS}
    fetch_nested: ${6:# If I(True) the module will fetch additional data from the API}
    id: ${7:# ID of the QoS to manage}
    inbound_average: ${8:# The desired average inbound bit rate in Mbps (Megabits per sec)}
    inbound_burst: ${9:# The amount of data that can be delivered in a single burst, in MB}
    inbound_peak: ${10:# The maximum inbound rate in Mbps (Megabits per sec)}
    max_iops: ${11:# The max number of read/write iops}
    max_throughput: ${12:# The max number of read/write throughput}
    name: ${13:# Name of QoS to manage}
    nested_attributes: ${14:# Specifies list of the attributes which should be fetched from the API}
    outbound_average: ${15:# The desired average outbound bit rate in Mbps (Megabits per sec)}
    outbound_average_linkshare: ${16:# Weighted share}
    outbound_average_realtime: ${17:# The committed rate in Mbps (Megabits per sec)}
    outbound_average_upperlimit: ${18:# The maximum bandwidth to be used by a network in Mbps (Megabits per sec)}
    outbound_burst: ${19:# The amount of data that can be sent in a single burst, in MB}
    outbound_peak: ${20:# The maximum outbound rate in Mbps (Megabits per sec)}
    poll_interval: ${21:# Number of the seconds the module waits until another poll request on entity status is sent}
    read_iops: ${22:# The max number of read iops}
    read_throughput: ${23:# The max number of read throughput}
    state: ${24:# Should the QoS be present/absent}
    timeout: ${25:# The amount of time in seconds the module should wait for the instance to get into desired state}
    type: ${26:# The type of QoS}
    wait: ${27:# C(yes) if the module should wait for the entity to get into desired state}
    write_iops: ${28:# The max number of write iops}
    write_throughput: ${29:# The max number of write throughput}
  tags:
    - ovirt
    - ovirt
    - ovirt_qos]]></content>
  <tabTrigger>ovirt.ovirt.ovirt_qos</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module to manage QoS entries in ovirt</description>
</snippet>