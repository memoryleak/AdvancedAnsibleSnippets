<snippet>
  <content><![CDATA[- name: ${1:Manages galera hostgroups using the proxysql admin interface}
  community.proxysql.proxysql_galera_hostgroups:
    active: ${2:# Enabled (1) or disabled (0) defined hostgroup configuration}
    backup_writer_hostgroup: ${3:# Id of the hostgroup that will contain all the Galera nodes that are standby writers}
    comment: ${4:# Text field that can be used for any purposes defined by the user}
    config_file: ${5:# Specify a config file from which I(login_user) and I(login_password) are to be read}
    load_to_runtime: ${6:# Dynamically load config to runtime memory}
    login_host: ${7:# The host used to connect to ProxySQL admin interface}
    login_password: ${8:# The password used to authenticate to ProxySQL admin interface}
    login_port: ${9:# The port used to connect to ProxySQL admin interface}
    login_unix_socket: ${10:# The socket used to connect to ProxySQL admin interface}
    login_user: ${11:# The username used to authenticate to ProxySQL admin interface}
    max_transactions_behind: ${12:# maximum number of writesets behind the cluster that ProxySQL should allow before shunning the node to prevent stale reads}
    max_writers: ${13:# number of Read-Write instances populated in the writer hostgroup}
    offline_hostgroup: ${14:# Id of the hostgroup all failed nodes will be moved to}
    reader_hostgroup: ${15:# Id of the hostgroup that will contain all the Galera nodes that are readers}
    save_to_disk: ${16:# Save config to sqlite db on disk to persist the configuration}
    state: ${17:# When C(present) - adds the galera hostgroup, when C(absent) - removes the galera hostgroup}
    writer_hostgroup: ${18:# Id of the hostgroup that will contain all the Galera nodes that are active writers}
    writer_is_also_reader: ${19:# writer_is_also_reader - 0 nodes with `read_only=0` will be placed either in the writer_hostgroup and in the backup_writer_hostgroup after a topology change, these will be excluded from the reader_hostgroup}
  tags:
    - community
    - proxysql
    - proxysql_galera_hostgroups]]></content>
  <tabTrigger>community.proxysql.proxysql_galera_hostgroups</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages galera hostgroups using the proxysql admin interface</description>
</snippet>