<snippet>
  <content><![CDATA[- name: ${1:Retrieve all existing cluster members in domain}
  check_point.mgmt.cp_mgmt_cluster_members_facts:
    details_level: ${2:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    domains_to_process: ${3:# Indicates which domains to process the commands on}
    filter: ${4:# Search expression to filter objects by}
    limit: ${5:# The maximal number of returned results}
    limit_interfaces: ${6:# Limit number of cluster member interfaces to show}
    offset: ${7:# Number of the results to initially skip}
    order: ${8:# Sorts the results by search criteria}
    show_membership: ${9:# Indicates whether to calculate and show 'groups' field for every object in reply}
    uid: ${10:# Cluster member unique identifier}
    version: ${11:# Version of checkpoint}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_cluster_members_facts]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_cluster_members_facts</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Retrieve all existing cluster members in domain</description>
</snippet>