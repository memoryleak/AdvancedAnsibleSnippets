<snippet>
  <content><![CDATA[- name: ${1:Manage files and file properties}
  ansible.builtin.file:
    path: ${2:# Path to the file being managed}
    state: ${3:# If C(absent), directories will be recursively deleted, and files or symlinks will be unlinked}
    src: ${4:# Path of the file to link to}
    recurse: ${5:# Recursively set the specified file attributes on directory contents}
    force: ${6:# Force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination exists and is a file (so, we need to unlink the C(path) file and create symlink to the C(src) file in place of it)}
    follow: ${7:# This flag indicates that filesystem links, if they exist, should be followed}
    modification_time: ${8:# This parameter indicates the time the file's modification time should be set to}
    modification_time_format: ${9:# When used with C(modification_time), indicates the time format that must be used}
    access_time: ${10:# This parameter indicates the time the file's access time should be set to}
    access_time_format: ${11:# When used with C(access_time), indicates the time format that must be used}
    mode: ${12:# The permissions the resulting filesystem object should have}
    owner: ${13:# Name of the user that should own the filesystem object, as would be fed to I(chown)}
    group: ${14:# Name of the group that should own the filesystem object, as would be fed to I(chown)}
    seuser: ${15:# The user part of the SELinux filesystem object context}
    serole: ${16:# The role part of the SELinux filesystem object context}
    setype: ${17:# The type part of the SELinux filesystem object context}
    selevel: ${18:# The level part of the SELinux filesystem object context}
    unsafe_writes: ${19:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    attributes: ${20:# The attributes the resulting filesystem object should have}
  tags:
    - ansible
    - builtin
    - file]]></content>
  <tabTrigger>ansible.builtin.file</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage files and file properties</description>
</snippet>