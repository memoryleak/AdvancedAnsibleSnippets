<snippet>
  <content><![CDATA[- name: ${1:Manage files and file properties}
  ansible.builtin.file:
    access_time: ${2:# This parameter indicates the time the file's access time should be set to}
    access_time_format: ${3:# When used with O(access_time), indicates the time format that must be used}
    attributes: ${4:# The attributes the resulting filesystem object should have}
    follow: ${5:# This flag indicates that filesystem links, if they exist, should be followed}
    force: ${6:# Force the creation of the links in two cases: if the link type is symbolic and the source file does not exist (but will appear later); the destination exists and is a file (so, we need to unlink the O(path) file and create a link to the O(src) file in place of it)}
    group: ${7:# Name of the group that should own the filesystem object, as would be fed to C(chown)}
    mode: ${8:# The permissions the resulting filesystem object should have}
    modification_time: ${9:# This parameter indicates the time the file's modification time should be set to}
    modification_time_format: ${10:# When used with O(modification_time), indicates the time format that must be used}
    owner: ${11:# Name of the user that should own the filesystem object, as would be fed to C(chown)}
    path: ${12:# Path to the file being managed}
    recurse: ${13:# Recursively set the specified file attributes on directory contents}
    selevel: ${14:# The level part of the SELinux filesystem object context}
    serole: ${15:# The role part of the SELinux filesystem object context}
    setype: ${16:# The type part of the SELinux filesystem object context}
    seuser: ${17:# The user part of the SELinux filesystem object context}
    src: ${18:# Path of the file to link to}
    state: ${19:# If V(absent), directories will be recursively deleted, and files or symlinks will be unlinked}
    unsafe_writes: ${20:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
  tags:
    - file]]></content>
  <tabTrigger>ansible.builtin.file</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage files and file properties</description>
</snippet>