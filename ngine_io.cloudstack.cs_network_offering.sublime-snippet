<snippet>
  <content><![CDATA[- name: ${1:Manages network offerings on Apache CloudStack based clouds}
  ngine_io.cloudstack.cs_network_offering:
    api_http_method: ${2:# HTTP method used to query the API endpoint}
    api_key: ${3:# API key of the CloudStack API}
    api_secret: ${4:# Secret key of the CloudStack API}
    api_timeout: ${5:# HTTP timeout in seconds}
    api_url: ${6:# URL of the CloudStack API e}
    api_verify_ssl_cert: ${7:# Verify CA authority cert file}
    availability: ${8:# The availability of network offering}
    conserve_mode: ${9:# Whether the network offering has IP conserve mode enabled}
    details: ${10:# Network offering details in key/value pairs}
    display_text: ${11:# Display text of the network offerings}
    domains: ${12:# List of domains the network offering is related to}
    egress_default_policy: ${13:# Whether the default egress policy is allow or to deny}
    for_vpc: ${14:# Whether the offering is meant to be used for VPC or not}
    guest_ip_type: ${15:# Guest type of the network offering}
    keepalive_enabled: ${16:# If true keepalive will be turned on in the loadbalancer}
    max_connections: ${17:# Maximum number of concurrent connections supported by the network offering}
    name: ${18:# The name of the network offering}
    network_rate: ${19:# Data transfer rate in megabits per second allowed}
    persistent: ${20:# True if network offering supports persistent networks}
    service_capabilities: ${21:# Desired service capabilities as part of network offering}
    service_offering: ${22:# The service offering name or ID used by virtual router provider}
    service_providers: ${23:# Provider to service mapping}
    specify_ip_ranges: ${24:# Whether the network offering supports specifying IP ranges}
    specify_vlan: ${25:# Whether the network offering supports vlans or not}
    state: ${26:# State of the network offering}
    supported_services: ${27:# Services supported by the network offering}
    tags: ${28:# List of tags}
    traffic_type: ${29:# The traffic type for the network offering}
    validate_certs: ${30:# If V(false), SSL certificates will not be validated}
    zones: ${31:# List of zones the network offering is related to}
  tags:
    - ngine_io
    - cloudstack
    - cs_network_offering]]></content>
  <tabTrigger>ngine_io.cloudstack.cs_network_offering</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages network offerings on Apache CloudStack based clouds</description>
</snippet>