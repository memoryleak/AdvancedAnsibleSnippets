<snippet>
  <content><![CDATA[- name: ${1:Manage groups of CloudFormation stacks}
  community.aws.cloudformation_stack_set:
    access_key: ${2:# AWS access key ID}
    accounts: ${3:# A list of AWS accounts in which to create instance of CloudFormation stacks}
    administration_role_arn: ${4:# ARN of the administration role, meaning the role that CloudFormation Stack Sets use to assume the roles in your child accounts}
    aws_ca_bundle: ${5:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${6:# A dictionary to modify the botocore configuration}
    capabilities: ${7:# Capabilities allow stacks to create and modify IAM resources, which may include adding users or roles}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    description: ${9:# A description of what this stack set creates}
    endpoint_url: ${10:# URL to connect to instead of the default AWS endpoints}
    execution_role_name: ${11:# ARN of the execution role, meaning the role that CloudFormation Stack Sets assumes in your child accounts}
    failure_tolerance: ${12:# Settings to change what is considered 'failed' when running stack instance updates, and how many to do at a time}
    name: ${13:# Name of the CloudFormation stack set}
    parameters: ${14:# A list of hashes of all the template variables for the stack}
    profile: ${15:# A named AWS profile to use for authentication}
    purge_stacks: ${16:# Only applicable when I(state=absent)}
    region: ${17:# The AWS region to use}
    regions: ${18:# A list of AWS regions to create instances of a stack in}
    secret_key: ${19:# AWS secret access key}
    session_token: ${20:# AWS STS session token for use with temporary credentials}
    state: ${21:# If I(state=present), stack will be created}
    tags: ${22:# Dictionary of tags to associate with stack and its resources during stack creation}
    template: ${23:# The local path of the CloudFormation template}
    template_body: ${24:# Template body}
    template_url: ${25:# Location of file containing the template body}
    validate_certs: ${26:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    wait: ${27:# Whether or not to wait for stack operation to complete}
    wait_timeout: ${28:# How long to wait (in seconds) for stacks to complete create/update/delete operations}
  tags:
    - community
    - aws
    - cloudformation_stack_set]]></content>
  <tabTrigger>community.aws.cloudformation_stack_set</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage groups of CloudFormation stacks</description>
</snippet>