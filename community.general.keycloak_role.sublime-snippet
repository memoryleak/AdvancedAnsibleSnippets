<snippet>
  <content><![CDATA[- name: ${1:Allows administration of Keycloak roles via Keycloak API}
  community.general.keycloak_role:
    attributes: ${2:# A dict of key/value pairs to set as custom attributes for the role}
    auth_client_id: ${3:# OpenID Connect C(client_id) to authenticate to the API with}
    auth_client_secret: ${4:# Client Secret to use in conjunction with O(auth_client_id) (if required)}
    auth_keycloak_url: ${5:# URL to the Keycloak instance}
    auth_password: ${6:# Password to authenticate for API access with}
    auth_realm: ${7:# Keycloak realm name to authenticate to for API access}
    auth_username: ${8:# Username to authenticate for API access with}
    client_id: ${9:# If the role is a client role, the client id under which it resides}
    composite: ${10:# If V(true), the role is a composition of other realm and/or client role}
    composites: ${11:# List of roles to include to the composite realm role}
    connection_timeout: ${12:# Controls the HTTP connections timeout period (in seconds) to Keycloak API}
    description: ${13:# The role description}
    http_agent: ${14:# Configures the HTTP User-Agent header}
    name: ${15:# Name of the role}
    realm: ${16:# The Keycloak realm under which this role resides}
    state: ${17:# State of the role}
    token: ${18:# Authentication token for Keycloak API}
    validate_certs: ${19:# Verify TLS certificates (do not disable this in production)}
  tags:
    - community
    - general
    - keycloak_role]]></content>
  <tabTrigger>community.general.keycloak_role</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Allows administration of Keycloak roles via Keycloak API</description>
</snippet>