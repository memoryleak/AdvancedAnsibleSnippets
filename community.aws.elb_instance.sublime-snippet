<snippet>
  <content><![CDATA[- name: ${1:De-registers or registers instances from EC2 ELBs}
  community.aws.elb_instance:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    ec2_elbs: ${6:# List of ELB names}
    enable_availability_zone: ${7:# Whether to enable the availability zone of the instance on the target ELB if the availability zone has not already been enabled}
    endpoint_url: ${8:# URL to connect to instead of the default AWS endpoints}
    instance_id: ${9:# EC2 Instance ID}
    profile: ${10:# A named AWS profile to use for authentication}
    region: ${11:# The AWS region to use}
    secret_key: ${12:# AWS secret access key}
    session_token: ${13:# AWS STS session token for use with temporary credentials}
    state: ${14:# Register or deregister the instance}
    validate_certs: ${15:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    wait: ${16:# Wait for instance registration or deregistration to complete successfully before returning}
    wait_timeout: ${17:# Number of seconds to wait for an instance to change state}
  tags:
    - community
    - aws
    - elb_instance]]></content>
  <tabTrigger>community.aws.elb_instance</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>De-registers or registers instances from EC2 ELBs</description>
</snippet>