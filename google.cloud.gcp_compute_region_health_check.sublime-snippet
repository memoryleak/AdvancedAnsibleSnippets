<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP RegionHealthCheck}
  google.cloud.gcp_compute_region_health_check:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    check_interval_sec: ${4:# How often (in seconds) to send a health check}
    description: ${5:# An optional description of this resource}
    env_type: ${6:# Specifies which Ansible environment you're running this module within}
    grpc_health_check: ${7:# A nested object resource}
    healthy_threshold: ${8:# A so-far unhealthy instance will be marked healthy after this many consecutive successes}
    http2_health_check: ${9:# A nested object resource}
    http_health_check: ${10:# A nested object resource}
    https_health_check: ${11:# A nested object resource}
    log_config: ${12:# Configure logging on this health check}
    name: ${13:# Name of the resource}
    project: ${14:# The Google Cloud Platform project to use}
    region: ${15:# The region where the regional health check resides}
    scopes: ${16:# Array of scopes to be used}
    service_account_contents: ${17:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${18:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${19:# The path of a Service Account JSON file if serviceaccount is selected as type}
    ssl_health_check: ${20:# A nested object resource}
    state: ${21:# Whether the given object should exist in GCP}
    tcp_health_check: ${22:# A nested object resource}
    timeout_sec: ${23:# How long (in seconds) to wait before claiming failure}
    type: ${24:# Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS}
    unhealthy_threshold: ${25:# A so-far healthy instance will be marked unhealthy after this many consecutive failures}
  tags:
    - google
    - cloud
    - gcp_compute_region_health_check]]></content>
  <tabTrigger>google.cloud.gcp_compute_region_health_check</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP RegionHealthCheck</description>
</snippet>