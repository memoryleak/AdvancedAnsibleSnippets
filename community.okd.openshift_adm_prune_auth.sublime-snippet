<snippet>
  <content><![CDATA[- name: ${1:Removes references to the specified roles, clusterroles, users, and groups}
  community.okd.openshift_adm_prune_auth:
    api_key: ${2:# Token used to authenticate with the API}
    ca_cert: ${3:# Path to a CA certificate used to authenticate with the API}
    client_cert: ${4:# Path to a certificate used to authenticate with the API}
    client_key: ${5:# Path to a key file used to authenticate with the API}
    context: ${6:# The name of a context found in the config file}
    host: ${7:# Provide a URL for accessing the API}
    impersonate_groups: ${8:# Group(s) to impersonate for the operation}
    impersonate_user: ${9:# Username to impersonate for the operation}
    kubeconfig: ${10:# Path to an existing Kubernetes config file}
    label_selectors: ${11:# Selector (label query) to filter on}
    name: ${12:# Use to specify an object name to remove}
    namespace: ${13:# Use to specify an object namespace}
    no_proxy: ${14:# The comma separated list of hosts/domains/IP/CIDR that shouldn't go through proxy}
    password: ${15:# Provide a password for authenticating with the API}
    persist_config: ${16:# Whether or not to save the kube config refresh tokens}
    proxy: ${17:# The URL of an HTTP proxy to use for the connection}
    proxy_headers: ${18:# The Header used for the HTTP proxy}
    resource: ${19:# The specified resource to remove}
    username: ${20:# Provide a username for authenticating with the API}
    validate_certs: ${21:# Whether or not to verify the API server's SSL certificates}
  tags:
    - community
    - okd
    - openshift_adm_prune_auth]]></content>
  <tabTrigger>community.okd.openshift_adm_prune_auth</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Removes references to the specified roles, clusterroles, users, and groups</description>
</snippet>