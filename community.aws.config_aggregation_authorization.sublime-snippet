<snippet>
  <content><![CDATA[- name: ${1:Manage cross-account AWS Config authorizations}
  community.aws.config_aggregation_authorization:
    state: ${2:# Whether the Config rule should be present or absent}
    authorized_account_id: ${3:# The 12-digit account ID of the account authorized to aggregate data}
    authorized_aws_region: ${4:# The region authorized to collect aggregated data}
    access_key: ${5:# AWS access key ID}
    secret_key: ${6:# AWS secret access key}
    session_token: ${7:# AWS STS session token for use with temporary credentials}
    profile: ${8:# A named AWS profile to use for authentication}
    endpoint_url: ${9:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${10:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${11:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${12:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${13:# Use a C(botocore}
    region: ${14:# The AWS region to use}
  tags:
    - community
    - aws
    - config_aggregation_authorization]]></content>
  <tabTrigger>community.aws.config_aggregation_authorization</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage cross-account AWS Config authorizations</description>
</snippet>