<snippet>
  <content><![CDATA[- name: ${1:Manage AWS Backup Plans}
  amazon.aws.backup_plan:
    access_key: ${2:# AWS access key ID}
    advanced_backup_settings: ${3:# Specifies a list of advanced backup settings for each resource type}
    aws_ca_bundle: ${4:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${5:# A dictionary to modify the botocore configuration}
    backup_plan_name: ${6:# The display name of a backup plan}
    creator_request_id: ${7:# Identifies the request and allows failed requests to be retried without the risk of running the operation twice}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    endpoint_url: ${9:# URL to connect to instead of the default AWS endpoints}
    profile: ${10:# A named AWS profile to use for authentication}
    purge_tags: ${11:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    region: ${12:# The AWS region to use}
    rules: ${13:# An array of BackupRule objects, each of which specifies a scheduled task that is used to back up a selection of resources}
    secret_key: ${14:# AWS secret access key}
    session_token: ${15:# AWS STS session token for use with temporary credentials}
    state: ${16:# Create/update or delete a backup plan}
    tags: ${17:# To help organize your resources, you can assign your own metadata to the resources that you create}
    validate_certs: ${18:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - amazon
    - aws
    - backup_plan]]></content>
  <tabTrigger>amazon.aws.backup_plan</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS Backup Plans</description>
</snippet>