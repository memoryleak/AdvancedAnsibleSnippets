<snippet>
  <content><![CDATA[- name: ${1:Initialises a MongoDB replicaset}
  community.mongodb.mongodb_replicaset:
    replica_set: ${2:# Replicaset name}
    members: ${3:# Yaml list consisting of the replicaset members}
    validate: ${4:# Performs some basic validation on the provided replicaset config}
    arbiter_at_index: ${5:# Identifies the position of the member in the array that is an arbiter}
    chaining_allowed: ${6:# When I(settings}
    heartbeat_timeout_secs: ${7:# Number of seconds that the replicaset members wait for a successful heartbeat from each other}
    election_timeout_millis: ${8:# The time limit in milliseconds for detecting when a replicaset's primary is unreachable}
    protocol_version: ${9:# Version of the replicaset election protocol}
    reconfigure: ${10:# This feature is currently experimental}
    force: ${11:# Only relevant when reconfigure = true}
    max_time_ms: ${12:# Specifies a cumulative time limit in milliseconds for processing the replicaset reconfiguration}
    debug: ${13:# Add additonal info for debug}
    cluster_cmd: ${14:# Command the module should use to obtain information about the MongoDB node we are connecting to}
    login_user: ${15:# The MongoDB user to login with}
    login_password: ${16:# The password used to authenticate with}
    login_database: ${17:# The database where login credentials are stored}
    login_host: ${18:# The host running MongoDB instance to login to}
    login_port: ${19:# The MongoDB server port to login to}
    strict_compatibility: ${20:# Enforce strict requirements for pymongo and MongoDB software versions}
    ssl: ${21:# Whether to use an SSL connection when connecting to the database}
    ssl_cert_reqs: ${22:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_ca_certs: ${23:# The ssl_ca_certs option takes a path to a CA file}
    ssl_crlfile: ${24:# The ssl_crlfile option takes a path to a CRL file}
    ssl_certfile: ${25:# Present a client certificate using the ssl_certfile option}
    ssl_keyfile: ${26:# Private key for the client certificate}
    ssl_pem_passphrase: ${27:# Passphrase to decrypt encrypted private keys}
    auth_mechanism: ${28:# Authentication type}
    connection_options: ${29:# Additional connection options}
  tags:
    - community
    - mongodb
    - mongodb_replicaset]]></content>
  <tabTrigger>community.mongodb.mongodb_replicaset</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Initialises a MongoDB replicaset</description>
</snippet>