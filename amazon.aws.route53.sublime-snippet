<snippet>
  <content><![CDATA[- name: ${1:add or delete entries in Amazons Route 53 DNS service}
  amazon.aws.route53:
    access_key: ${2:# AWS access key ID}
    alias: ${3:# Indicates if this is an alias record}
    alias_evaluate_target_health: ${4:# Whether or not to evaluate an alias target health}
    alias_hosted_zone_id: ${5:# The hosted zone identifier}
    aws_ca_bundle: ${6:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${7:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    endpoint_url: ${9:# URL to connect to instead of the default AWS endpoints}
    failover: ${10:# Failover resource record sets only}
    geo_location: ${11:# Allows to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query}
    health_check: ${12:# Health check to associate with this record}
    hosted_zone_id: ${13:# The Hosted Zone ID of the DNS zone to modify}
    identifier: ${14:# Have to be specified for Weighted, latency-based and failover resource record sets only}
    overwrite: ${15:# Whether an existing record should be overwritten on create if values do not match}
    private_zone: ${16:# If set to C(true), the private zone matching the requested name within the domain will be used if there are both public and private zones}
    profile: ${17:# A named AWS profile to use for authentication}
    record: ${18:# The full DNS record to create or delete}
    region: ${19:# Latency-based resource record sets only Among resource record sets that have the same combination of DNS name and type, a value that determines which region this should be associated with for the latency-based routing}
    retry_interval: ${20:# In the case that Route 53 is still servicing a prior request, this module will wait and try again after this many seconds}
    secret_key: ${21:# AWS secret access key}
    session_token: ${22:# AWS STS session token for use with temporary credentials}
    state: ${23:# Specifies the state of the resource record}
    ttl: ${24:# The TTL, in second, to give the new record}
    type: ${25:# The type of DNS record to create}
    validate_certs: ${26:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    value: ${27:# The new value when creating a DNS record}
    vpc_id: ${28:# When used in conjunction with private_zone: true, this will only modify records in the private hosted zone attached to this VPC}
    wait: ${29:# Wait until the changes have been replicated to all Amazon Route 53 DNS servers}
    wait_timeout: ${30:# How long to wait for the changes to be replicated, in seconds}
    weight: ${31:# Weighted resource record sets only}
    zone: ${32:# The DNS zone to modify}
  tags:
    - amazon
    - aws
    - route53]]></content>
  <tabTrigger>amazon.aws.route53</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>add or delete entries in Amazons Route 53 DNS service</description>
</snippet>