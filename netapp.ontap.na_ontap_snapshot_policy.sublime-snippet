<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP manage Snapshot Policy}
  netapp.ontap.na_ontap_snapshot_policy:
    cert_filepath: ${2:# path to SSL client cert file (}
    comment: ${3:# A human readable comment attached with the snapshot}
    count: ${4:# Retention count for the snapshots created by the schedule}
    enabled: ${5:# Status of the snapshot policy indicating whether the policy will be enabled or disabled}
    feature_flags: ${6:# Enable or disable a new feature}
    force_ontap_version: ${7:# Override the cluster ONTAP version when using REST}
    hostname: ${8:# The hostname or IP address of the ONTAP instance}
    http_port: ${9:# Override the default port (80 or 443) with this port}
    https: ${10:# Enable and disable https}
    key_filepath: ${11:# path to SSL client key file}
    name: ${12:# Name of the snapshot policy to be managed}
    ontapi: ${13:# The ontap api version to use}
    password: ${14:# Password for the specified user}
    prefix: ${15:# Snapshot name prefix for the schedule}
    retention_period: ${16:# The retention period of Snapshot copies for the schedule}
    schedule: ${17:# Schedule to be added inside the policy}
    snapmirror_label: ${18:# SnapMirror label assigned to each schedule inside the policy}
    state: ${19:# If you want to create, modify or delete a snapshot policy}
    use_rest: ${20:# Whether to use REST or ZAPI}
    username: ${21:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${22:# If set to C(no), the SSL certificates will not be validated}
    vserver: ${23:# The name of the vserver to use}
  tags:
    - netapp
    - ontap
    - na_ontap_snapshot_policy]]></content>
  <tabTrigger>netapp.ontap.na_ontap_snapshot_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP manage Snapshot Policy</description>
</snippet>