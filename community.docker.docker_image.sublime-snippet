<snippet>
  <content><![CDATA[- name: ${1:Manage docker images}
  community.docker.docker_image:
    api_version: ${2:# The version of the Docker API running on the Docker Host}
    archive_path: ${3:# Use with O(state=present) to archive an image to a C(}
    build: ${4:# Specifies options used for building images}
    ca_cert: ${5:# Use a CA certificate when performing server verification by providing the path to a CA certificate file}
    client_cert: ${6:# Path to the client's TLS certificate file}
    client_key: ${7:# Path to the client's TLS key file}
    debug: ${8:# Debug mode}
    docker_host: ${9:# The URL or Unix socket path used to connect to the Docker API}
    force_absent: ${10:# Use with O(state=absent) to un-tag and remove all images matching the specified name}
    force_source: ${11:# Use with O(state=present) to build, load or pull an image (depending on the value of the O(source) option) when the image already exists}
    force_tag: ${12:# Use with O(state=present) to force tagging an image}
    load_path: ${13:# Use with O(state=present) to load an image from a C(}
    name: ${14:# Image name}
    pull: ${15:# Specifies options used for pulling images}
    push: ${16:# Push the image to the registry}
    repository: ${17:# Use with O(state=present) to tag the image}
    source: ${18:# Determines where the module will try to retrieve the image from}
    ssl_version: ${19:# Provide a valid SSL version number}
    state: ${20:# Make assertions about the state of an image}
    tag: ${21:# Used to select an image when pulling}
    timeout: ${22:# The maximum amount of time in seconds to wait on a response from the API}
    tls: ${23:# Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server}
    tls_hostname: ${24:# When verifying the authenticity of the Docker Host server, provide the expected name of the server}
    use_ssh_client: ${25:# For SSH transports, use the C(ssh) CLI tool instead of paramiko}
    validate_certs: ${26:# Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server}
  tags:
    - community
    - docker
    - docker_image]]></content>
  <tabTrigger>community.docker.docker_image</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage docker images</description>
</snippet>