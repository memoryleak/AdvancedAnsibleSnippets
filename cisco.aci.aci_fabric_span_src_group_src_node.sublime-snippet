<snippet>
  <content><![CDATA[- name: ${1:Manage Fabric SPAN source nodes (span:RsSrcToNode)}
  cisco.aci.aci_fabric_span_src_group_src_node:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    host: ${4:# IP Address or hostname of APIC resolvable by Ansible control host}
    node: ${5:# The node id of the source access node}
    output_level: ${6:# Influence the output of this ACI module}
    output_path: ${7:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${8:# The password to use for authentication}
    pod: ${9:# The pod id of the source access node}
    port: ${10:# Port number to be used for REST connection}
    private_key: ${11:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    source: ${12:# The name of the Fabric SPAN source}
    source_group: ${13:# The name of the Fabric SPAN source group}
    state: ${14:# Use C(present) or C(absent) for adding or removing}
    timeout: ${15:# The socket level timeout in seconds}
    use_proxy: ${16:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${17:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${18:# The username to use for authentication}
    validate_certs: ${19:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_fabric_span_src_group_src_node]]></content>
  <tabTrigger>cisco.aci.aci_fabric_span_src_group_src_node</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Fabric SPAN source nodes (span:RsSrcToNode)</description>
</snippet>