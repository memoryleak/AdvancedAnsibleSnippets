<snippet>
  <content><![CDATA[- name: ${1:Manage content switching actions}
  community.network.netscaler_cs_action:
    comment: ${2:# Comments associated with this cs action}
    name: ${3:# Name for the content switching action}
    nitro_pass: ${4:# The password with which to authenticate to the netscaler node}
    nitro_protocol: ${5:# Which protocol to use when accessing the nitro API objects}
    nitro_timeout: ${6:# Time in seconds until a timeout error is thrown when establishing a new session with Netscaler}
    nitro_user: ${7:# The username with which to authenticate to the netscaler node}
    nsip: ${8:# The ip address of the netscaler appliance where the nitro API calls will be made}
    save_config: ${9:# If C(yes) the module will save the configuration on the netscaler node if it makes any changes}
    state: ${10:# The state of the resource being configured by the module on the netscaler node}
    targetlbvserver: ${11:# Name of the load balancing virtual server to which the content is switched}
    targetvserver: ${12:# Name of the VPN virtual server to which the content is switched}
    targetvserverexpr: ${13:# Information about this content switching action}
    validate_certs: ${14:# If C(no), SSL certificates will not be validated}
  tags:
    - community
    - network
    - netscaler_cs_action]]></content>
  <tabTrigger>community.network.netscaler_cs_action</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage content switching actions</description>
</snippet>