<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP manage broadcast domains}
  netapp.ontap.na_ontap_broadcast_domain:
    state: ${2:# Whether the specified broadcast domain should exist or not}
    name: ${3:# Specify the broadcast domain name}
    from_name: ${4:# Specify the broadcast domain name to be split into new broadcast domain}
    mtu: ${5:# Specify the required mtu for the broadcast domain}
    ipspace: ${6:# Specify the required ipspace for the broadcast domain}
    from_ipspace: ${7:# if used with C(from_name), it will try to find broadcast domain C(from_name) in C(from_ipspace), split action either rename broadcast_domain and ipspace or create a new broadcast domain}
    ports: ${8:# Specify the ports associated with this broadcast domain}
    hostname: ${9:# The hostname or IP address of the ONTAP instance}
    username: ${10:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    password: ${11:# Password for the specified user}
    cert_filepath: ${12:# path to SSL client cert file (}
    key_filepath: ${13:# path to SSL client key file}
    https: ${14:# Enable and disable https}
    validate_certs: ${15:# If set to C(no), the SSL certificates will not be validated}
    http_port: ${16:# Override the default port (80 or 443) with this port}
    ontapi: ${17:# The ontap api version to use}
    use_rest: ${18:# Whether to use REST or ZAPI}
    feature_flags: ${19:# Enable or disable a new feature}
    force_ontap_version: ${20:# Override the cluster ONTAP version when using REST}
  tags:
    - netapp
    - ontap
    - na_ontap_broadcast_domain]]></content>
  <tabTrigger>netapp.ontap.na_ontap_broadcast_domain</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP manage broadcast domains</description>
</snippet>