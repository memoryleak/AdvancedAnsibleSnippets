<snippet>
  <content><![CDATA[- name: ${1:Manages BGP neighbor Address-family configuration on HUAWEI CloudEngine switches}
  community.network.ce_bgp_neighbor_af:
    add_path_mode: ${2:# null, Null}
    adv_add_path_num: ${3:# The number of addPath advertise route}
    advertise_arp: ${4:# If the value is true, advertised ARP routes are distinguished}
    advertise_community: ${5:# If the value is true, the community attribute is advertised to peers}
    advertise_ext_community: ${6:# If the value is true, the extended community attribute is advertised to peers}
    advertise_irb: ${7:# If the value is true, advertised IRB routes are distinguished}
    advertise_remote_nexthop: ${8:# If the value is true, the remote next-hop attribute is advertised to peers}
    af_type: ${9:# Address family type of a BGP instance}
    allow_as_loop_enable: ${10:# If the value is true, repetitive local AS numbers are allowed}
    allow_as_loop_limit: ${11:# Set the maximum number of repetitive local AS number}
    default_rt_adv_enable: ${12:# If the value is true, the function to advertise default routes to peers is enabled}
    default_rt_adv_policy: ${13:# Specify the name of a used policy}
    default_rt_match_mode: ${14:# null, Null}
    discard_ext_community: ${15:# If the value is true, the extended community attribute in the peer route information is discarded}
    export_acl_name_or_num: ${16:# Apply an IPv4 ACL-based filtering policy to the routes to be advertised to a specified peer}
    export_as_path_filter: ${17:# Apply an AS_Path-based filtering policy to the routes to be advertised to a specified peer}
    export_as_path_name_or_num: ${18:# Application of a AS path list based filtering policy to the routing of a specified peer}
    export_pref_filt_name: ${19:# Specify the IPv4 filtering policy applied to the routes to be advertised to a specified peer}
    export_rt_policy_name: ${20:# Specify the filtering policy applied to the routes to be advertised to a peer}
    import_acl_name_or_num: ${21:# Apply an IPv4 ACL-based filtering policy to the routes received from a specified peer}
    import_as_path_filter: ${22:# Apply an AS_Path-based filtering policy to the routes received from a specified peer}
    import_as_path_name_or_num: ${23:# A routing strategy based on the AS path list for routing received by a designated peer}
    import_pref_filt_name: ${24:# Specify the IPv4 filtering policy applied to the routes received from a specified peer}
    import_rt_policy_name: ${25:# Specify the filtering policy applied to the routes learned from a peer}
    ipprefix_orf_enable: ${26:# If the value is true, the address prefix-based Outbound Route Filter (ORF) capability is enabled for peers}
    is_nonstd_ipprefix_mod: ${27:# If the value is true, Non-standard capability codes are used during capability negotiation}
    keep_all_routes: ${28:# If the value is true, the system stores all route update messages received from all peers (groups) after BGP connection setup}
    nexthop_configure: ${29:# null, The next hop is not changed}
    orf_mode: ${30:# ORF mode}
    orftype: ${31:# ORF Type}
    origin_as_valid: ${32:# If the value is true, Application results of route announcement}
    preferred_value: ${33:# Assign a preferred value for the routes learned from a specified peer}
    public_as_only: ${34:# If the value is true, sent BGP update messages carry only the public AS number but do not carry private AS numbers}
    public_as_only_force: ${35:# If the value is true, sent BGP update messages carry only the public AS number but do not carry private AS numbers}
    public_as_only_limited: ${36:# Limited use public as number}
    public_as_only_replace: ${37:# Private as replaced by public as number}
    public_as_only_skip_peer_as: ${38:# Public as only skip peer as}
    redirect_ip: ${39:# Redirect ip}
    redirect_ip_validation: ${40:# Redirect ip validation}
    reflect_client: ${41:# If the value is true, the local device functions as the route reflector and a peer functions as a client of the route reflector}
    remote_address: ${42:# IPv4 or IPv6 peer connection address}
    route_limit: ${43:# Configure the maximum number of routes that can be accepted from a peer}
    route_limit_idle_timeout: ${44:# Specify the value of the idle-timeout timer to automatically reestablish the connections after they are cut off when the number of routes exceeds the set threshold}
    route_limit_percent: ${45:# Specify the percentage of routes when a router starts to generate an alarm}
    route_limit_type: ${46:# Noparameter, After the number of received routes exceeds the threshold and the timeout timer expires,no action}
    rt_updt_interval: ${47:# Specify the minimum interval at which Update packets are sent}
    soostring: ${48:# Configure the Site-of-Origin (SoO) extended community attribute}
    substitute_as_enable: ${49:# If the value is true, the function to replace a specified peer's AS number in the AS-Path attribute with the local AS number is enabled}
    update_pkt_standard_compatible: ${50:# If the value is true, When the vpnv4 multicast neighbor receives and updates the message, the message has no label}
    vpls_ad_disable: ${51:# If the value is true, enable vpls-ad}
    vpls_enable: ${52:# If the value is true, vpls enable}
    vrf_name: ${53:# Name of a BGP instance}
  tags:
    - community
    - network
    - ce_bgp_neighbor_af]]></content>
  <tabTrigger>community.network.ce_bgp_neighbor_af</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages BGP neighbor Address-family configuration on HUAWEI CloudEngine switches</description>
</snippet>