<snippet>
  <content><![CDATA[- name: ${1:Manage a Kinesis Stream}
  community.aws.kinesis_stream:
    name: ${2:# The name of the Kinesis Stream you are managing}
    shards: ${3:# The number of shards you want to have with this stream}
    retention_period: ${4:# The length of time (in hours) data records are accessible after they are added to the stream}
    state: ${5:# Create or Delete the Kinesis Stream}
    wait: ${6:# Wait for operation to complete before returning}
    wait_timeout: ${7:# How many seconds to wait for an operation to complete before timing out}
    tags: ${8:# A dictionary of resource tags of the form: C({ tag1: value1, tag2: value2 })}
    encryption_state: ${9:# Enable or Disable encryption on the Kinesis Stream}
    encryption_type: ${10:# The type of encryption}
    key_id: ${11:# The GUID or alias for the KMS key}
    access_key: ${12:# AWS access key ID}
    secret_key: ${13:# AWS secret access key}
    session_token: ${14:# AWS STS session token for use with temporary credentials}
    profile: ${15:# A named AWS profile to use for authentication}
    endpoint_url: ${16:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${17:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${18:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${19:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${20:# Use a C(botocore}
    region: ${21:# The AWS region to use}
  tags:
    - community
    - aws
    - kinesis_stream]]></content>
  <tabTrigger>community.aws.kinesis_stream</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage a Kinesis Stream</description>
</snippet>