<snippet>
  <content><![CDATA[- name: ${1:Manages replication hostgroups using the proxysql admin interface}
  community.proxysql.proxysql_replication_hostgroups:
    check_type: ${2:# Which check type to use when detecting that the node is a standby}
    comment: ${3:# Text field that can be used for any purposes defined by the user}
    config_file: ${4:# Specify a config file from which I(login_user) and I(login_password) are to be read}
    load_to_runtime: ${5:# Dynamically load config to runtime memory}
    login_host: ${6:# The host used to connect to ProxySQL admin interface}
    login_password: ${7:# The password used to authenticate to ProxySQL admin interface}
    login_port: ${8:# The port used to connect to ProxySQL admin interface}
    login_unix_socket: ${9:# The socket used to connect to ProxySQL admin interface}
    login_user: ${10:# The username used to authenticate to ProxySQL admin interface}
    reader_hostgroup: ${11:# Id of the reader hostgroup}
    save_to_disk: ${12:# Save config to sqlite db on disk to persist the configuration}
    state: ${13:# When C(present) - adds the replication hostgroup, when C(absent) - removes the replication hostgroup}
    writer_hostgroup: ${14:# Id of the writer hostgroup}
  tags:
    - community
    - proxysql
    - proxysql_replication_hostgroups]]></content>
  <tabTrigger>community.proxysql.proxysql_replication_hostgroups</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages replication hostgroups using the proxysql admin interface</description>
</snippet>