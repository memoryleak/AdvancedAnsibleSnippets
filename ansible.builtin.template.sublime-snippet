<snippet>
  <content><![CDATA[- name: ${1:Template a file out to a target host}
  ansible.builtin.template:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    backup: ${3:# Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly}
    block_end_string: ${4:# The string marking the end of a block}
    block_start_string: ${5:# The string marking the beginning of a block}
    comment_end_string: ${6:# The string marking the end of a comment statement}
    comment_start_string: ${7:# The string marking the beginning of a comment statement}
    dest: ${8:# Location to render the template to on the remote machine}
    follow: ${9:# Determine whether symbolic links should be followed}
    force: ${10:# Determine when the file is being transferred if the destination already exists}
    group: ${11:# Name of the group that should own the filesystem object, as would be fed to I(chown)}
    lstrip_blocks: ${12:# Determine when leading spaces and tabs should be stripped}
    mode: ${13:# The permissions the resulting filesystem object should have}
    newline_sequence: ${14:# Specify the newline sequence to use for templating files}
    output_encoding: ${15:# Overrides the encoding used to write the template file defined by O(dest)}
    owner: ${16:# Name of the user that should own the filesystem object, as would be fed to I(chown)}
    selevel: ${17:# The level part of the SELinux filesystem object context}
    serole: ${18:# The role part of the SELinux filesystem object context}
    setype: ${19:# The type part of the SELinux filesystem object context}
    seuser: ${20:# The user part of the SELinux filesystem object context}
    src: ${21:# Path of a Jinja2 formatted template on the Ansible controller}
    trim_blocks: ${22:# Determine when newlines should be removed from blocks}
    unsafe_writes: ${23:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    validate: ${24:# The validation command to run before copying the updated file into the final destination}
    variable_end_string: ${25:# The string marking the end of a print statement}
    variable_start_string: ${26:# The string marking the beginning of a print statement}
  tags:
    - template]]></content>
  <tabTrigger>ansible.builtin.template</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Template a file out to a target host</description>
</snippet>