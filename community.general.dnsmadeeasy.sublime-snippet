<snippet>
  <content><![CDATA[- name: ${1:Interface with dnsmadeeasy}
  community.general.dnsmadeeasy:
    account_key: ${2:# Account API Key}
    account_secret: ${3:# Account Secret Key}
    autoFailover: ${4:# If true, fallback to the primary IP address is manual after a failover}
    contactList: ${5:# Name or id of the contact list that the monitor will notify}
    domain: ${6:# Domain to work with}
    failover: ${7:# If V(true), add or change the failover}
    httpFile: ${8:# The file at the Fqdn that the monitor queries for HTTP or HTTPS}
    httpFqdn: ${9:# The fully qualified domain name used by the monitor}
    httpQueryString: ${10:# The string in the httpFile that the monitor queries for HTTP or HTTPS}
    ip1: ${11:# Primary IP address for the failover}
    ip2: ${12:# Secondary IP address for the failover}
    ip3: ${13:# Tertiary IP address for the failover}
    ip4: ${14:# Quaternary IP address for the failover}
    ip5: ${15:# Quinary IP address for the failover}
    maxEmails: ${16:# Number of emails sent to the contact list by the monitor}
    monitor: ${17:# If V(true), add or change the monitor}
    port: ${18:# Port used by the monitor}
    protocol: ${19:# Protocol used by the monitor}
    record_name: ${20:# Record name to get/create/delete/update}
    record_ttl: ${21:# record's 'Time to live'}
    record_type: ${22:# Record type}
    record_value: ${23:# Record value}
    sandbox: ${24:# Decides if the sandbox API should be used}
    sensitivity: ${25:# Number of checks the monitor performs before a failover occurs where Low = 8, Medium = 5,and High = 3}
    state: ${26:# whether the record should exist or not}
    systemDescription: ${27:# Description used by the monitor}
    validate_certs: ${28:# If V(false), SSL certificates will not be validated}
  tags:
    - community
    - general
    - dnsmadeeasy]]></content>
  <tabTrigger>community.general.dnsmadeeasy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Interface with dnsmadeeasy</description>
</snippet>