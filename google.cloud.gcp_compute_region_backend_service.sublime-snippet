<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP RegionBackendService}
  google.cloud.gcp_compute_region_backend_service:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    affinity_cookie_ttl_sec: ${3:# Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE}
    auth_kind: ${4:# The type of credential used}
    backends: ${5:# The set of backends that serve this RegionBackendService}
    cdn_policy: ${6:# Cloud CDN configuration for this BackendService}
    circuit_breakers: ${7:# Settings controlling the volume of connections to a backend service}
    connection_draining: ${8:# Settings for connection draining}
    consistent_hash: ${9:# Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties}
    description: ${10:# An optional description of this resource}
    enable_cdn: ${11:# If true, enable Cloud CDN for this RegionBackendService}
    env_type: ${12:# Specifies which Ansible environment you're running this module within}
    failover_policy: ${13:# Policy for failovers}
    health_checks: ${14:# The set of URLs to HealthCheck resources for health checking this RegionBackendService}
    load_balancing_scheme: ${15:# Indicates what kind of load balancing this regional backend service will be used for}
    locality_lb_policy: ${16:# The load balancing algorithm used within the scope of the locality}
    log_config: ${17:# This field denotes the logging options for the load balancer traffic served by this backend service}
    name: ${18:# Name of the resource}
    network: ${19:# The URL of the network to which this backend service belongs}
    outlier_detection: ${20:# Settings controlling eviction of unhealthy hosts from the load balancing pool}
    port_name: ${21:# A named port on a backend instance group representing the port for communication to the backend VMs in that group}
    project: ${22:# The Google Cloud Platform project to use}
    protocol: ${23:# The protocol this RegionBackendService uses to communicate with backends}
    region: ${24:# A reference to the region where the regional backend service resides}
    scopes: ${25:# Array of scopes to be used}
    service_account_contents: ${26:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${27:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${28:# The path of a Service Account JSON file if serviceaccount is selected as type}
    session_affinity: ${29:# Type of session affinity to use}
    state: ${30:# Whether the given object should exist in GCP}
    timeout_sec: ${31:# How many seconds to wait for the backend before considering it a failed request}
  tags:
    - google
    - cloud
    - gcp_compute_region_backend_service]]></content>
  <tabTrigger>google.cloud.gcp_compute_region_backend_service</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP RegionBackendService</description>
</snippet>