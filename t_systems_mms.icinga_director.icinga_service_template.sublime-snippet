<snippet>
  <content><![CDATA[- name: ${1:Manage service templates in Icinga2}
  t_systems_mms.icinga_director.icinga_service_template:
    state: ${2:# Apply feature state}
    object_name: ${3:# Name of the service template}
    check_command: ${4:# Check command definition}
    check_interval: ${5:# Your regular check interval}
    check_period: ${6:# The name of a time period which determines when this object should be monitored}
    check_timeout: ${7:# Check command timeout in seconds}
    enable_active_checks: ${8:# Whether to actively check this object}
    enable_event_handler: ${9:# Whether to enable event handlers this object}
    enable_flapping: ${10:# Whether flap detection is enabled on this object}
    enable_notifications: ${11:# Whether to send notifications for this object}
    enable_passive_checks: ${12:# Whether to accept passive check results for this object}
    enable_perfdata: ${13:# Whether to process performance data provided by this object}
    event_command: ${14:# Event command for service which gets called on every check execution if one of these conditions matches}
    flapping_threshold_high: ${15:# Flapping upper bound in percent for a service to be considered flapping}
    flapping_threshold_low: ${16:# Flapping lower bound in percent for a service to be considered not flapping}
    groups: ${17:# Service groups that should be directly assigned to this service}
    icon_image: ${18:# An URL pointing to an icon for this object}
    icon_image_alt: ${19:# Alternative text to be shown in case above icon is missing}
    imports: ${20:# Importable templates, add as many as you want}
    max_check_attempts: ${21:# Defines after how many check attempts a new hard state is reached}
    notes: ${22:# Additional notes for this object}
    notes_url: ${23:# An URL pointing to additional notes for this object}
    retry_interval: ${24:# Retry interval, will be applied after a state change unless the next hard state is reached}
    use_agent: ${25:# Whether the check commmand for this service should be executed on the Icinga agent}
    vars: ${26:# Custom properties of the service template}
    volatile: ${27:# Whether this check is volatile}
    disabled: ${28:# Disabled objects will not be deployed}
    append: ${29:# Do not overwrite the whole object but instead append the defined properties}
    url: ${30:# HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host}
    force: ${31:# If C(yes) do not get a cached copy}
    http_agent: ${32:# Header to identify as, generally appears in web server logs}
    use_proxy: ${33:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${34:# If C(no), SSL certificates will not be validated}
    url_username: ${35:# The username for use in HTTP basic authentication}
    url_password: ${36:# The password for use in HTTP basic authentication}
    force_basic_auth: ${37:# Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header}
    client_cert: ${38:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${39:# PEM formatted file that contains your private key to be used for SSL client authentication}
    use_gssapi: ${40:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
  tags:
    - t_systems_mms
    - icinga_director
    - icinga_service_template]]></content>
  <tabTrigger>t_systems_mms.icinga_director.icinga_service_template</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage service templates in Icinga2</description>
</snippet>