<snippet>
  <content><![CDATA[- name: ${1:grant or revoke an Automation Platform Controller role}
  awx.awx.tower_role:
    user: ${2:# User that receives the permissions specified by the role}
    team: ${3:# Team that receives the permissions specified by the role}
    role: ${4:# The role type to grant/revoke}
    target_team: ${5:# Team that the role acts on}
    target_teams: ${6:# Team that the role acts on}
    inventory: ${7:# Inventory the role acts on}
    inventories: ${8:# Inventory the role acts on}
    job_template: ${9:# The job template the role acts on}
    job_templates: ${10:# The job template the role acts on}
    workflow: ${11:# The workflow job template the role acts on}
    workflows: ${12:# The workflow job template the role acts on}
    credential: ${13:# Credential the role acts on}
    credentials: ${14:# Credential the role acts on}
    organization: ${15:# Organization the role acts on}
    organizations: ${16:# Organization the role acts on}
    lookup_organization: ${17:# Organization the inventories, job templates, projects, or workflows the items exists in}
    project: ${18:# Project the role acts on}
    projects: ${19:# Project the role acts on}
    state: ${20:# Desired state}
    controller_host: ${21:# URL to your Automation Platform Controller instance}
    controller_username: ${22:# Username for your controller instance}
    controller_password: ${23:# Password for your controller instance}
    controller_oauthtoken: ${24:# The OAuth token to use}
    validate_certs: ${25:# Whether to allow insecure connections to AWX}
    controller_config_file: ${26:# Path to the controller config file}
  tags:
    - awx
    - awx
    - tower_role]]></content>
  <tabTrigger>awx.awx.tower_role</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>grant or revoke an Automation Platform Controller role</description>
</snippet>