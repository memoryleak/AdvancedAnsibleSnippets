<snippet>
  <content><![CDATA[- name: ${1:Manage initial Contract Subjects (vz:Subj)}
  cisco.aci.aci_contract_subject:
    annotation: ${2:# User-defined string for annotating an object}
    apply_both_direction: ${3:# The direction of traffic matching for the filter}
    certificate_name: ${4:# The X}
    consumer_match: ${5:# The match criteria across consumers}
    contract: ${6:# The name of the Contract}
    description: ${7:# Description for the contract subject}
    dscp: ${8:# The target DSCP}
    dscp_consumer_to_provider: ${9:# The target DSCP of Filter Chain For Consumer to Provider}
    dscp_provider_to_consumer: ${10:# The target DSCP of Filter Chain For Provider to Consumer}
    host: ${11:# IP Address or hostname of APIC resolvable by Ansible control host}
    name_alias: ${12:# The alias for the current object}
    output_level: ${13:# Influence the output of this ACI module}
    output_path: ${14:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${15:# The password to use for authentication}
    port: ${16:# Port number to be used for REST connection}
    priority: ${17:# The QoS class}
    priority_consumer_to_provider: ${18:# The QoS class of Filter Chain For Consumer to Provider}
    priority_provider_to_consumer: ${19:# The QoS class of Filter Chain For Provider to Consumer}
    private_key: ${20:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    provider_match: ${21:# The match criteria across providers}
    reverse_filter: ${22:# Determines if the APIC should reverse the src and dst ports to allow the return traffic back, since ACI is stateless filter}
    state: ${23:# Use C(present) or C(absent) for adding or removing}
    subject: ${24:# The contract subject name}
    suppress_previous: ${25:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${26:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    tenant: ${27:# The name of the tenant}
    timeout: ${28:# The socket level timeout in seconds}
    use_proxy: ${29:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${30:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${31:# The username to use for authentication}
    validate_certs: ${32:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_contract_subject]]></content>
  <tabTrigger>cisco.aci.aci_contract_subject</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage initial Contract Subjects (vz:Subj)</description>
</snippet>