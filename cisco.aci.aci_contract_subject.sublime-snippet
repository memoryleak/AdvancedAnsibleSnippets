<snippet>
  <content><![CDATA[- name: ${1:Manage initial Contract Subjects (vz:Subj)}
  cisco.aci.aci_contract_subject:
    tenant: ${2:# The name of the tenant}
    subject: ${3:# The contract subject name}
    apply_both_direction: ${4:# The direction of traffic matching for the filter}
    contract: ${5:# The name of the Contract}
    reverse_filter: ${6:# Determines if the APIC should reverse the src and dst ports to allow the return traffic back, since ACI is stateless filter}
    priority: ${7:# The QoS class}
    dscp: ${8:# The target DSCP}
    priority_consumer_to_provider: ${9:# The QoS class of Filter Chain For Consumer to Provider}
    dscp_consumer_to_provider: ${10:# The target DSCP of Filter Chain For Consumer to Provider}
    priority_provider_to_consumer: ${11:# The QoS class of Filter Chain For Provider to Consumer}
    dscp_provider_to_consumer: ${12:# The target DSCP of Filter Chain For Provider to Consumer}
    description: ${13:# Description for the contract subject}
    consumer_match: ${14:# The match criteria across consumers}
    provider_match: ${15:# The match criteria across providers}
    state: ${16:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${17:# The alias for the current object}
    host: ${18:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${19:# Port number to be used for REST connection}
    username: ${20:# The username to use for authentication}
    password: ${21:# The password to use for authentication}
    private_key: ${22:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${23:# The X}
    output_level: ${24:# Influence the output of this ACI module}
    timeout: ${25:# The socket level timeout in seconds}
    use_proxy: ${26:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${27:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${28:# If C(no), SSL certificates will not be validated}
    output_path: ${29:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${30:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_contract_subject]]></content>
  <tabTrigger>cisco.aci.aci_contract_subject</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage initial Contract Subjects (vz:Subj)</description>
</snippet>