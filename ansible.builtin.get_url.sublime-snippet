<snippet>
  <content><![CDATA[- name: ${1:Downloads files from HTTP, HTTPS, or FTP to node}
  ansible.builtin.get_url:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    backup: ${3:# Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly}
    checksum: ${4:# If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully}
    ciphers: ${5:# SSL/TLS Ciphers to use for the request}
    client_cert: ${6:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${7:# PEM formatted file that contains your private key to be used for SSL client authentication}
    decompress: ${8:# Whether to attempt to decompress gzip content-encoded responses}
    dest: ${9:# Absolute path of where to download the file to}
    force: ${10:# If V(true) and O(dest) is not a directory, will download the file every time and replace the file if the contents change}
    force_basic_auth: ${11:# Force the sending of the Basic authentication header upon initial request}
    group: ${12:# Name of the group that should own the filesystem object, as would be fed to C(chown)}
    headers: ${13:# Add custom HTTP headers to a request in hash/dict format}
    http_agent: ${14:# Header to identify as, generally appears in web server logs}
    mode: ${15:# The permissions the resulting filesystem object should have}
    owner: ${16:# Name of the user that should own the filesystem object, as would be fed to C(chown)}
    selevel: ${17:# The level part of the SELinux filesystem object context}
    serole: ${18:# The role part of the SELinux filesystem object context}
    setype: ${19:# The type part of the SELinux filesystem object context}
    seuser: ${20:# The user part of the SELinux filesystem object context}
    timeout: ${21:# Timeout in seconds for URL request}
    tmp_dest: ${22:# Absolute path of where temporary file is downloaded to}
    unredirected_headers: ${23:# A list of header names that will not be sent on subsequent redirected requests}
    unsafe_writes: ${24:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    url: ${25:# HTTP, HTTPS, or FTP URL in the form C((http|https|ftp)://[user[:pass]]@host}
    url_password: ${26:# The password for use in HTTP basic authentication}
    url_username: ${27:# The username for use in HTTP basic authentication}
    use_gssapi: ${28:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
    use_netrc: ${29:# Determining whether to use credentials from C(~/}
    use_proxy: ${30:# if V(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${31:# If V(false), SSL certificates will not be validated}
  tags:
    - get_url]]></content>
  <tabTrigger>ansible.builtin.get_url</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Downloads files from HTTP, HTTPS, or FTP to node</description>
</snippet>