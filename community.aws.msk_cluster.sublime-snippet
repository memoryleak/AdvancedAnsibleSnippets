<snippet>
  <content><![CDATA[- name: ${1:Manage Amazon MSK clusters}
  community.aws.msk_cluster:
    access_key: ${2:# AWS access key ID}
    authentication: ${3:# Includes all client authentication related information}
    aws_ca_bundle: ${4:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${5:# A dictionary to modify the botocore configuration}
    configuration_arn: ${6:# ARN of the configuration to use}
    configuration_revision: ${7:# The revision of the configuration to use}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    ebs_volume_size: ${9:# The size in GiB of the EBS volume for the data drive on each broker node}
    encryption: ${10:# Includes all encryption-related information}
    endpoint_url: ${11:# URL to connect to instead of the default AWS endpoints}
    enhanced_monitoring: ${12:# Specifies the level of monitoring for the MSK cluster}
    instance_type: ${13:# The type of Amazon EC2 instances to use for Kafka brokers}
    logging: ${14:# Logging configuration}
    name: ${15:# The name of the cluster}
    nodes: ${16:# The number of broker nodes in the cluster}
    open_monitoring: ${17:# The settings for open monitoring}
    profile: ${18:# A named AWS profile to use for authentication}
    purge_tags: ${19:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${20:# The AWS region to use}
    secret_key: ${21:# AWS secret access key}
    security_groups: ${22:# The AWS security groups to associate with the elastic network interfaces in order to specify who can connect to and communicate with the Amazon MSK cluster}
    session_token: ${23:# AWS STS session token for use with temporary credentials}
    state: ${24:# Create (C(present)) or delete (C(absent)) cluster}
    subnets: ${25:# The list of subnets to connect to in the client virtual private cloud (VPC)}
    tags: ${26:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${27:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    version: ${28:# The version of Apache Kafka}
    wait: ${29:# Whether to wait for the cluster to be available or deleted}
    wait_timeout: ${30:# How many seconds to wait}
  tags:
    - community
    - aws
    - msk_cluster]]></content>
  <tabTrigger>community.aws.msk_cluster</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Amazon MSK clusters</description>
</snippet>