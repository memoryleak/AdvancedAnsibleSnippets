<snippet>
  <content><![CDATA[- name: ${1:Resource module for Backup RESTore}
  cisco.ise.backup_restore:
    backupEncryptionKey: ${2:# The encryption key which was provided at the time of taking backup}
    ise_debug: ${3:# Flag for Identity Services Engine SDK to enable debugging}
    ise_hostname: ${4:# The Identity Services Engine hostname}
    ise_password: ${5:# The Identity Services Engine password to authenticate}
    ise_single_request_timeout: ${6:# Timeout (in seconds) for RESTful HTTP requests}
    ise_username: ${7:# The Identity Services Engine username to authenticate}
    ise_uses_api_gateway: ${8:# Flag that informs the SDK whether to use the Identity Services Engine's API Gateway to send requests}
    ise_uses_csrf_token: ${9:# Flag that informs the SDK whether we send the CSRF token to ISE's ERS APIs}
    ise_verify: ${10:# Flag to enable or disable SSL certificate verification}
    ise_version: ${11:# Informs the SDK which version of Identity Services Engine to use}
    ise_wait_on_rate_limit: ${12:# Flag for Identity Services Engine SDK to enable automatic rate-limit handling}
    repositoryName: ${13:# Name of the configred repository where the backup file exists}
    restoreFile: ${14:# Name of the backup file to be restored on ISE node}
    restoreIncludeAdeos: ${15:# Determines whether the ADE-OS configure is restored}
  tags:
    - cisco
    - ise
    - backup_restore]]></content>
  <tabTrigger>cisco.ise.backup_restore</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Resource module for Backup RESTore</description>
</snippet>