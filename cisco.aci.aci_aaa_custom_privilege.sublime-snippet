<snippet>
  <content><![CDATA[- name: ${1:Manage AAA RBAC Custom Privileges (aaa:RbacClassPriv)}
  cisco.aci.aci_aaa_custom_privilege:
    name: ${2:# Name of the object class for which you are configuring access}
    description: ${3:# Description of the AAA custom privilege}
    write_privilege: ${4:# Name of the custom privilege that will include write access to objects of the class}
    read_privilege: ${5:# Name of the custom privilege that will include read access to objects of the class}
    state: ${6:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${7:# The alias for the current object}
    host: ${8:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${9:# Port number to be used for REST connection}
    username: ${10:# The username to use for authentication}
    password: ${11:# The password to use for authentication}
    private_key: ${12:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${13:# The X}
    output_level: ${14:# Influence the output of this ACI module}
    timeout: ${15:# The socket level timeout in seconds}
    use_proxy: ${16:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${17:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${18:# If C(no), SSL certificates will not be validated}
    output_path: ${19:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
  tags:
    - cisco
    - aci
    - aci_aaa_custom_privilege]]></content>
  <tabTrigger>cisco.aci.aci_aaa_custom_privilege</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AAA RBAC Custom Privileges (aaa:RbacClassPriv)</description>
</snippet>