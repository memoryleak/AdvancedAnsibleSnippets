<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP InstanceGroupManager}
  google.cloud.gcp_compute_instance_group_manager:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    base_instance_name: ${4:# The base instance name to use for instances in this group}
    description: ${5:# An optional description of this resource}
    env_type: ${6:# Specifies which Ansible environment you're running this module within}
    instance_template: ${7:# The instance template that is specified for this managed instance group}
    name: ${8:# The name of the managed instance group}
    named_ports: ${9:# Named ports configured for the Instance Groups complementary to this Instance Group Manager}
    project: ${10:# The Google Cloud Platform project to use}
    scopes: ${11:# Array of scopes to be used}
    service_account_contents: ${12:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${13:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${14:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${15:# Whether the given object should exist in GCP}
    target_pools: ${16:# TargetPool resources to which instances in the instanceGroup field are added}
    target_size: ${17:# The target number of running instances for this managed instance group}
    zone: ${18:# The zone the managed instance group resides}
  tags:
    - google
    - cloud
    - gcp_compute_instance_group_manager]]></content>
  <tabTrigger>google.cloud.gcp_compute_instance_group_manager</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP InstanceGroupManager</description>
</snippet>