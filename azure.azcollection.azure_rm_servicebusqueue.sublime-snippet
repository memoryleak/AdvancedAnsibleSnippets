<snippet>
  <content><![CDATA[- name: ${1:Manage Azure Service Bus queue}
  azure.azcollection.azure_rm_servicebusqueue:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    api_profile: ${4:# Selects an API profile to use when communicating with Azure services}
    auth_source: ${5:# Controls the source of the credentials to use for authentication}
    auto_delete_on_idle_in_seconds: ${6:# Time idle interval after which a queue is automatically deleted}
    cert_validation_mode: ${7:# Controls the certificate validation behavior for Azure endpoints}
    client_id: ${8:# Azure client ID}
    cloud_environment: ${9:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    dead_lettering_on_message_expiration: ${10:# A value that indicates whether a queue has dead letter support when a message expires}
    default_message_time_to_live_seconds: ${11:# Default message timespan to live value}
    disable_instance_discovery: ${12:# Determines whether or not instance discovery is performed when attempting to authenticate}
    duplicate_detection_time_in_seconds: ${13:# TimeSpan structure that defines the duration of the duplicate detection history}
    enable_batched_operations: ${14:# Value that indicates whether server-side batched operations are enabled}
    enable_express: ${15:# Value that indicates whether Express Entities are enabled}
    enable_partitioning: ${16:# A value that indicates whether the topic or queue is to be partitioned across multiple message brokers}
    forward_dead_lettered_messages_to: ${17:# Queue or topic name to forward the Dead Letter message for a queue}
    forward_to: ${18:# Queue or topic name to forward the messages for a queue}
    lock_duration_in_seconds: ${19:# Timespan duration of a peek-lock}
    log_mode: ${20:# Parent argument}
    log_path: ${21:# Parent argument}
    max_delivery_count: ${22:# The maximum delivery count}
    max_message_size_in_kb: ${23:# Maximum size (in KB) of the message payload that can be accepted by the queue}
    max_size_in_mb: ${24:# The maximum size of the queue in megabytes, which is the size of memory allocated for the queue}
    name: ${25:# Name of the queue}
    namespace: ${26:# Servicebus namespace name}
    password: ${27:# Active Directory user password}
    profile: ${28:# Security profile found in ~/}
    requires_duplicate_detection: ${29:# A value indicating if this queue or topic requires duplicate detection}
    requires_session: ${30:# A value that indicates whether the queue supports the concept of sessions}
    resource_group: ${31:# Name of resource group}
    secret: ${32:# Azure client secret}
    state: ${33:# Assert the state of the queue}
    status: ${34:# Status of the entity}
    subscription_id: ${35:# Your Azure subscription Id}
    tenant: ${36:# Azure tenant ID}
    thumbprint: ${37:# The thumbprint of the private key specified in I(x509_certificate_path)}
    x509_certificate_path: ${38:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_servicebusqueue]]></content>
  <tabTrigger>azure.azcollection.azure_rm_servicebusqueue</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Azure Service Bus queue</description>
</snippet>