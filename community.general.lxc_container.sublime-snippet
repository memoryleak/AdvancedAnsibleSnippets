<snippet>
  <content><![CDATA[- name: ${1:Manage LXC Containers}
  community.general.lxc_container:
    archive: ${2:# Create an archive of a container}
    archive_compression: ${3:# Type of compression to use when creating an archive of a running container}
    archive_path: ${4:# Path the save the archived container}
    backing_store: ${5:# Backend storage type for the container}
    clone_name: ${6:# Name of the new cloned server}
    clone_snapshot: ${7:# Create a snapshot a container when cloning}
    config: ${8:# Path to the LXC configuration file}
    container_command: ${9:# Run a command within a container}
    container_config: ${10:# A list of C(key=value) options to use when configuring a container}
    container_log: ${11:# Enable a container log for host actions to the container}
    container_log_level: ${12:# Set the log level for a container where O(container_log) was set}
    directory: ${13:# Place rootfs directory under DIR}
    fs_size: ${14:# File system Size}
    fs_type: ${15:# Create fstype TYPE}
    lv_name: ${16:# Name of the logical volume, defaults to the container name}
    lxc_path: ${17:# Place container under E(PATH)}
    name: ${18:# Name of a container}
    state: ${19:# Define the state of a container}
    template: ${20:# Name of the template to use within an LXC create}
    template_options: ${21:# Template options when building the container}
    thinpool: ${22:# Use LVM thin pool called TP}
    vg_name: ${23:# If backend store is lvm, specify the name of the volume group}
    zfs_root: ${24:# Create zfs under given zfsroot}
  tags:
    - community
    - general
    - lxc_container]]></content>
  <tabTrigger>community.general.lxc_container</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage LXC Containers</description>
</snippet>