<snippet>
  <content><![CDATA[- name: ${1:Manage Grafana datasources}
  community.grafana.grafana_datasource:
    access: ${2:# The access mode for this datasource}
    additional_json_data: ${3:# Defined data is used for datasource jsonData}
    additional_secure_json_data: ${4:# Defined data is used for datasource secureJsonData}
    aws_access_key: ${5:# AWS access key for CloudWatch datasource type when C(aws_auth_type) is C(keys)}
    aws_assume_role_arn: ${6:# AWS IAM role arn to assume for CloudWatch datasource type when C(aws_auth_type) is C(arn)}
    aws_auth_type: ${7:# Type for AWS authentication for CloudWatch datasource type (authType of grafana api)}
    aws_credentials_profile: ${8:# Profile for AWS credentials for CloudWatch datasource type when C(aws_auth_type) is C(credentials)}
    aws_custom_metrics_namespaces: ${9:# Namespaces of Custom Metrics for CloudWatch datasource type}
    aws_default_region: ${10:# AWS default region for CloudWatch datasource type}
    aws_secret_key: ${11:# AWS secret key for CloudWatch datasource type when C(aws_auth_type) is C(keys)}
    azure_client: ${12:# The application/client ID for the Azure AD app registration to use for authentication}
    azure_cloud: ${13:# The national cloud for your Azure account}
    azure_secret: ${14:# The application client secret for the Azure AD app registration to use for auth}
    azure_tenant: ${15:# The directory/tenant ID for the Azure AD app registration to use for authentication}
    basic_auth_password: ${16:# The datasource basic auth password, when C(basic auth) is C(yes)}
    basic_auth_user: ${17:# The datasource basic auth user}
    client_cert: ${18:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${19:# PEM formatted file that contains your private key to be used for SSL client authentication}
    database: ${20:# Name of the database for the datasource}
    ds_type: ${21:# The type of the datasource}
    ds_url: ${22:# The URL of the datasource}
    enforce_secure_data: ${23:# Secure data is not updated per default (see notes!)}
    es_version: ${24:# Elasticsearch version (for C(ds_type = elasticsearch) only)}
    grafana_api_key: ${25:# The Grafana API key}
    interval: ${26:# For elasticsearch C(ds_type), this is the index pattern used}
    is_default: ${27:# Make this datasource the default one}
    max_concurrent_shard_requests: ${28:# Starting with elasticsearch 5}
    name: ${29:# The name of the datasource}
    org_id: ${30:# Grafana Organisation ID in which the datasource should be created}
    password: ${31:# The datasource password}
    sslmode: ${32:# SSL mode for C(postgres) datasource type}
    state: ${33:# Status of the datasource}
    time_field: ${34:# Name of the time field in elasticsearch ds}
    time_interval: ${35:# Minimum group by interval for C(influxdb), C(elasticsearch) or C(prometheus) datasources}
    tls_ca_cert: ${36:# The TLS CA certificate for self signed certificates}
    tls_client_cert: ${37:# The client TLS certificate}
    tls_client_key: ${38:# The client TLS private key}
    tls_skip_verify: ${39:# Skip the TLS datasource certificate verification}
    trends: ${40:# Use trends or not for zabbix datasource type}
    tsdb_resolution: ${41:# The opentsdb time resolution}
    tsdb_version: ${42:# The opentsdb version}
    uid: ${43:# The uid of the datasource}
    url: ${44:# The Grafana URL}
    url_password: ${45:# The Grafana password for API authentication}
    url_username: ${46:# The Grafana user for API authentication}
    use_proxy: ${47:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    user: ${48:# The datasource login user for influxdb datasources}
    validate_certs: ${49:# If C(no), SSL certificates will not be validated}
    with_credentials: ${50:# Whether credentials such as cookies or auth headers should be sent with cross-site requests}
    zabbix_password: ${51:# Password for Zabbix API}
    zabbix_user: ${52:# User for Zabbix API}
  tags:
    - community
    - grafana
    - grafana_datasource]]></content>
  <tabTrigger>community.grafana.grafana_datasource</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Grafana datasources</description>
</snippet>