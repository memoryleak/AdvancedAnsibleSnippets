<snippet>
  <content><![CDATA[- name: ${1:Manages DHCP Options, and can ensure the DHCP options for the given VPC match what's requested}
  amazon.aws.ec2_vpc_dhcp_option:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    delete_old: ${6:# Whether to delete the old VPC DHCP option set when associating a new one}
    dhcp_options_id: ${7:# The resource_id of an existing DHCP options set}
    dns_servers: ${8:# A list of IP addresses to set the DNS servers for the VPC to}
    domain_name: ${9:# The domain name to set in the DHCP option sets}
    endpoint_url: ${10:# URL to connect to instead of the default AWS endpoints}
    inherit_existing: ${11:# For any DHCP options not specified in these parameters, whether to inherit them from the options set already applied to O(vpc_id), or to reset them to be empty}
    netbios_name_servers: ${12:# List of hosts to advertise as NetBIOS servers}
    netbios_node_type: ${13:# NetBIOS node type to advertise in the DHCP options}
    ntp_servers: ${14:# List of hosts to advertise as NTP servers for the VPC}
    profile: ${15:# A named AWS profile to use for authentication}
    purge_tags: ${16:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${17:# The AWS region to use}
    secret_key: ${18:# AWS secret access key}
    session_token: ${19:# AWS STS session token for use with temporary credentials}
    state: ${20:# create/assign or remove the DHCP options}
    tags: ${21:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${22:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    vpc_id: ${23:# VPC ID to associate with the requested DHCP option set}
  tags:
    - amazon
    - aws
    - ec2_vpc_dhcp_option]]></content>
  <tabTrigger>amazon.aws.ec2_vpc_dhcp_option</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages DHCP Options, and can ensure the DHCP options for the given VPC match what&#39;s requested</description>
</snippet>