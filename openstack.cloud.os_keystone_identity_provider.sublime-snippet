<snippet>
  <content><![CDATA[- name: ${1:manage a federation Identity Provider}
  openstack.cloud.os_keystone_identity_provider:
    name: ${2:# The name of the Identity Provider}
    state: ${3:# Whether the Identity Provider should be C(present) or C(absent)}
    description: ${4:# The description of the Identity Provider}
    domain_id: ${5:# The ID of a domain that is associated with the Identity Provider}
    enabled: ${6:# Whether the Identity Provider is enabled or not}
    remote_ids: ${7:# List of the unique Identity Provider's remote IDs}
    cloud: ${8:# Named cloud or cloud config to operate against}
    auth: ${9:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${10:# Name of the auth plugin to use}
    region_name: ${11:# Name of the region}
    wait: ${12:# Should ansible wait until the requested resource is complete}
    timeout: ${13:# How long should ansible wait for the requested resource}
    api_timeout: ${14:# How long should the socket layer wait before timing out for API calls}
    validate_certs: ${15:# Whether or not SSL API requests should be verified}
    ca_cert: ${16:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${17:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${18:# A path to a client key to use as part of the SSL transaction}
    interface: ${19:# Endpoint URL type to fetch from the service catalog}
    availability_zone: ${20:# Ignored}
    sdk_log_path: ${21:# Path to the logfile of the OpenStackSDK}
    sdk_log_level: ${22:# Log level of the OpenStackSDK}
  tags:
    - openstack
    - cloud
    - os_keystone_identity_provider]]></content>
  <tabTrigger>openstack.cloud.os_keystone_identity_provider</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>manage a federation Identity Provider</description>
</snippet>