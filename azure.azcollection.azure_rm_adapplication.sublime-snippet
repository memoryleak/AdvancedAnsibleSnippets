<snippet>
  <content><![CDATA[- name: ${1:Manage Azure Active Directory application}
  azure.azcollection.azure_rm_adapplication:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    allow_guests_sign_in: ${4:# A property on the application to indicate if the application accepts other IDPs or not or partially accepts}
    api_profile: ${5:# Selects an API profile to use when communicating with Azure services}
    app_id: ${6:# Application ID}
    app_roles: ${7:# Declare the roles you want to associate with your application}
    auth_source: ${8:# Controls the source of the credentials to use for authentication}
    cert_validation_mode: ${9:# Controls the certificate validation behavior for Azure endpoints}
    client_id: ${10:# Azure client ID}
    cloud_environment: ${11:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    credential_description: ${12:# The description of the password}
    disable_instance_discovery: ${13:# Determines whether or not instance discovery is performed when attempting to authenticate}
    display_name: ${14:# The display name of the application}
    end_date: ${15:# Date or datetime after which credentials expire(e}
    homepage: ${16:# The url where users can sign in and use your app}
    identifier_uris: ${17:# Space-separated unique URIs that Azure AD can use for this app}
    key_type: ${18:# The type of the key credentials associated with the application}
    key_usage: ${19:# The usage of the key credentials associated with the application}
    key_value: ${20:# The value for the key credentials associated with the application}
    log_mode: ${21:# Parent argument}
    log_path: ${22:# Parent argument}
    native_app: ${23:# An application which can be installed on a user's device or computer}
    oauth2_allow_implicit_flow: ${24:# Whether to allow implicit grant flow for OAuth2}
    optional_claims: ${25:# Declare the optional claims for the application}
    password: ${26:# App password, aka 'client secret'}
    profile: ${27:# Security profile found in ~/}
    public_client_reply_urls: ${28:# The public client redirect urls}
    required_resource_accesses: ${29:# Resource scopes and roles the application requires access to}
    secret: ${30:# Azure client secret}
    sign_in_audience: ${31:# The application can be used from any Azure AD tenants}
    spa_reply_urls: ${32:# The spa redirect urls}
    start_date: ${33:# Date or datetime at which credentials become valid, such as '2017-01-01'}
    state: ${34:# Assert the state of Active Dirctory service principal}
    subscription_id: ${35:# Your Azure subscription Id}
    tenant: ${36:# Azure tenant ID}
    thumbprint: ${37:# The thumbprint of the private key specified in I(x509_certificate_path)}
    web_reply_urls: ${38:# The web redirect urls}
    x509_certificate_path: ${39:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_adapplication]]></content>
  <tabTrigger>azure.azcollection.azure_rm_adapplication</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Azure Active Directory application</description>
</snippet>