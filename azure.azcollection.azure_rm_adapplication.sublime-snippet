<snippet>
  <content><![CDATA[- name: ${1:Manage Azure Active Directory application}
  azure.azcollection.azure_rm_adapplication:
    tenant: ${2:# The tenant ID}
    app_id: ${3:# Application ID}
    display_name: ${4:# The display name of the application}
    app_roles: ${5:# Declare the roles you want to associate with your application}
    available_to_other_tenants: ${6:# The application can be used from any Azure AD tenants}
    credential_description: ${7:# The description of the password}
    end_date: ${8:# Date or datetime after which credentials expire(e}
    homepage: ${9:# The url where users can sign in and use your app}
    identifier_uris: ${10:# Space-separated unique URIs that Azure AD can use for this app}
    key_type: ${11:# The type of the key credentials associated with the application}
    key_usage: ${12:# The usage of the key credentials associated with the application}
    key_value: ${13:# The value for the key credentials associated with the application}
    native_app: ${14:# An application which can be installed on a user's device or computer}
    oauth2_allow_implicit_flow: ${15:# Whether to allow implicit grant flow for OAuth2}
    optional_claims: ${16:# Declare the optional claims for the application}
    password: ${17:# App password, aka 'client secret'}
    reply_urls: ${18:# Space-separated URIs to which Azure AD will redirect in response to an OAuth 2}
    required_resource_accesses: ${19:# Resource scopes and roles the application requires access to}
    start_date: ${20:# Date or datetime at which credentials become valid, such as '2017-01-01'}
    allow_guests_sign_in: ${21:# A property on the application to indicate if the application accepts other IDPs or not or partially accepts}
    state: ${22:# Assert the state of Active Dirctory service principal}
    ad_user: ${23:# Active Directory username}
    profile: ${24:# Security profile found in ~/}
    subscription_id: ${25:# Your Azure subscription Id}
    client_id: ${26:# Azure client ID}
    secret: ${27:# Azure client secret}
    cloud_environment: ${28:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    adfs_authority_url: ${29:# Azure AD authority url}
    cert_validation_mode: ${30:# Controls the certificate validation behavior for Azure endpoints}
    auth_source: ${31:# Controls the source of the credentials to use for authentication}
    api_profile: ${32:# Selects an API profile to use when communicating with Azure services}
    log_path: ${33:# Parent argument}
    log_mode: ${34:# Parent argument}
    x509_certificate_path: ${35:# Path to the X509 certificate used to create the service principal in PEM format}
    thumbprint: ${36:# The thumbprint of the private key specified in I(x509_certificate_path)}
  tags:
    - azure
    - azcollection
    - azure_rm_adapplication]]></content>
  <tabTrigger>azure.azcollection.azure_rm_adapplication</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Azure Active Directory application</description>
</snippet>