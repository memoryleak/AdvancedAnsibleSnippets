<snippet>
  <content><![CDATA[- name: ${1:Module to manage Instance Types in oVirt/RHV}
  ovirt.ovirt.ovirt_instance_type:
    auth: ${2:# Dictionary with values needed to create HTTP/HTTPS connection to oVirt:}
    ballooning_enabled: ${3:# If I(true), use memory ballooning}
    boot_devices: ${4:# List of boot devices which should be used to boot}
    cpu_cores: ${5:# Number of virtual CPUs cores of the Instance Type}
    cpu_mode: ${6:# CPU mode of the instance type}
    cpu_pinning: ${7:# CPU Pinning topology to map instance type CPU to host CPU}
    cpu_sockets: ${8:# Number of virtual CPUs sockets of the Instance Type}
    cpu_threads: ${9:# Number of virtual CPUs sockets of the Instance Type}
    description: ${10:# Description of the instance type}
    fetch_nested: ${11:# If I(True) the module will fetch additional data from the API}
    graphical_console: ${12:# Assign graphical console to the instance type}
    high_availability: ${13:# If I(yes) Instance Type will be set as highly available}
    high_availability_priority: ${14:# Indicates the priority of the instance type inside the run and migration queues}
    host: ${15:# Specify host where Instance Type should be running}
    id: ${16:# ID of the Instance Type to manage}
    io_threads: ${17:# Number of IO threads used by instance type}
    memory: ${18:# Amount of memory of the Instance Type}
    memory_guaranteed: ${19:# Amount of minimal guaranteed memory of the Instance Type}
    memory_max: ${20:# Upper bound of instance type memory up to which memory hot-plug can be performed}
    name: ${21:# Name of the Instance Type to manage}
    nested_attributes: ${22:# Specifies list of the attributes which should be fetched from the API}
    nics: ${23:# List of NICs, which should be attached to Virtual Machine}
    operating_system: ${24:# Operating system of the Instance Type, for example 'rhel_8x64'}
    placement_policy: ${25:# The configuration of the instance type's placement policy}
    poll_interval: ${26:# Number of the seconds the module waits until another poll request on entity status is sent}
    rng_bytes: ${27:# Number of bytes allowed to consume per period}
    rng_device: ${28:# Random number generator (RNG)}
    rng_period: ${29:# Duration of one period in milliseconds}
    serial_console: ${30:# I(True) enable VirtIO serial console, I(False) to disable it}
    smartcard_enabled: ${31:# If I(true), use smart card authentication}
    soundcard_enabled: ${32:# If I(true), the sound card is added to the instance type}
    state: ${33:# Should the Instance Type be present/absent}
    timeout: ${34:# The amount of time in seconds the module should wait for the instance to get into desired state}
    usb_support: ${35:# I(True) enable USB support, I(False) to disable it}
    virtio_scsi: ${36:# If I(true), virtio scsi will be enabled}
    wait: ${37:# C(yes) if the module should wait for the entity to get into desired state}
    watchdog: ${38:# Assign watchdog device for the instance type}
  tags:
    - ovirt
    - ovirt
    - ovirt_instance_type]]></content>
  <tabTrigger>ovirt.ovirt.ovirt_instance_type</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module to manage Instance Types in oVirt/RHV</description>
</snippet>