<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP BackendService}
  google.cloud.gcp_compute_backend_service:
    state: ${2:# Whether the given object should exist in GCP}
    affinity_cookie_ttl_sec: ${3:# Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE}
    backends: ${4:# The set of backends that serve this BackendService}
    circuit_breakers: ${5:# Settings controlling the volume of connections to a backend service}
    consistent_hash: ${6:# Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties}
    cdn_policy: ${7:# Cloud CDN configuration for this BackendService}
    connection_draining: ${8:# Settings for connection draining }
    custom_request_headers: ${9:# Headers that the HTTP/S load balancer should add to proxied requests}
    custom_response_headers: ${10:# Headers that the HTTP/S load balancer should add to proxied responses}
    description: ${11:# An optional description of this resource}
    enable_cdn: ${12:# If true, enable Cloud CDN for this BackendService}
    health_checks: ${13:# The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService}
    iap: ${14:# Settings for enabling Cloud Identity Aware Proxy}
    load_balancing_scheme: ${15:# Indicates whether the backend service will be used with internal or external load balancing}
    locality_lb_policy: ${16:# The load balancing algorithm used within the scope of the locality}
    name: ${17:# Name of the resource}
    outlier_detection: ${18:# Settings controlling eviction of unhealthy hosts from the load balancing pool}
    port_name: ${19:# Name of backend port}
    protocol: ${20:# The protocol this BackendService uses to communicate with backends}
    security_policy: ${21:# The security policy associated with this backend service}
    session_affinity: ${22:# Type of session affinity to use}
    timeout_sec: ${23:# How many seconds to wait for the backend before considering it a failed request}
    log_config: ${24:# This field denotes the logging options for the load balancer traffic served by this backend service}
    project: ${25:# The Google Cloud Platform project to use}
    auth_kind: ${26:# The type of credential used}
    service_account_contents: ${27:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${28:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${29:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${30:# Array of scopes to be used}
    env_type: ${31:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_compute_backend_service]]></content>
  <tabTrigger>google.cloud.gcp_compute_backend_service</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP BackendService</description>
</snippet>