<snippet>
  <content><![CDATA[- name: ${1:Manage a Swift container}
  openstack.cloud.object_container:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${6:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${7:# A path to a client key to use as part of the SSL transaction}
    cloud: ${8:# Named cloud or cloud config to operate against}
    delete_metadata_keys: ${9:# Keys from I(metadata) to be deleted}
    delete_with_all_objects: ${10:# Whether the container should be deleted recursively, i}
    interface: ${11:# Endpoint URL type to fetch from the service catalog}
    metadata: ${12:# Key value pairs to be set as metadata on the container}
    name: ${13:# Name (and ID) of a Swift container}
    read_ACL: ${14:# The ACL that grants read access}
    region_name: ${15:# Name of the region}
    sdk_log_level: ${16:# Log level of the OpenStackSDK}
    sdk_log_path: ${17:# Path to the logfile of the OpenStackSDK}
    state: ${18:# Whether the object should be C(present) or C(absent)}
    timeout: ${19:# How long should ansible wait for the requested resource}
    validate_certs: ${20:# Whether or not SSL API requests should be verified}
    wait: ${21:# Should ansible wait until the requested resource is complete}
    write_ACL: ${22:# The ACL that grants write access}
  tags:
    - openstack
    - cloud
    - object_container]]></content>
  <tabTrigger>openstack.cloud.object_container</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage a Swift container</description>
</snippet>