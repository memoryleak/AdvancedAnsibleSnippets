<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP BackendBucket}
  google.cloud.gcp_compute_backend_bucket:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    bucket_name: ${4:# Cloud Storage bucket name}
    cdn_policy: ${5:# Cloud CDN configuration for this Backend Bucket}
    custom_response_headers: ${6:# Headers that the HTTP/S load balancer should add to proxied responses}
    description: ${7:# An optional textual description of the resource; provided by the client when the resource is created}
    enable_cdn: ${8:# If true, enable Cloud CDN for this BackendBucket}
    env_type: ${9:# Specifies which Ansible environment you're running this module within}
    name: ${10:# Name of the resource}
    project: ${11:# The Google Cloud Platform project to use}
    scopes: ${12:# Array of scopes to be used}
    service_account_contents: ${13:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${14:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${15:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${16:# Whether the given object should exist in GCP}
  tags:
    - google
    - cloud
    - gcp_compute_backend_bucket]]></content>
  <tabTrigger>google.cloud.gcp_compute_backend_bucket</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP BackendBucket</description>
</snippet>