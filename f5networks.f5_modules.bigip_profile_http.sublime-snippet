<snippet>
  <content><![CDATA[- name: ${1:Manage HTTP profiles on a BIG-IP}
  f5networks.f5_modules.bigip_profile_http:
    accept_xff: ${2:# Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist}
    description: ${3:# Description of the profile}
    dns_resolver: ${4:# Specifies the name of a configured DNS resolver, this option is mandatory when C(proxy_type) is set to C(explicit)}
    encrypt_cookie_secret: ${5:# Passphrase for cookie encryption}
    encrypt_cookies: ${6:# Cookie names for the system to encrypt}
    enforcement: ${7:# Specifies protocol enforcement settings for the HTTP profile}
    fallback_host: ${8:# Specifies an HTTP fallback host}
    fallback_status_codes: ${9:# Specifies one or more HTTP error codes from server responses that should trigger a redirection to the fallback host}
    header_erase: ${10:# The name of a header in an HTTP request, which the system removes from request}
    header_insert: ${11:# A string the system inserts as a header in an HTTP request}
    hsts_mode: ${12:# When set to C(true), enables the HSTS settings}
    hsts_preload: ${13:# When set to C(true), adds the HSTS host and its subdomains to the browser's HSTS preload list of sites that are considered HTTPS only}
    include_subdomains: ${14:# When set to C(true), applies the HSTS policy to the HSTS host and its sub-domains}
    insert_xforwarded_for: ${15:# Specifies the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling}
    maximum_age: ${16:# Specifies the maximum length of time, in seconds, that HSTS functionality requests clients only use HTTPS to connect to the current host and any sub-domains of the current host's domain name}
    name: ${17:# Specifies the name of the profile}
    oneconnect_transformations: ${18:# Enables the system to perform HTTP header transformations for keeping server-side connections open}
    parent: ${19:# Specifies the profile from which this profile inherits settings}
    partition: ${20:# Device partition to manage resources on}
    provider: ${21:# A dict object containing connection details}
    proxy_type: ${22:# Specifies the proxy mode for the profile}
    redirect_rewrite: ${23:# Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses}
    request_chunking: ${24:# Specifies how to handle chunked and unchunked requests}
    response_chunking: ${25:# Specifies how to handle chunked and unchunked responses}
    server_agent_name: ${26:# Specifies the string used as the server name in traffic generated by BIG-IP}
    sflow: ${27:# Specifies sFlow settings for the HTTP profile}
    state: ${28:# When C(present), ensures the profile exists}
    update_password: ${29:# C(always) will update passwords if the C(encrypt_cookie_secret) is specified}
    xff_alternative_names: ${30:# Specifies alternative XFF headers instead of the default X-forwarded-for header}
  tags:
    - f5networks
    - f5_modules
    - bigip_profile_http]]></content>
  <tabTrigger>f5networks.f5_modules.bigip_profile_http</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage HTTP profiles on a BIG-IP</description>
</snippet>