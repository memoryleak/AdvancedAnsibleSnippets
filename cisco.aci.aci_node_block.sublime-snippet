<snippet>
  <content><![CDATA[- name: ${1:Manage Node Block (infra:NodeBlk)}
  cisco.aci.aci_node_block:
    access_port_selector: ${2:# The name of the Fabric access policy leaf/spine switch port selector}
    annotation: ${3:# User-defined string for annotating an object}
    certificate_name: ${4:# The X}
    description: ${5:# The description for the Node Block}
    from_port: ${6:# The beginning of the port range block for the Node Block}
    host: ${7:# IP Address or hostname of APIC resolvable by Ansible control host}
    node_block: ${8:# The name of the Node Block}
    output_level: ${9:# Influence the output of this ACI module}
    output_path: ${10:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${11:# The password to use for authentication}
    port: ${12:# Port number to be used for REST connection}
    private_key: ${13:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${14:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${15:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${16:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    switch_profile: ${17:# The name of the Fabric access policy leaf/spine switch profile}
    timeout: ${18:# The socket level timeout in seconds}
    to_port: ${19:# The end of the port range block for the Node Block}
    type_node: ${20:# The type of Node Block to be created under respective access port}
    use_proxy: ${21:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${22:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${23:# The username to use for authentication}
    validate_certs: ${24:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_node_block]]></content>
  <tabTrigger>cisco.aci.aci_node_block</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Node Block (infra:NodeBlk)</description>
</snippet>