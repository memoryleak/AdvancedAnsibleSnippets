<snippet>
  <content><![CDATA[- name: ${1:Manages resource-ftp objects on Checkpoint over Web Services API}
  check_point.mgmt.cp_mgmt_resource_ftp:
    auto_publish_session: ${2:# Publish the current session if changes have been performed after task completes}
    color: ${3:# Color of the object}
    comments: ${4:# Comments string}
    cvp: ${5:# Configure CVP inspection on mail messages}
    details_level: ${6:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    exception_track: ${7:# The UID or Name of the exception track to be used to log actions taken as a result of a match on the resource}
    ignore_errors: ${8:# Apply changes ignoring errors}
    ignore_warnings: ${9:# Apply changes ignoring warnings}
    name: ${10:# Object name}
    resource_matching_method: ${11:# GET allows Downloads from the server to the client}
    resources_path: ${12:# Refers to a location on the FTP server}
    state: ${13:# State of the access rule (present or absent)}
    tags: ${14:# Collection of tag identifiers}
    version: ${15:# Version of checkpoint}
    wait_for_task: ${16:# Wait for the task to end}
    wait_for_task_timeout: ${17:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_resource_ftp]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_resource_ftp</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages resource-ftp objects on Checkpoint over Web Services API</description>
</snippet>