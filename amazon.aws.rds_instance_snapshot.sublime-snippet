<snippet>
  <content><![CDATA[- name: ${1:Manage Amazon RDS instance snapshots}
  amazon.aws.rds_instance_snapshot:
    state: ${2:# Specify the desired state of the snapshot}
    db_snapshot_identifier: ${3:# The snapshot to manage}
    db_instance_identifier: ${4:# Database instance identifier}
    source_db_snapshot_identifier: ${5:# The identifier of the source DB snapshot}
    source_region: ${6:# The region that contains the snapshot to be copied}
    copy_tags: ${7:# Whether to copy all tags from I(source_db_snapshot_identifier) to I(db_instance_identifier)}
    wait: ${8:# Whether or not to wait for snapshot creation or deletion}
    wait_timeout: ${9:# how long before wait gives up, in seconds}
    access_key: ${10:# AWS access key ID}
    secret_key: ${11:# AWS secret access key}
    session_token: ${12:# AWS STS session token for use with temporary credentials}
    profile: ${13:# A named AWS profile to use for authentication}
    endpoint_url: ${14:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${15:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${16:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${17:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${18:# Use a C(botocore}
    region: ${19:# The AWS region to use}
    tags: ${20:# A dictionary representing the tags to be applied to the resource}
    purge_tags: ${21:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - amazon
    - aws
    - rds_instance_snapshot]]></content>
  <tabTrigger>amazon.aws.rds_instance_snapshot</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Amazon RDS instance snapshots</description>
</snippet>