<snippet>
  <content><![CDATA[- name: ${1:Run PostgreSQL statements from a file}
  community.postgresql.postgresql_script:
    positional_args: ${2:# List of values to substitute variable placeholders within the file content}
    named_args: ${3:# Dictionary of key-value arguments to substitute variable placeholders within the file content}
    path: ${4:# Path to a SQL script on the target machine}
    session_role: ${5:# Switch to C(session_role) after connecting}
    db: ${6:# Name of database to connect to and run queries against}
    encoding: ${7:# Set the client encoding for the current session (e}
    trust_input: ${8:# If C(false), check whether a value of I(session_role) is potentially dangerous}
    search_path: ${9:# Overrides the list of schemas to search for db objects in}
    login_user: ${10:# The username this module should use to establish its PostgreSQL session}
    login_password: ${11:# The password this module should use to establish its PostgreSQL session}
    login_host: ${12:# Host running the database}
    login_unix_socket: ${13:# Path to a Unix domain socket for local connections}
    port: ${14:# Database port to connect to}
    ssl_mode: ${15:# Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server}
    ca_cert: ${16:# Specifies the name of a file containing SSL certificate authority (CA) certificate(s)}
    connect_params: ${17:# Any additional parameters to be passed to libpg}
  tags:
    - community
    - postgresql
    - postgresql_script]]></content>
  <tabTrigger>community.postgresql.postgresql_script</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Run PostgreSQL statements from a file</description>
</snippet>