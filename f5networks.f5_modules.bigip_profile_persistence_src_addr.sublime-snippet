<snippet>
  <content><![CDATA[- name: ${1:Manage source address persistence profiles}
  f5networks.f5_modules.bigip_profile_persistence_src_addr:
    entry_timeout: ${2:# Specifies the duration of the persistence entries}
    hash_algorithm: ${3:# Specifies the algorithm the system uses for hash persistence load balancing}
    mask: ${4:# Specifies a value the system applies as the prefix length}
    match_across_pools: ${5:# When C(true), specifies the system can use any pool that contains this persistence record}
    match_across_services: ${6:# When C(true), specifies all persistent connections from a client IP address that go to the same virtual IP address also go to the same node}
    match_across_virtuals: ${7:# When C(true), specifies all persistent connections from the same client IP address go to the same node}
    mirror: ${8:# When C(true), specifies that if the active unit goes into the standby mode, the system mirrors any persistence records to its peer}
    name: ${9:# Specifies the name of the profile}
    override_connection_limit: ${10:# When C(true), specifies the system allows you to specify that pool member connection limits will be overridden for persisted clients}
    parent: ${11:# Specifies the profile from which this profile inherits settings}
    partition: ${12:# Device partition to manage resources on}
    provider: ${13:# A dict object containing connection details}
    state: ${14:# When C(present), ensures the profile exists}
  tags:
    - f5networks
    - f5_modules
    - bigip_profile_persistence_src_addr]]></content>
  <tabTrigger>f5networks.f5_modules.bigip_profile_persistence_src_addr</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage source address persistence profiles</description>
</snippet>