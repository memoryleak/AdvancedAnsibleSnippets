<snippet>
  <content><![CDATA[- name: ${1:This module manages user on IBM Spectrum Virtualize family storage systems}
  ibm.spectrum_virtualize.ibm_svc_manage_user:
    name: ${2:# Specifies the unique username}
    state: ${3:# Creates or updates (C(present)) or removes (C(absent)) a user}
    clustername: ${4:# The hostname or management IP of the Spectrum Virtualize storage system}
    domain: ${5:# Domain for the Spectrum Virtualize storage system}
    username: ${6:# REST API username for the Spectrum Virtualize storage system}
    password: ${7:# REST API password for the Spectrum Virtualize storage system}
    token: ${8:# The authentication token to verify a user on the Spectrum Virtualize storage system}
    user_password: ${9:# Specifies the password associated with the user}
    nopassword: ${10:# Specifies that the user's password is to be deleted}
    keyfile: ${11:# Specifies the name of the file containing the Secure Shell (SSH) public key}
    nokey: ${12:# Specifies that the user's SSH key is to be deleted}
    auth_type: ${13:# Specifies whether the user authenticates to the system using a remote authentication service or system authentication methods}
    usergroup: ${14:# Specifies the name of the user group with which the local user is to be associated}
    forcepasswordchange: ${15:# Specifies that the password is to be changed on next login}
    lock: ${16:# Specifies to lock the account indefinitely}
    unlock: ${17:# Specifies to unlock the account so it can be logged in to again}
    validate_certs: ${18:# Validates certification}
    log_path: ${19:# Path of debug log file}
  tags:
    - ibm
    - spectrum_virtualize
    - ibm_svc_manage_user]]></content>
  <tabTrigger>ibm.spectrum_virtualize.ibm_svc_manage_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>This module manages user on IBM Spectrum Virtualize family storage systems</description>
</snippet>