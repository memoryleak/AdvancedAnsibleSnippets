<snippet>
  <content><![CDATA[- name: ${1:Manage User Managed IAM policies}
  amazon.aws.iam_managed_policy:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    endpoint_url: ${6:# URL to connect to instead of the default AWS endpoints}
    make_default: ${7:# Make this revision the default revision}
    only_version: ${8:# Remove all other non default revisions, if this is used with C(make_default) it will result in all other versions of this policy being deleted}
    policy: ${9:# A properly json formatted policy}
    policy_description: ${10:# A helpful description of this policy, this value is immutable and only set when creating a new policy}
    policy_name: ${11:# The name of the managed policy}
    profile: ${12:# A named AWS profile to use for authentication}
    region: ${13:# The AWS region to use}
    secret_key: ${14:# AWS secret access key}
    session_token: ${15:# AWS STS session token for use with temporary credentials}
    state: ${16:# Should this managed policy be present or absent}
    validate_certs: ${17:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - amazon
    - aws
    - iam_managed_policy]]></content>
  <tabTrigger>amazon.aws.iam_managed_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage User Managed IAM policies</description>
</snippet>