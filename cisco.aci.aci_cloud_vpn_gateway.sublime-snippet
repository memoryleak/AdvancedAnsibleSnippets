<snippet>
  <content><![CDATA[- name: ${1:Manage cloudRouterP in Cloud Context Profile (cloud:cloudRouterP)}
  cisco.aci.aci_cloud_vpn_gateway:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    cloud_context_profile: ${4:# The name of cloud context profile}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    output_level: ${6:# Influence the output of this ACI module}
    output_path: ${7:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${8:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${9:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${10:# The password to use for authentication}
    port: ${11:# Port number to be used for REST connection}
    private_key: ${12:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${13:# Use C(present) or C(absent) for adding or removing}
    tenant: ${14:# The name of tenant}
    timeout: ${15:# The socket level timeout in seconds}
    use_proxy: ${16:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${17:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${18:# The username to use for authentication}
    validate_certs: ${19:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_cloud_vpn_gateway]]></content>
  <tabTrigger>cisco.aci.aci_cloud_vpn_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage cloudRouterP in Cloud Context Profile (cloud:cloudRouterP)</description>
</snippet>