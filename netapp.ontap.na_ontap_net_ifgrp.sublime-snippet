<snippet>
  <content><![CDATA[- name: ${1:NetApp Ontap modify network interface group}
  netapp.ontap.na_ontap_net_ifgrp:
    broadcast_domain: ${2:# Specify the broadcast_domain name}
    cert_filepath: ${3:# path to SSL client cert file (}
    distribution_function: ${4:# Specifies the traffic distribution function for the ifgrp}
    feature_flags: ${5:# Enable or disable a new feature}
    force_ontap_version: ${6:# Override the cluster ONTAP version when using REST}
    from_lag_ports: ${7:# Only supported with REST and is ignored with ZAPI}
    hostname: ${8:# The hostname or IP address of the ONTAP instance}
    http_port: ${9:# Override the default port (80 or 443) with this port}
    https: ${10:# Enable and disable https}
    ipspace: ${11:# Specify the ipspace for the broadcast domain}
    key_filepath: ${12:# path to SSL client key file}
    mode: ${13:# Specifies the link policy for the ifgrp}
    name: ${14:# Specifies the interface group name}
    node: ${15:# Specifies the name of node}
    ontapi: ${16:# The ontap api version to use}
    password: ${17:# Password for the specified user}
    ports: ${18:# List of expected ports to be present in the interface group}
    state: ${19:# Whether the specified network interface group should exist or not}
    use_rest: ${20:# Whether to use REST or ZAPI}
    username: ${21:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${22:# If set to C(no), the SSL certificates will not be validated}
  tags:
    - netapp
    - ontap
    - na_ontap_net_ifgrp]]></content>
  <tabTrigger>netapp.ontap.na_ontap_net_ifgrp</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp Ontap modify network interface group</description>
</snippet>