<snippet>
  <content><![CDATA[- name: ${1:Module for setup of IpamDnsProviderProfile Avi RESTful Object}
  community.network.avi_ipamdnsproviderprofile:
    allocate_ip_in_vrf: ${2:# If this flag is set, only allocate ip from networks in the virtual service vrf}
    api_context: ${3:# Avi API context that includes current session ID and CSRF Token}
    api_version: ${4:# Avi API version of to use for Avi API and objects}
    avi_api_patch_op: ${5:# Patch operation to use when using avi_api_update_method as patch}
    avi_api_update_method: ${6:# Default method for object update is HTTP PUT}
    avi_credentials: ${7:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    avi_disable_session_cache_as_fact: ${8:# It disables avi session information to be cached as a fact}
    aws_profile: ${9:# Provider details if type is aws}
    azure_profile: ${10:# Provider details if type is microsoft azure}
    controller: ${11:# IP address or hostname of the controller}
    custom_profile: ${12:# Provider details if type is custom}
    gcp_profile: ${13:# Provider details if type is google cloud}
    infoblox_profile: ${14:# Provider details if type is infoblox}
    internal_profile: ${15:# Provider details if type is avi}
    name: ${16:# Name for the ipam/dns provider profile}
    oci_profile: ${17:# Provider details for oracle cloud}
    openstack_profile: ${18:# Provider details if type is openstack}
    password: ${19:# Password of Avi user in Avi controller}
    proxy_configuration: ${20:# Field introduced in 17}
    state: ${21:# The state that should be applied on the entity}
    tenant: ${22:# Name of tenant used for all Avi API calls and context of object}
    tenant_ref: ${23:# It is a reference to an object of type tenant}
    tenant_uuid: ${24:# UUID of tenant used for all Avi API calls and context of object}
    tencent_profile: ${25:# Provider details for tencent cloud}
    type: ${26:# Provider type for the ipam/dns provider profile}
    url: ${27:# Avi controller URL of the object}
    username: ${28:# Username used for accessing Avi controller}
    uuid: ${29:# Uuid of the ipam/dns provider profile}
  tags:
    - community
    - network
    - avi_ipamdnsproviderprofile]]></content>
  <tabTrigger>community.network.avi_ipamdnsproviderprofile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module for setup of IpamDnsProviderProfile Avi RESTful Object</description>
</snippet>