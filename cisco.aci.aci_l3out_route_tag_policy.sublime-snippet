<snippet>
  <content><![CDATA[- name: ${1:Manage route tag policies (l3ext:RouteTagPol)}
  cisco.aci.aci_l3out_route_tag_policy:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    description: ${4:# The description for the route tag policy}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    name_alias: ${6:# The alias for the current object}
    output_level: ${7:# Influence the output of this ACI module}
    output_path: ${8:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${9:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${10:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${11:# The password to use for authentication}
    port: ${12:# Port number to be used for REST connection}
    private_key: ${13:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    rtp: ${14:# The name of the route tag policy}
    state: ${15:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${16:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${17:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    tag: ${18:# The value of the route tag}
    tenant: ${19:# The name of the tenant}
    timeout: ${20:# The socket level timeout in seconds}
    use_proxy: ${21:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${22:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${23:# The username to use for authentication}
    validate_certs: ${24:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_l3out_route_tag_policy]]></content>
  <tabTrigger>cisco.aci.aci_l3out_route_tag_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage route tag policies (l3ext:RouteTagPol)</description>
</snippet>