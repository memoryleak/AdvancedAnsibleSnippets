<snippet>
  <content><![CDATA[- name: ${1:Add or remove Jenkins plugin}
  community.general.jenkins_plugin:
    attributes: ${2:# The attributes the resulting filesystem object should have}
    client_cert: ${3:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${4:# PEM formatted file that contains your private key to be used for SSL client authentication}
    force: ${5:# If V(yes) do not get a cached copy}
    force_basic_auth: ${6:# Credentials specified with O(url_username) and O(url_password) should be passed in HTTP Header}
    group: ${7:# GID or name of the Jenkins group on the OS}
    http_agent: ${8:# Header to identify as, generally appears in web server logs}
    jenkins_home: ${9:# Home directory of the Jenkins user}
    latest_plugins_url_segments: ${10:# Path inside the O(updates_url) to get latest plugins from}
    mode: ${11:# File mode applied on versioned plugins}
    name: ${12:# Plugin name}
    owner: ${13:# UID or name of the Jenkins user on the OS}
    selevel: ${14:# The level part of the SELinux filesystem object context}
    serole: ${15:# The role part of the SELinux filesystem object context}
    setype: ${16:# The type part of the SELinux filesystem object context}
    seuser: ${17:# The user part of the SELinux filesystem object context}
    state: ${18:# Desired plugin state}
    timeout: ${19:# Server connection timeout in secs}
    unsafe_writes: ${20:# Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object}
    update_json_url_segment: ${21:# A list of URL segment(s) to retrieve the update center json file from}
    updates_expiration: ${22:# Number of seconds after which a new copy of the C(update-center}
    updates_url: ${23:# A list of base URL(s) to retrieve C(update-center}
    url: ${24:# URL of the Jenkins server}
    url_password: ${25:# The password for use in HTTP basic authentication}
    url_username: ${26:# The username for use in HTTP basic authentication}
    use_gssapi: ${27:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
    use_proxy: ${28:# If V(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${29:# If V(no), SSL certificates will not be validated}
    version: ${30:# Plugin version number}
    versioned_plugins_url_segments: ${31:# Path inside the O(updates_url) to get specific version of plugins from}
    with_dependencies: ${32:# Defines whether to install plugin dependencies}
  tags:
    - community
    - general
    - jenkins_plugin]]></content>
  <tabTrigger>community.general.jenkins_plugin</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Add or remove Jenkins plugin</description>
</snippet>