<snippet>
  <content><![CDATA[- name: ${1:Manages SES sending authorization policies}
  community.aws.ses_identity_policy:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    endpoint_url: ${6:# URL to connect to instead of the default AWS endpoints}
    identity: ${7:# The SES identity to attach or remove a policy from}
    policy: ${8:# A properly formatted JSON sending authorization policy}
    policy_name: ${9:# The name used to identify the policy within the scope of the identity it's attached to}
    profile: ${10:# A named AWS profile to use for authentication}
    region: ${11:# The AWS region to use}
    secret_key: ${12:# AWS secret access key}
    session_token: ${13:# AWS STS session token for use with temporary credentials}
    state: ${14:# Whether to create(or update) or delete the authorization policy on the identity}
    validate_certs: ${15:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - community
    - aws
    - ses_identity_policy]]></content>
  <tabTrigger>community.aws.ses_identity_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages SES sending authorization policies</description>
</snippet>