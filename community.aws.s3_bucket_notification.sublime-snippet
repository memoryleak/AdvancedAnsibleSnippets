<snippet>
  <content><![CDATA[- name: ${1:Creates, updates or deletes S3 Bucket notifications targeting Lambda functions, SNS or SQS}
  community.aws.s3_bucket_notification:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    bucket_name: ${5:# S3 bucket name}
    debug_botocore_endpoint_logs: ${6:# Use a C(botocore}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    event_name: ${8:# Unique name for event notification on bucket}
    events: ${9:# Events that will be triggering a notification}
    lambda_alias: ${10:# Name of the Lambda function alias}
    lambda_function_arn: ${11:# The ARN of the lambda function}
    lambda_version: ${12:# Version of the Lambda function}
    prefix: ${13:# Optional prefix to limit the notifications to objects with keys that start with matching characters}
    profile: ${14:# A named AWS profile to use for authentication}
    queue_arn: ${15:# The ARN of the SQS queue}
    region: ${16:# The AWS region to use}
    secret_key: ${17:# AWS secret access key}
    session_token: ${18:# AWS STS session token for use with temporary credentials}
    state: ${19:# Describes the desired state}
    suffix: ${20:# Optional suffix to limit the notifications to objects with keys that end with matching characters}
    topic_arn: ${21:# The ARN of the SNS topic}
    validate_certs: ${22:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - community
    - aws
    - s3_bucket_notification]]></content>
  <tabTrigger>community.aws.s3_bucket_notification</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates, updates or deletes S3 Bucket notifications targeting Lambda functions, SNS or SQS</description>
</snippet>