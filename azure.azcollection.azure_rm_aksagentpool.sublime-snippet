<snippet>
  <content><![CDATA[- name: ${1:Manage node pools in Kubernetes kubernetes cluster}
  azure.azcollection.azure_rm_aksagentpool:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    api_profile: ${4:# Selects an API profile to use when communicating with Azure services}
    append_tags: ${5:# Use to control if tags field is canonical or just appends to existing tags}
    auth_source: ${6:# Controls the source of the credentials to use for authentication}
    availability_zones: ${7:# Availability zones for nodes}
    cert_validation_mode: ${8:# Controls the certificate validation behavior for Azure endpoints}
    client_id: ${9:# Azure client ID}
    cloud_environment: ${10:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    cluster_name: ${11:# The name of the kubernetes cluster}
    count: ${12:# Number of agents (VMs) to host docker containers}
    disable_instance_discovery: ${13:# Determines whether or not instance discovery is performed when attempting to authenticate}
    enable_auto_scaling: ${14:# Whether to enable auto-scaler}
    enable_encryption_at_host: ${15:# This is only supported on certain VM sizes and in certain Azure regions}
    enable_fips: ${16:# Whether enable FIPS node pool}
    enable_node_public_ip: ${17:# Some scenarios may require nodes in a node pool to receive theirown dedicated public IP addresses}
    enable_ultra_ssd: ${18:# Whether to enable UltraSSD}
    gpu_instance_profile: ${19:# GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU}
    kubelet_config: ${20:# The Kubelet configuration on the agent pool nodes}
    kubelet_disk_type: ${21:# Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage}
    linux_os_config: ${22:# The OS configuration of Linux agent nodes}
    log_mode: ${23:# Parent argument}
    log_path: ${24:# Parent argument}
    max_count: ${25:# Maximum number of nodes for auto-scaling}
    max_pods: ${26:# Maximum number of pods that can run on a node}
    min_count: ${27:# Minimum number of nodes for auto-scaling}
    mode: ${28:# AgentPoolMode represents mode of an agent pool}
    name: ${29:# The name of the node agent pool}
    node_labels: ${30:# Agent pool node labels to be persisted across all nodes in agent pool}
    node_public_ip_prefix_id: ${31:# The Azure Public IP prefix's ID}
    node_taints: ${32:# The taints added to new nodes during node pool create and scale}
    orchestrator_version: ${33:# Version of orchestrator specified when creating the managed cluster}
    os_disk_size_gb: ${34:# OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool}
    os_sku: ${35:# Specifies an OS SKU}
    os_type: ${36:# OsType to be used to specify os type}
    password: ${37:# Active Directory user password}
    power_state: ${38:# When an Agent Pool is first created it is initially C(Running)}
    profile: ${39:# Security profile found in ~/}
    proximity_placement_group_id: ${40:# The ID for Proximity Placement Group}
    resource_group: ${41:# The name of the resource group}
    scale_down_mode: ${42:# This also effects the cluster autoscaler behavior}
    scale_set_eviction_policy: ${43:# This cannot be specified unless the I(scale_set_priority=Spot)}
    scale_set_priority: ${44:# The Virtual Machine Scale Set priority}
    secret: ${45:# Azure client secret}
    security_profile: ${46:# The security settings of an agent pool}
    spot_max_price: ${47:# Possible values are any decimal value greater than zero or -1}
    state: ${48:# State of the automation runbook}
    subscription_id: ${49:# Your Azure subscription Id}
    tags: ${50:# Dictionary of string:string pairs to assign as metadata to the object}
    tenant: ${51:# Azure tenant ID}
    thumbprint: ${52:# The thumbprint of the private key specified in I(x509_certificate_path)}
    type_properties_type: ${53:# AgentPoolType represents types of an agent pool}
    upgrade_settings: ${54:# Settings for upgrading the agentpool}
    vm_size: ${55:# Size of agent VMs}
    vnet_subnet_id: ${56:# VNet SubnetID specifies the VNet's subnet identifier}
    workload_runtime: ${57:# Determines the type of workload a node can run}
    x509_certificate_path: ${58:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_aksagentpool]]></content>
  <tabTrigger>azure.azcollection.azure_rm_aksagentpool</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage node pools in Kubernetes kubernetes cluster</description>
</snippet>