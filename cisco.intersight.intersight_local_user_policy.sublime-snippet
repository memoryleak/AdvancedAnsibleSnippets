<snippet>
  <content><![CDATA[- name: ${1:Local User Policy configuration for Cisco Intersight}
  cisco.intersight.intersight_local_user_policy:
    always_update_password: ${2:# Since passwords are not returned by the API and are encrypted on the endpoint, this option will instruct the module when to change the password}
    api_key_id: ${3:# Public API Key ID associated with the private key}
    api_private_key: ${4:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication}
    api_uri: ${5:# URI used to access the Intersight API}
    description: ${6:# The user-defined description of the Local User policy}
    enable_password_expiry: ${7:# Enables password expiry on the endpoint}
    enforce_strong_password: ${8:# If true, enables a strong password policy}
    local_users: ${9:# List of local users on the endpoint}
    name: ${10:# The name assigned to the Local User Policy}
    organization: ${11:# The name of the Organization this resource is assigned to}
    password_history: ${12:# Specifies number of times a password cannot repeat when changed (value between 0 and 5)}
    purge: ${13:# The purge argument instructs the module to consider the resource definition absolute}
    state: ${14:# If C(present), will verify the resource is present and will create if needed}
    tags: ${15:# List of tags in Key:<user-defined key> Value:<user-defined value> format}
    use_proxy: ${16:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${17:# Boolean control for verifying the api_uri TLS certificate}
  tags:
    - cisco
    - intersight
    - intersight_local_user_policy]]></content>
  <tabTrigger>cisco.intersight.intersight_local_user_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Local User Policy configuration for Cisco Intersight</description>
</snippet>