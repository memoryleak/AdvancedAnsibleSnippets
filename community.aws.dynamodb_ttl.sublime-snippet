<snippet>
  <content><![CDATA[- name: ${1:Set TTL for a given DynamoDB table}
  community.aws.dynamodb_ttl:
    state: ${2:# State to set DynamoDB table to}
    table_name: ${3:# Name of the DynamoDB table to work on}
    attribute_name: ${4:# The name of the Time To Live attribute used to store the expiration time for items in the table}
    access_key: ${5:# AWS access key ID}
    secret_key: ${6:# AWS secret access key}
    session_token: ${7:# AWS STS session token for use with temporary credentials}
    profile: ${8:# A named AWS profile to use for authentication}
    endpoint_url: ${9:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${10:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${11:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${12:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${13:# Use a C(botocore}
    region: ${14:# The AWS region to use}
  tags:
    - community
    - aws
    - dynamodb_ttl]]></content>
  <tabTrigger>community.aws.dynamodb_ttl</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Set TTL for a given DynamoDB table</description>
</snippet>