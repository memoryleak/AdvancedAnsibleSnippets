<snippet>
  <content><![CDATA[- name: ${1:Add/Delete Volume backup}
  openstack.cloud.volume_backup:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${6:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${7:# A path to a client key to use as part of the SSL transaction}
    cloud: ${8:# Named cloud or cloud config to operate against}
    description: ${9:# String describing the backup}
    force: ${10:# Indicates whether to backup, even if the volume is attached}
    interface: ${11:# Endpoint URL type to fetch from the service catalog}
    is_incremental: ${12:# The backup mode}
    metadata: ${13:# Metadata for the backup}
    name: ${14:# Name that has to be given to the backup}
    region_name: ${15:# Name of the region}
    sdk_log_level: ${16:# Log level of the OpenStackSDK}
    sdk_log_path: ${17:# Path to the logfile of the OpenStackSDK}
    snapshot: ${18:# Name or ID of the Snapshot to take backup of}
    state: ${19:# Should the resource be present or absent}
    timeout: ${20:# How long should ansible wait for the requested resource}
    validate_certs: ${21:# Whether or not SSL API requests should be verified}
    volume: ${22:# Name or ID of the volume}
    wait: ${23:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - volume_backup]]></content>
  <tabTrigger>openstack.cloud.volume_backup</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Add/Delete Volume backup</description>
</snippet>