<snippet>
  <content><![CDATA[- name: ${1:Apply JSON patch operations to existing objects}
  kubernetes.core.k8s_json_patch:
    api_key: ${2:# Token used to authenticate with the API}
    api_version: ${3:# Use to specify the API version}
    ca_cert: ${4:# Path to a CA certificate used to authenticate with the API}
    client_cert: ${5:# Path to a certificate used to authenticate with the API}
    client_key: ${6:# Path to a key file used to authenticate with the API}
    context: ${7:# The name of a context found in the config file}
    host: ${8:# Provide a URL for accessing the API}
    impersonate_groups: ${9:# Group(s) to impersonate for the operation}
    impersonate_user: ${10:# Username to impersonate for the operation}
    kind: ${11:# Use to specify an object model}
    kubeconfig: ${12:# Path to an existing Kubernetes config file}
    name: ${13:# Use to specify an object name}
    namespace: ${14:# Use to specify an object namespace}
    no_proxy: ${15:# The comma separated list of hosts/domains/IP/CIDR that shouldn't go through proxy}
    password: ${16:# Provide a password for authenticating with the API}
    patch: ${17:# List of JSON patch operations}
    persist_config: ${18:# Whether or not to save the kube config refresh tokens}
    proxy: ${19:# The URL of an HTTP proxy to use for the connection}
    proxy_headers: ${20:# The Header used for the HTTP proxy}
    username: ${21:# Provide a username for authenticating with the API}
    validate_certs: ${22:# Whether or not to verify the API server's SSL certificates}
    wait: ${23:# Whether to wait for certain resource kinds to end up in the desired state}
    wait_condition: ${24:# Specifies a custom condition on the status to wait for}
    wait_sleep: ${25:# Number of seconds to sleep between checks}
    wait_timeout: ${26:# How long in seconds to wait for the resource to end up in the desired state}
  tags:
    - kubernetes
    - core
    - k8s_json_patch]]></content>
  <tabTrigger>kubernetes.core.k8s_json_patch</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Apply JSON patch operations to existing objects</description>
</snippet>