<snippet>
  <content><![CDATA[- name: ${1:Manage Bridge Domains (BD) objects (fv:BD)}
  cisco.aci.aci_bd:
    allow_intersite_bum_traffic: ${2:# Control whether BUM traffic is allowed between sites}
    allow_intersite_l2_stretch: ${3:# Allow L2 Stretch between sites}
    allow_ipv6_multicast: ${4:# Flag to indicate if ipv6 multicast is enabled}
    annotation: ${5:# User-defined string for annotating an object}
    arp_flooding: ${6:# Determines if the Bridge Domain should flood ARP traffic}
    bd: ${7:# The name of the Bridge Domain}
    bd_type: ${8:# The type of traffic on the Bridge Domain}
    certificate_name: ${9:# The X}
    description: ${10:# Description for the Bridge Domain}
    enable_multicast: ${11:# Determines if PIM is enabled}
    enable_rogue_except_mac: ${12:# Rogue exception MAC wildcard support for Bridge Domains}
    enable_routing: ${13:# Determines if IP forwarding should be allowed}
    endpoint_clear: ${14:# Clears all End Points in all Leaves when C(true)}
    endpoint_move_detect: ${15:# Determines if GARP should be enabled to detect when End Points move}
    endpoint_retention_action: ${16:# Determines if the Bridge Domain should inherit or resolve the End Point Retention Policy}
    endpoint_retention_policy: ${17:# The name of the End Point Retention Policy the Bridge Domain should use when overriding the default End Point Retention Policy}
    first_hop_security_policy: ${18:# The name of the First Hop Security Policy to apply to the Bridge Domain}
    host: ${19:# IP Address or hostname of APIC resolvable by Ansible control host}
    host_based_routing: ${20:# Enables advertising host routes (/32 prefixes) out of the L3OUT(s) that are associated to this BD}
    igmp_policy: ${21:# The name of the IGMP Interface Policy the Bridge Domain should use when overriding the default IGMP Interface Policy}
    igmp_snoop_policy: ${22:# The name of the IGMP Snooping Policy the Bridge Domain should use when overriding the default IGMP Snooping Policy}
    ip_learning: ${23:# Determines if the Bridge Domain should learn End Point IPs}
    ipv6_l3_unknown_multicast: ${24:# Determines the forwarding method to use for IPv6 unknown multicast destinations}
    ipv6_nd_policy: ${25:# The name of the IPv6 Neighbor Discovery Policy the Bridge Domain should use when overridding the default IPV6 ND Policy}
    l2_unknown_unicast: ${26:# Determines what forwarding method to use for unknown l2 destinations}
    l3_unknown_multicast: ${27:# Determines the forwarding method to use for unknown multicast destinations}
    limit_ip_learn: ${28:# Determines if the BD should limit IP learning to only subnets owned by the Bridge Domain}
    link_local_address: ${29:# The override of the system generated IPv6 link-local address}
    mac_address: ${30:# The MAC Address to assign to the C(bd) instead of using the default}
    mld_snoop_policy: ${31:# The name of the Multicast Listener Discovery (MLD) Snooping Policy the Bridge Domain should use when overriding the default MLD Snooping Policy}
    monitoring_policy: ${32:# The name of the Monitoring Policy to apply to the Bridge Domain}
    multi_dest: ${33:# Determines the forwarding method for L2 multicast, broadcast, and link layer traffic}
    multicast_arp_drop: ${34:# Enable BD rogue multicast ARP packet drop}
    name_alias: ${35:# The alias for the current object}
    optimize_wan_bandwidth: ${36:# Optimize WAN Bandwidth improves the network application experience at the branch and makes better use of limited network resources}
    output_level: ${37:# Influence the output of this ACI module}
    output_path: ${38:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${39:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${40:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${41:# The password to use for authentication}
    pim_destination_filter: ${42:# The name of the PIM Destination Filter to apply to the Bridge Domain}
    pim_source_filter: ${43:# The name of the PIM Source Filter to apply to the Bridge Domain}
    port: ${44:# Port number to be used for REST connection}
    private_key: ${45:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    route_profile: ${46:# The Route Profile to associate with the Bridge Domain}
    route_profile_l3out: ${47:# The L3 Out that contains the associated Route Profile}
    state: ${48:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${49:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${50:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    tenant: ${51:# The name of the Tenant}
    timeout: ${52:# The socket level timeout in seconds}
    use_proxy: ${53:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${54:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${55:# The username to use for authentication}
    validate_certs: ${56:# If C(false), SSL certificates will not be validated}
    vlan: ${57:# The selected VLAN for bridge domain access port encapsulation}
    vmac: ${58:# Virtual MAC address of the BD/SVI}
    vrf: ${59:# The name of the VRF}
  tags:
    - cisco
    - aci
    - aci_bd]]></content>
  <tabTrigger>cisco.aci.aci_bd</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Bridge Domains (BD) objects (fv:BD)</description>
</snippet>