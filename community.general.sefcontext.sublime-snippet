<snippet>
  <content><![CDATA[- name: ${1:Manages SELinux file context mapping definitions}
  community.general.sefcontext:
    ftype: ${2:# The file type that should have SELinux contexts applied}
    ignore_selinux_state: ${3:# Useful for scenarios (chrooted environment) that you cannot get the real SELinux state}
    reload: ${4:# Reload SELinux policy after commit}
    selevel: ${5:# SELinux range for the specified O(target)}
    setype: ${6:# SELinux type for the specified O(target)}
    seuser: ${7:# SELinux user for the specified O(target)}
    state: ${8:# Whether the SELinux file context must be V(absent) or V(present)}
    substitute: ${9:# Path to use to substitute file context(s) for the specified O(target)}
    target: ${10:# Target path (expression)}
  tags:
    - community
    - general
    - sefcontext]]></content>
  <tabTrigger>community.general.sefcontext</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages SELinux file context mapping definitions</description>
</snippet>