<snippet>
  <content><![CDATA[- name: ${1:This modules creates ACI schedulers}
  cisco.aci.aci_fabric_scheduler:
    name: ${2:# The name of the Scheduler}
    description: ${3:# Description for the Scheduler}
    recurring: ${4:# If you want to make the Scheduler a recurring it would be a 'True' and for a oneTime execution it would be 'False'}
    windowname: ${5:# This is the name for your what recurring or oneTime execution}
    concurCap: ${6:# This is the amount of devices that can be executed on at a time}
    maxTime: ${7:# This is the amount MAX amount of time a process can be executed}
    date: ${8:# This is the date and time that the scheduler will execute}
    hour: ${9:# This set the hour of execution}
    minute: ${10:# This sets the minute of execution, used in conjunction with hour}
    day: ${11:# This sets the day when execution will take place}
    state: ${12:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${13:# The alias for the current object}
    host: ${14:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${15:# Port number to be used for REST connection}
    username: ${16:# The username to use for authentication}
    password: ${17:# The password to use for authentication}
    private_key: ${18:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${19:# The X}
    output_level: ${20:# Influence the output of this ACI module}
    timeout: ${21:# The socket level timeout in seconds}
    use_proxy: ${22:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${23:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${24:# If C(no), SSL certificates will not be validated}
    output_path: ${25:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${26:# User-defined string for annotating an object}
    owner_key: ${27:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${28:# User-defined string for the ownerTag attribute of an ACI object}
  tags:
    - cisco
    - aci
    - aci_fabric_scheduler]]></content>
  <tabTrigger>cisco.aci.aci_fabric_scheduler</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>This modules creates ACI schedulers</description>
</snippet>