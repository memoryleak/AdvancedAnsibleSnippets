<snippet>
  <content><![CDATA[- name: ${1:Manage service apply rules in Icinga2}
  telekom_mms.icinga_director.icinga_service_apply:
    append: ${2:# Do not overwrite the whole object but instead append the defined properties}
    apply_for: ${3:# Evaluates the apply for rule for all objects with the custom attribute specified}
    assign_filter: ${4:# The filter where the service apply rule will take effect}
    check_command: ${5:# Check command definition}
    check_interval: ${6:# Your regular check interval}
    check_period: ${7:# The name of a time period which determines when this object should be monitored}
    check_timeout: ${8:# Check command timeout in seconds}
    client_cert: ${9:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${10:# PEM formatted file that contains your private key to be used for SSL client authentication}
    command_endpoint: ${11:# The host where the service should be executed on}
    display_name: ${12:# Alternative displayed name of the service apply rule}
    enable_active_checks: ${13:# Whether to actively check this object}
    enable_event_handler: ${14:# Whether to enable event handlers this object}
    enable_notifications: ${15:# Whether to send notifications for this object}
    enable_passive_checks: ${16:# Whether to accept passive check results for this object}
    enable_perfdata: ${17:# Whether to process performance data provided by this object}
    event_command: ${18:# Event command for service which gets called on every check execution if one of these conditions matches}
    force: ${19:# If V(yes) do not get a cached copy}
    force_basic_auth: ${20:# Credentials specified with O(url_username) and O(url_password) should be passed in HTTP Header}
    groups: ${21:# Service groups that should be directly assigned to this service}
    http_agent: ${22:# Header to identify as, generally appears in web server logs}
    imports: ${23:# Importable templates, add as many as you want}
    max_check_attempts: ${24:# Defines after how many check attempts a new hard state is reached}
    notes: ${25:# Additional notes for this object}
    notes_url: ${26:# An URL pointing to additional notes for this object}
    object_name: ${27:# Name for the Icinga service apply rule}
    retry_interval: ${28:# Retry interval, will be applied after a state change unless the next hard state is reached}
    state: ${29:# Apply feature state}
    url: ${30:# HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host}
    url_password: ${31:# The password for use in HTTP basic authentication}
    url_username: ${32:# The username for use in HTTP basic authentication}
    use_gssapi: ${33:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
    use_proxy: ${34:# If V(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${35:# If V(no), SSL certificates will not be validated}
    vars: ${36:# Custom properties of the service apply rule}
  tags:
    - telekom_mms
    - icinga_director
    - icinga_service_apply]]></content>
  <tabTrigger>telekom_mms.icinga_director.icinga_service_apply</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage service apply rules in Icinga2</description>
</snippet>