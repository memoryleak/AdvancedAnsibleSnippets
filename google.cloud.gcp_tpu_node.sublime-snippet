<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP Node}
  google.cloud.gcp_tpu_node:
    state: ${2:# Whether the given object should exist in GCP}
    name: ${3:# The immutable name of the TPU}
    description: ${4:# The user-supplied description of the TPU}
    accelerator_type: ${5:# The type of hardware accelerators associated with this node}
    tensorflow_version: ${6:# The version of Tensorflow running in the Node}
    network: ${7:# The name of a network to peer the TPU node to}
    cidr_block: ${8:# The CIDR block that the TPU node will use when selecting an IP address}
    use_service_networking: ${9:# Whether the VPC peering for the node is set up through Service Networking API}
    scheduling_config: ${10:# Sets the scheduling options for this TPU instance}
    labels: ${11:# Resource labels to represent user provided metadata}
    zone: ${12:# The GCP location for the TPU}
    project: ${13:# The Google Cloud Platform project to use}
    auth_kind: ${14:# The type of credential used}
    service_account_contents: ${15:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${16:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${17:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${18:# Array of scopes to be used}
    env_type: ${19:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_tpu_node]]></content>
  <tabTrigger>google.cloud.gcp_tpu_node</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP Node</description>
</snippet>