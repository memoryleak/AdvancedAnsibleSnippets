<snippet>
  <content><![CDATA[- name: ${1:Manages service-tcp objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_service_tcp:
    name: ${2:# Object name}
    aggressive_aging: ${3:# Sets short (aggressive) timeouts for idle connections}
    keep_connections_open_after_policy_installation: ${4:# Keep connections open after policy has been installed even if they are not allowed under the new policy}
    match_by_protocol_signature: ${5:# A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine}
    match_for_any: ${6:# Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol}
    override_default_settings: ${7:# Indicates whether this service is a Data Domain service which has been overridden}
    port: ${8:# The number of the port used to provide this service}
    protocol: ${9:# Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service}
    session_timeout: ${10:# Time (in seconds) before the session times out}
    source_port: ${11:# Port number for the client side service}
    sync_connections_on_cluster: ${12:# Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster}
    tags: ${13:# Collection of tag identifiers}
    use_default_session_timeout: ${14:# Use default virtual session timeout}
    color: ${15:# Color of the object}
    comments: ${16:# Comments string}
    details_level: ${17:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    groups: ${18:# Collection of group identifiers}
    ignore_warnings: ${19:# Apply changes ignoring warnings}
    ignore_errors: ${20:# Apply changes ignoring errors}
    state: ${21:# State of the access rule (present or absent)}
    auto_publish_session: ${22:# Publish the current session if changes have been performed after task completes}
    wait_for_task: ${23:# Wait for the task to end}
    wait_for_task_timeout: ${24:# How many minutes to wait until throwing a timeout error}
    version: ${25:# Version of checkpoint}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_service_tcp]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_service_tcp</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages service-tcp objects on Check Point over Web Services API</description>
</snippet>