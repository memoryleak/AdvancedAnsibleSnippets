<snippet>
  <content><![CDATA[- name: ${1:Manage AWS VPC NAT Gateways}
  amazon.aws.ec2_vpc_nat_gateway:
    access_key: ${2:# AWS access key ID}
    allocation_id: ${3:# The id of the elastic IP allocation}
    aws_ca_bundle: ${4:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${5:# A dictionary to modify the botocore configuration}
    client_token: ${6:# Optional unique token to be used during create to ensure idempotency}
    connectivity_type: ${7:# Indicates whether the NAT gateway supports public or private connectivity}
    debug_botocore_endpoint_logs: ${8:# Use a C(botocore}
    default_create: ${9:# When O(default_create=true) and O(eip_address) has been set, but not yet allocated, the NAT gateway is created and a new EIP is automatically allocated}
    eip_address: ${10:# The elastic IP address of the EIP you want attached to this NAT Gateway}
    endpoint_url: ${11:# URL to connect to instead of the default AWS endpoints}
    if_exist_do_not_create: ${12:# If a NAT Gateway exists already in the O(subnet_id), then do not create a new one}
    nat_gateway_id: ${13:# The id AWS dynamically allocates to the NAT Gateway on creation}
    profile: ${14:# A named AWS profile to use for authentication}
    purge_tags: ${15:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${16:# The AWS region to use}
    release_eip: ${17:# Deallocate the EIP from the VPC}
    secret_key: ${18:# AWS secret access key}
    session_token: ${19:# AWS STS session token for use with temporary credentials}
    state: ${20:# Ensure NAT Gateway is present or absent}
    subnet_id: ${21:# The id of the subnet to create the NAT Gateway in}
    tags: ${22:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${23:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    wait: ${24:# Wait for operation to complete before returning}
    wait_timeout: ${25:# How many seconds to wait for an operation to complete before timing out}
  tags:
    - amazon
    - aws
    - ec2_vpc_nat_gateway]]></content>
  <tabTrigger>amazon.aws.ec2_vpc_nat_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS VPC NAT Gateways</description>
</snippet>