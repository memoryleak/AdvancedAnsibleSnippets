<snippet>
  <content><![CDATA[- name: ${1:Manage custom attributes from VMware for the given virtual machine}
  community.vmware.vmware_guest_custom_attributes:
    name: ${2:# Name of the virtual machine to work with}
    state: ${3:# The action to take}
    uuid: ${4:# UUID of the virtual machine to manage if known}
    moid: ${5:# Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance}
    use_instance_uuid: ${6:# Whether to use the VMware instance UUID rather than the BIOS UUID}
    folder: ${7:# Absolute path to find an existing guest}
    datacenter: ${8:# Datacenter name where the virtual machine is located in}
    attributes: ${9:# A list of name and value of custom attributes that needs to be manage}
    hostname: ${10:# The hostname or IP address of the vSphere vCenter or ESXi server}
    username: ${11:# The username of the vSphere vCenter or ESXi server}
    password: ${12:# The password of the vSphere vCenter or ESXi server}
    validate_certs: ${13:# Allows connection when SSL certificates are not valid}
    port: ${14:# The port number of the vSphere vCenter or ESXi server}
    proxy_host: ${15:# Address of a proxy that will receive all HTTPS requests and relay them}
    proxy_port: ${16:# Port of the HTTP proxy that will receive all HTTPS requests and relay them}
  tags:
    - community
    - vmware
    - vmware_guest_custom_attributes]]></content>
  <tabTrigger>community.vmware.vmware_guest_custom_attributes</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage custom attributes from VMware for the given virtual machine</description>
</snippet>