<snippet>
  <content><![CDATA[- name: ${1:Manage images of OpenStack image (Glance) service}
  openstack.cloud.image:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    checksum: ${6:# The checksum of the image}
    client_cert: ${7:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${8:# A path to a client key to use as part of the SSL transaction}
    cloud: ${9:# Named cloud or cloud config to operate against}
    container_format: ${10:# The format of the container}
    disk_format: ${11:# The format of the disk that is getting uploaded}
    filename: ${12:# The path to the file which has to be uploaded}
    id: ${13:# The ID of the image when uploading an image}
    interface: ${14:# Endpoint URL type to fetch from the service catalog}
    is_protected: ${15:# Prevent image from being deleted}
    is_public: ${16:# Whether the image can be accessed publicly}
    kernel: ${17:# The name of an existing kernel image that will be associated with this image}
    min_disk: ${18:# The minimum disk space (in GB) required to boot this image}
    min_ram: ${19:# The minimum ram (in MB) required to boot this image}
    name: ${20:# The name of the image when uploading - or the name/ID of the image if deleting}
    owner: ${21:# The name or ID of the project owning the image}
    owner_domain: ${22:# The name or id of the domain the project owning the image belongs to}
    properties: ${23:# Additional properties to be associated with this image}
    ramdisk: ${24:# The name of an existing ramdisk image that will be associated with this image}
    region_name: ${25:# Name of the region}
    sdk_log_level: ${26:# Log level of the OpenStackSDK}
    sdk_log_path: ${27:# Path to the logfile of the OpenStackSDK}
    state: ${28:# Should the resource be present, absent or inactive}
    tags: ${29:# List of tags to be applied to the image}
    timeout: ${30:# How long should ansible wait for the requested resource}
    use_import: ${31:# Use the 'glance-direct' method of the interoperable image import mechanism}
    validate_certs: ${32:# Whether or not SSL API requests should be verified}
    visibility: ${33:# The image visibility}
    volume: ${34:# ID of a volume to create an image from}
    wait: ${35:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - image]]></content>
  <tabTrigger>openstack.cloud.image</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage images of OpenStack image (Glance) service</description>
</snippet>