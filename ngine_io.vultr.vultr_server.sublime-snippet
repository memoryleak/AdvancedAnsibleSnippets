<snippet>
  <content><![CDATA[- name: ${1:Manages virtual servers on Vultr}
  ngine_io.vultr.vultr_server:
    name: ${2:# Name of the server}
    hostname: ${3:# The hostname to assign to this server}
    os: ${4:# The operating system name or ID}
    snapshot: ${5:# Name or ID of the snapshot to restore the server from}
    firewall_group: ${6:# The firewall group description or ID to assign this server to}
    plan: ${7:# Plan name or ID to use for the server}
    force: ${8:# Force stop/start the server if required to apply changes}
    notify_activate: ${9:# Whether to send an activation email when the server is ready or not}
    private_network_enabled: ${10:# Whether to enable private networking or not}
    auto_backup_enabled: ${11:# Whether to enable automatic backups or not}
    ipv6_enabled: ${12:# Whether to enable IPv6 or not}
    tag: ${13:# Tag for the server}
    user_data: ${14:# User data to be passed to the server}
    startup_script: ${15:# Name or ID of the startup script to execute on boot}
    ssh_keys: ${16:# List of SSH key names or IDs passed to the server on creation}
    reserved_ip_v4: ${17:# IP address of the floating IP to use as the main IP of this server}
    region: ${18:# Region name or ID the server is deployed into}
    state: ${19:# State of the server}
    api_key: ${20:# API key of the Vultr API}
    api_timeout: ${21:# HTTP timeout to Vultr API}
    api_retries: ${22:# Amount of retries in case of the Vultr API retuns an HTTP 503 code}
    api_retry_max_delay: ${23:# Retry backoff delay in seconds is exponential up to this max}
    api_account: ${24:# Name of the ini section in the C(vultr}
    api_endpoint: ${25:# URL to API endpint (without trailing slash)}
    validate_certs: ${26:# Validate SSL certs of the Vultr API}
  tags:
    - ngine_io
    - vultr
    - vultr_server]]></content>
  <tabTrigger>ngine_io.vultr.vultr_server</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages virtual servers on Vultr</description>
</snippet>