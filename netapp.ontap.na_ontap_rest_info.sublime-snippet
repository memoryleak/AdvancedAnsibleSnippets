<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP information gatherer using REST APIs}
  netapp.ontap.na_ontap_rest_info:
    cert_filepath: ${2:# path to SSL client cert file (}
    feature_flags: ${3:# Enable or disable a new feature}
    fields: ${4:# Request specific fields from subset}
    force_ontap_version: ${5:# Override the cluster ONTAP version when using REST}
    gather_subset: ${6:# When supplied, this argument will restrict the information collected to a given subset}
    hal_linking: ${7:# if false, HAL-encoded links are disabled in the REST calls}
    hostname: ${8:# The hostname or IP address of the ONTAP instance}
    http_port: ${9:# Override the default port (80 or 443) with this port}
    https: ${10:# Enable and disable https}
    ignore_api_errors: ${11:# List of substrings}
    key_filepath: ${12:# path to SSL client key file}
    max_records: ${13:# Maximum number of records returned in a single call}
    owning_resource: ${14:# Some resources cannot be accessed directly}
    parameters: ${15:# Allows for any rest option to be passed in}
    password: ${16:# Password for the specified user}
    state: ${17:# deprecated as of 21}
    use_python_keys: ${18:# If true, I(/) in the returned dictionary keys are translated to I(_)}
    use_rest: ${19:# This module only supports REST}
    username: ${20:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${21:# If set to C(no), the SSL certificates will not be validated}
  tags:
    - netapp
    - ontap
    - na_ontap_rest_info]]></content>
  <tabTrigger>netapp.ontap.na_ontap_rest_info</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP information gatherer using REST APIs</description>
</snippet>