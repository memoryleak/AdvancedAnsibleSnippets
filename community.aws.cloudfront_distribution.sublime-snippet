<snippet>
  <content><![CDATA[- name: ${1:Create, update and delete AWS CloudFront distributions}
  community.aws.cloudfront_distribution:
    state: ${2:# The desired state of the distribution}
    distribution_id: ${3:# The ID of the CloudFront distribution}
    e_tag: ${4:# A unique identifier of a modified or existing distribution}
    caller_reference: ${5:# A unique identifier for creating and updating CloudFront distributions}
    alias: ${6:# The name of an alias (CNAME) that is used in a distribution}
    aliases: ${7:# A list of domain name aliases (CNAMEs) as strings to be used for the distribution}
    purge_aliases: ${8:# Specifies whether existing aliases will be removed before adding new aliases}
    default_root_object: ${9:# A config element that specifies the path to request when the user requests the origin}
    default_origin_domain_name: ${10:# The domain name to use for an origin if no I(origins) have been specified}
    default_origin_path: ${11:# The default origin path to specify for an origin if no I(origins) have been specified}
    origins: ${12:# A config element that is a list of complex origin objects to be specified for the distribution}
    purge_origins: ${13:# Whether to remove any origins that aren't listed in I(origins)}
    default_cache_behavior: ${14:# A dict specifying the default cache behavior of the distribution}
    cache_behaviors: ${15:# A list of dictionaries describing the cache behaviors for the distribution}
    purge_cache_behaviors: ${16:# Whether to remove any cache behaviors that aren't listed in I(cache_behaviors)}
    custom_error_responses: ${17:# A config element that is a I(list[]) of complex custom error responses to be specified for the distribution}
    purge_custom_error_responses: ${18:# Whether to remove any custom error responses that aren't listed in I(custom_error_responses)}
    comment: ${19:# A comment that describes the CloudFront distribution}
    logging: ${20:# A config element that is a complex object that defines logging for the distribution}
    price_class: ${21:# A string that specifies the pricing class of the distribution}
    enabled: ${22:# A boolean value that specifies whether the distribution is enabled or disabled}
    viewer_certificate: ${23:# A dict that specifies the encryption details of the distribution}
    restrictions: ${24:# A config element that is a complex object that describes how a distribution should restrict it's content}
    web_acl_id: ${25:# The ID of a Web Application Firewall (WAF) Access Control List (ACL)}
    http_version: ${26:# The version of the http protocol to use for the distribution}
    ipv6_enabled: ${27:# Determines whether IPv6 support is enabled or not}
    wait: ${28:# Specifies whether the module waits until the distribution has completed processing the creation or update}
    wait_timeout: ${29:# Specifies the duration in seconds to wait for a timeout of a cloudfront create or update}
    access_key: ${30:# AWS access key ID}
    secret_key: ${31:# AWS secret access key}
    session_token: ${32:# AWS STS session token for use with temporary credentials}
    profile: ${33:# A named AWS profile to use for authentication}
    endpoint_url: ${34:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${35:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${36:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${37:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${38:# Use a C(botocore}
    region: ${39:# The AWS region to use}
    tags: ${40:# A dictionary representing the tags to be applied to the resource}
    purge_tags: ${41:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - community
    - aws
    - cloudfront_distribution]]></content>
  <tabTrigger>community.aws.cloudfront_distribution</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create, update and delete AWS CloudFront distributions</description>
</snippet>