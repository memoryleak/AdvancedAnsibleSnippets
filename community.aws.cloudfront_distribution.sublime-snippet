<snippet>
  <content><![CDATA[- name: ${1:Create, update and delete AWS CloudFront distributions}
  community.aws.cloudfront_distribution:
    access_key: ${2:# AWS access key ID}
    alias: ${3:# The name of an alias (CNAME) that is used in a distribution}
    aliases: ${4:# A list of domain name aliases (CNAMEs) as strings to be used for the distribution}
    aws_ca_bundle: ${5:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${6:# A dictionary to modify the botocore configuration}
    cache_behaviors: ${7:# A list of dictionaries describing the cache behaviors for the distribution}
    caller_reference: ${8:# A unique identifier for creating and updating CloudFront distributions}
    comment: ${9:# A comment that describes the CloudFront distribution}
    custom_error_responses: ${10:# A config element that is a I(list[]) of complex custom error responses to be specified for the distribution}
    debug_botocore_endpoint_logs: ${11:# Use a C(botocore}
    default_cache_behavior: ${12:# A dict specifying the default cache behavior of the distribution}
    default_origin_domain_name: ${13:# The domain name to use for an origin if no I(origins) have been specified}
    default_origin_path: ${14:# The default origin path to specify for an origin if no I(origins) have been specified}
    default_root_object: ${15:# A config element that specifies the path to request when the user requests the origin}
    distribution_id: ${16:# The ID of the CloudFront distribution}
    e_tag: ${17:# A unique identifier of a modified or existing distribution}
    enabled: ${18:# A boolean value that specifies whether the distribution is enabled or disabled}
    endpoint_url: ${19:# URL to connect to instead of the default AWS endpoints}
    http_version: ${20:# The version of the http protocol to use for the distribution}
    ipv6_enabled: ${21:# Determines whether IPv6 support is enabled or not}
    logging: ${22:# A config element that is a complex object that defines logging for the distribution}
    origins: ${23:# A config element that is a list of complex origin objects to be specified for the distribution}
    price_class: ${24:# A string that specifies the pricing class of the distribution}
    profile: ${25:# A named AWS profile to use for authentication}
    purge_aliases: ${26:# Specifies whether existing aliases will be removed before adding new aliases}
    purge_cache_behaviors: ${27:# Whether to remove any cache behaviors that aren't listed in I(cache_behaviors)}
    purge_custom_error_responses: ${28:# Whether to remove any custom error responses that aren't listed in I(custom_error_responses)}
    purge_origins: ${29:# Whether to remove any origins that aren't listed in I(origins)}
    purge_tags: ${30:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    region: ${31:# The AWS region to use}
    restrictions: ${32:# A config element that is a complex object that describes how a distribution should restrict it's content}
    secret_key: ${33:# AWS secret access key}
    session_token: ${34:# AWS STS session token for use with temporary credentials}
    state: ${35:# The desired state of the distribution}
    tags: ${36:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${37:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    viewer_certificate: ${38:# A dict that specifies the encryption details of the distribution}
    wait: ${39:# Specifies whether the module waits until the distribution has completed processing the creation or update}
    wait_timeout: ${40:# Specifies the duration in seconds to wait for a timeout of a cloudfront create or update}
    web_acl_id: ${41:# The ID of a Web Application Firewall (WAF) Access Control List (ACL)}
  tags:
    - community
    - aws
    - cloudfront_distribution]]></content>
  <tabTrigger>community.aws.cloudfront_distribution</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create, update and delete AWS CloudFront distributions</description>
</snippet>