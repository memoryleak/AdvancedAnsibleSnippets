<snippet>
  <content><![CDATA[- name: ${1:Dependency Manager for PHP}
  community.general.composer:
    apcu_autoloader: ${2:# Uses APCu to cache found/not-found classes}
    arguments: ${3:# Composer arguments like required package, version and so on}
    classmap_authoritative: ${4:# Autoload classes from classmap only}
    command: ${5:# Composer command like 'install', 'update' and so on}
    composer_executable: ${6:# Path to composer executable on the remote host, if composer is not in E(PATH) or a custom composer is needed}
    executable: ${7:# Path to PHP Executable on the remote host, if PHP is not in PATH}
    global_command: ${8:# Runs the specified command globally}
    ignore_platform_reqs: ${9:# Ignore php, hhvm, lib-* and ext-* requirements and force the installation even if the local machine does not fulfill these}
    no_dev: ${10:# Disables installation of require-dev packages (see --no-dev)}
    no_plugins: ${11:# Disables all plugins (see --no-plugins)}
    no_scripts: ${12:# Skips the execution of all scripts defined in composer}
    optimize_autoloader: ${13:# Optimize autoloader during autoloader dump (see --optimize-autoloader)}
    prefer_dist: ${14:# Forces installation from package dist even for dev versions (see --prefer-dist)}
    prefer_source: ${15:# Forces installation from package sources when possible (see --prefer-source)}
    working_dir: ${16:# Directory of your project (see --working-dir)}
  tags:
    - community
    - general
    - composer]]></content>
  <tabTrigger>community.general.composer</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Dependency Manager for PHP</description>
</snippet>