<snippet>
  <content><![CDATA[- name: ${1:Manage Ruby gems}
  community.general.gem:
    bindir: ${2:# Install executables into a specific directory}
    build_flags: ${3:# Allow adding build flags for gem compilation}
    env_shebang: ${4:# Rewrite the shebang line on installed scripts to use /usr/bin/env}
    executable: ${5:# Override the path to the gem executable}
    force: ${6:# Force gem to (un-)install, bypassing dependency checks}
    gem_source: ${7:# The path to a local gem used as installation source}
    include_dependencies: ${8:# Whether to include dependencies or not}
    include_doc: ${9:# Install with or without docs}
    install_dir: ${10:# Install the gems into a specific directory}
    name: ${11:# The name of the gem to be managed}
    norc: ${12:# Avoid loading any C(}
    pre_release: ${13:# Allow installation of pre-release versions of the gem}
    repository: ${14:# The repository from which the gem will be installed}
    state: ${15:# The desired state of the gem}
    user_install: ${16:# Install gem in user's local gems cache or for all users}
    version: ${17:# Version of the gem to be installed/removed}
  tags:
    - community
    - general
    - gem]]></content>
  <tabTrigger>community.general.gem</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Ruby gems</description>
</snippet>