<snippet>
  <content><![CDATA[- name: ${1:Create and delete AWS VPN Virtual Gateways}
  amazon.aws.ec2_vpc_vgw:
    access_key: ${2:# AWS access key ID}
    asn: ${3:# The BGP ASN on the Amazon side}
    aws_ca_bundle: ${4:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${5:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${6:# Use a C(botocore}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    name: ${8:# Name of the VGW to be created or deleted}
    profile: ${9:# A named AWS profile to use for authentication}
    purge_tags: ${10:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    region: ${11:# The AWS region to use}
    secret_key: ${12:# AWS secret access key}
    session_token: ${13:# AWS STS session token for use with temporary credentials}
    state: ${14:# V(present) to ensure resource is created}
    tags: ${15:# A dictionary representing the tags to be applied to the resource}
    type: ${16:# Type of the virtual gateway to be created}
    validate_certs: ${17:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    vpc_id: ${18:# The ID of a VPC to attach or detach to the VGW}
    vpn_gateway_id: ${19:# VPN gateway ID of an existing virtual gateway}
    wait_timeout: ${20:# Number of seconds to wait for status during VPC attach and detach}
  tags:
    - amazon
    - aws
    - ec2_vpc_vgw]]></content>
  <tabTrigger>amazon.aws.ec2_vpc_vgw</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create and delete AWS VPN Virtual Gateways</description>
</snippet>