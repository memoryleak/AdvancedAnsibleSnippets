<snippet>
  <content><![CDATA[- name: ${1:Enable, disable, and set weights for HAProxy backend servers using socket commands}
  community.general.haproxy:
    agent: ${2:# Disable/enable agent checks (depending on O(state) value)}
    backend: ${3:# Name of the HAProxy backend pool}
    drain: ${4:# Wait until the server has no active connections or until the timeout determined by O(wait_interval) and O(wait_retries) is reached}
    fail_on_not_found: ${5:# Fail whenever trying to enable/disable a backend host that does not exist}
    health: ${6:# Disable/enable health checks (depending on O(state) value)}
    host: ${7:# Name of the backend host to change}
    shutdown_sessions: ${8:# When disabling a server, immediately terminate all the sessions attached to the specified server}
    socket: ${9:# Path to the HAProxy socket file}
    state: ${10:# Desired state of the provided backend host}
    wait: ${11:# Wait until the server reports a status of C(UP) when O(state=enabled), status of C(MAINT) when O(state=disabled) or status of C(DRAIN) when O(state=drain)}
    wait_interval: ${12:# Number of seconds to wait between retries}
    wait_retries: ${13:# Number of times to check for status after changing the state}
    weight: ${14:# The value passed in argument}
  tags:
    - community
    - general
    - haproxy]]></content>
  <tabTrigger>community.general.haproxy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Enable, disable, and set weights for HAProxy backend servers using socket commands</description>
</snippet>