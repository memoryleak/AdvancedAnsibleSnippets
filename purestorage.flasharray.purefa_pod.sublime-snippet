<snippet>
  <content><![CDATA[- name: ${1:Manage AC pods in Pure Storage FlashArrays}
  purestorage.flasharray.purefa_pod:
    api_token: ${2:# FlashArray API token for admin privileged user}
    delete_contents: ${3:# This enables you to eradicate pods with contents}
    disable_warnings: ${4:# Disable insecure certificate warnings in debug logs}
    eradicate: ${5:# Define whether to eradicate the pod on delete or leave in trash}
    fa_url: ${6:# FlashArray management IPv4 address or Hostname}
    failover: ${7:# The name of the array given priority to stay online if arrays loose contact with eachother}
    ignore_usage: ${8:# Flag used to override checks for quota management operations}
    mediator: ${9:# Name of the mediator to use for a pod}
    name: ${10:# The name of the pod}
    promote: ${11:# Promote/demote any pod not in a stretched relationship}
    quiesce: ${12:# Quiesce/Skip quiesce when I(promote) is false and demoting an ActiveDR pod}
    quota: ${13:# Logical quota limit of the pod in K, M, G, T or P units, or bytes}
    state: ${14:# Define whether the pod should exist or not}
    stretch: ${15:# The name of the array to stretch to/unstretch from}
    target: ${16:# Name of clone target pod}
    throttle: ${17:# Allows pod creation to fail if array health is not optimal}
    undo: ${18:# Use the I(undo-remote) pod when I(promote) is true and promoting an ActiveDR pod}
  tags:
    - purestorage
    - flasharray
    - purefa_pod]]></content>
  <tabTrigger>purestorage.flasharray.purefa_pod</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AC pods in Pure Storage FlashArrays</description>
</snippet>