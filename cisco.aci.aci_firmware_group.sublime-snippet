<snippet>
  <content><![CDATA[- name: ${1:Manage firmware groups (firmware:FwGrp)}
  cisco.aci.aci_firmware_group:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    description: ${4:# Description of the firmware group}
    group: ${5:# Name of the firmware group}
    host: ${6:# IP Address or hostname of APIC resolvable by Ansible control host}
    name_alias: ${7:# The alias for the current object}
    output_level: ${8:# Influence the output of this ACI module}
    output_path: ${9:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${10:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${11:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${12:# The password to use for authentication}
    policy: ${13:# Name of the firmware policy}
    port: ${14:# Port number to be used for REST connection}
    private_key: ${15:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${16:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${17:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${18:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    timeout: ${19:# The socket level timeout in seconds}
    type_group: ${20:# Type of the firmware group}
    use_proxy: ${21:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${22:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${23:# The username to use for authentication}
    validate_certs: ${24:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_firmware_group]]></content>
  <tabTrigger>cisco.aci.aci_firmware_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage firmware groups (firmware:FwGrp)</description>
</snippet>