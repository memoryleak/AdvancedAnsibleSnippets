<snippet>
  <content><![CDATA[- name: ${1:Manage an AWS VPC Internet gateway}
  amazon.aws.ec2_vpc_igw:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    detach_vpc: ${6:# Remove attached VPC from gateway}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    force_attach: ${8:# Force attaching VPC to I(vpc_id)}
    internet_gateway_id: ${9:# The ID of Internet Gateway to manage}
    profile: ${10:# A named AWS profile to use for authentication}
    purge_tags: ${11:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    region: ${12:# The AWS region to use}
    secret_key: ${13:# AWS secret access key}
    session_token: ${14:# AWS STS session token for use with temporary credentials}
    state: ${15:# Create or terminate the IGW}
    tags: ${16:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${17:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    vpc_id: ${18:# The VPC ID for the VPC to attach (when state=present)}
  tags:
    - amazon
    - aws
    - ec2_vpc_igw]]></content>
  <tabTrigger>amazon.aws.ec2_vpc_igw</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage an AWS VPC Internet gateway</description>
</snippet>