<snippet>
  <content><![CDATA[- name: ${1:Manages baremetal servers on Vultr}
  ngine_io.vultr.vultr_server_baremetal:
    name: ${2:# Name of the server}
    hostname: ${3:# The hostname to assign to this server}
    os: ${4:# The operating system name or ID}
    plan: ${5:# Plan name or ID to use for the server}
    notify_activate: ${6:# Whether to send an activation email when the server is ready or not}
    ipv6_enabled: ${7:# Whether to enable IPv6 or not}
    tag: ${8:# Tag for the server}
    user_data: ${9:# User data to be passed to the server}
    startup_script: ${10:# Name or ID of the startup script to execute on boot}
    ssh_keys: ${11:# List of SSH key names or IDs passed to the server on creation}
    reserved_ip_v4: ${12:# IP address of the floating IP to use as the main IP of this server}
    region: ${13:# Region name or ID the server is deployed into}
    state: ${14:# State of the server}
    api_key: ${15:# API key of the Vultr API}
    api_timeout: ${16:# HTTP timeout to Vultr API}
    api_retries: ${17:# Amount of retries in case of the Vultr API retuns an HTTP 503 code}
    api_retry_max_delay: ${18:# Retry backoff delay in seconds is exponential up to this max}
    api_account: ${19:# Name of the ini section in the C(vultr}
    api_endpoint: ${20:# URL to API endpint (without trailing slash)}
    validate_certs: ${21:# Validate SSL certs of the Vultr API}
  tags:
    - ngine_io
    - vultr
    - vultr_server_baremetal]]></content>
  <tabTrigger>ngine_io.vultr.vultr_server_baremetal</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages baremetal servers on Vultr</description>
</snippet>