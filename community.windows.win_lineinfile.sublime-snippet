<snippet>
  <content><![CDATA[- name: ${1:Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression}
  community.windows.win_lineinfile:
    backrefs: ${2:# Used with C(state=present)}
    backup: ${3:# Determine whether a backup should be created}
    create: ${4:# Used with C(state=present)}
    encoding: ${5:# Specifies the encoding of the source text file to operate on (and thus what the output encoding will be)}
    insertafter: ${6:# Used with C(state=present)}
    insertbefore: ${7:# Used with C(state=present)}
    line: ${8:# Required for C(state=present)}
    newline: ${9:# Specifies the line separator style to use for the modified file}
    path: ${10:# The path of the file to modify}
    regex: ${11:# The regular expression to look for in every line of the file}
    state: ${12:# Whether the line should be there or not}
    validate: ${13:# Validation to run before copying into place}
  tags:
    - community
    - windows
    - win_lineinfile]]></content>
  <tabTrigger>community.windows.win_lineinfile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression</description>
</snippet>