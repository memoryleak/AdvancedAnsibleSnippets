<snippet>
  <content><![CDATA[- name: ${1:Manage VLANs in the Meraki cloud}
  cisco.meraki.meraki_mx_vlan:
    state: ${2:# Specifies whether object should be queried, created/modified, or removed}
    net_name: ${3:# Name of network which VLAN is in or should be in}
    net_id: ${4:# ID of network which VLAN is in or should be in}
    vlan_id: ${5:# ID number of VLAN}
    name: ${6:# Name of VLAN}
    subnet: ${7:# CIDR notation of network subnet}
    appliance_ip: ${8:# IP address of appliance}
    dns_nameservers: ${9:# Semi-colon delimited list of DNS IP addresses}
    reserved_ip_range: ${10:# IP address ranges which should be reserve and not distributed via DHCP}
    vpn_nat_subnet: ${11:# The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN}
    fixed_ip_assignments: ${12:# Static IP address assignments to be distributed via DHCP by MAC address}
    dhcp_handling: ${13:# How to handle DHCP packets on network}
    dhcp_relay_server_ips: ${14:# IP addresses to forward DHCP packets to}
    dhcp_lease_time: ${15:# DHCP lease timer setting}
    dhcp_boot_options_enabled: ${16:# Enable DHCP boot options}
    dhcp_boot_next_server: ${17:# DHCP boot option to direct boot clients to the server to load boot file from}
    dhcp_boot_filename: ${18:# Filename to boot from for DHCP boot}
    dhcp_options: ${19:# List of DHCP option values}
    auth_key: ${20:# Authentication key provided by the dashboard}
    host: ${21:# Hostname for Meraki dashboard}
    use_proxy: ${22:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_https: ${23:# If C(no), it will use HTTP}
    output_format: ${24:# Instructs module whether response keys should be snake case (ex}
    output_level: ${25:# Set amount of debug output during module execution}
    timeout: ${26:# Time to timeout for HTTP requests}
    validate_certs: ${27:# Whether to validate HTTP certificates}
    org_name: ${28:# Name of organization}
    org_id: ${29:# ID of organization}
    rate_limit_retry_time: ${30:# Number of seconds to retry if rate limiter is triggered}
    internal_error_retry_time: ${31:# Number of seconds to retry if server returns an internal server error}
  tags:
    - cisco
    - meraki
    - meraki_mx_vlan]]></content>
  <tabTrigger>cisco.meraki.meraki_mx_vlan</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage VLANs in the Meraki cloud</description>
</snippet>