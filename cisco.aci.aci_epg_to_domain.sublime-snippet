<snippet>
  <content><![CDATA[- name: ${1:Bind EPGs to Domains (fv:RsDomAtt)}
  cisco.aci.aci_epg_to_domain:
    allow_useg: ${2:# Allows micro-segmentation}
    ap: ${3:# Name of an existing application network profile, that will contain the EPGs}
    deploy_immediacy: ${4:# Determines when the policy is pushed to hardware Policy CAM}
    domain: ${5:# Name of the physical or virtual domain being associated with the EPG}
    domain_type: ${6:# Specify whether the Domain is a physical (phys), a virtual (vmm) or an L2 external domain association (l2dom)}
    encap: ${7:# The VLAN encapsulation for the EPG when binding a VMM Domain with static C(encap_mode)}
    encap_mode: ${8:# The encapsulation method to be used}
    switching_mode: ${9:# Switching Mode used by the switch}
    epg: ${10:# Name of the end point group}
    enhanced_lag_policy: ${11:# Name of the VMM Domain Enhanced Lag Policy}
    vmm_uplink_active: ${12:# A list of active uplink IDs}
    vmm_uplink_standby: ${13:# A list of standby uplink IDs}
    netflow: ${14:# Determines if netflow should be enabled}
    primary_encap: ${15:# Determines the primary VLAN ID when using useg}
    resolution_immediacy: ${16:# Determines when the policies should be resolved and available}
    state: ${17:# Use C(present) or C(absent) for adding or removing}
    tenant: ${18:# Name of an existing tenant}
    promiscuous: ${19:# Allow/Disallow promiscuous mode in vmm domain}
    vm_provider: ${20:# The VM platform for VMM Domains}
    custom_epg_name: ${21:# The custom epg name in VMM domain association}
    delimiter: ${22:# The delimiter}
    untagged_vlan: ${23:# The access vlan is untagged}
    port_binding: ${24:# The port binding method}
    port_allocation: ${25:# The port allocation method}
    number_of_ports: ${26:# The number of ports}
    forged_transmits: ${27:# Allow forged transmits}
    mac_changes: ${28:# Allows definition of new MAC addresses for the network adapter within the virtual machine (VM)}
    host: ${29:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${30:# Port number to be used for REST connection}
    username: ${31:# The username to use for authentication}
    password: ${32:# The password to use for authentication}
    private_key: ${33:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${34:# The X}
    output_level: ${35:# Influence the output of this ACI module}
    timeout: ${36:# The socket level timeout in seconds}
    use_proxy: ${37:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${38:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${39:# If C(no), SSL certificates will not be validated}
    output_path: ${40:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${41:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_epg_to_domain]]></content>
  <tabTrigger>cisco.aci.aci_epg_to_domain</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Bind EPGs to Domains (fv:RsDomAtt)</description>
</snippet>