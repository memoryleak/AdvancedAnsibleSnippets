<snippet>
  <content><![CDATA[- name: ${1:Manage Layer 3 Outside (L3Out) logical node profile nodes (l3ext:RsNodeL3OutAtt)}
  cisco.aci.aci_l3out_logical_node:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    host: ${4:# IP Address or hostname of APIC resolvable by Ansible control host}
    l3out: ${5:# Name of an existing L3Out}
    loopback_address: ${6:# The loopback IP address}
    node_id: ${7:# Existing nodeId}
    node_profile: ${8:# Name of the node profile}
    output_level: ${9:# Influence the output of this ACI module}
    output_path: ${10:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${11:# The password to use for authentication}
    pod_id: ${12:# Existing podId}
    port: ${13:# Port number to be used for REST connection}
    private_key: ${14:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    router_id: ${15:# Router ID in dotted decimal notation}
    router_id_as_loopback: ${16:# Configure the router ID as a loopback IP}
    state: ${17:# Use C(present) or C(absent) for adding or removing}
    tenant: ${18:# Name of an existing tenant}
    timeout: ${19:# The socket level timeout in seconds}
    use_proxy: ${20:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${21:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${22:# The username to use for authentication}
    validate_certs: ${23:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_l3out_logical_node]]></content>
  <tabTrigger>cisco.aci.aci_l3out_logical_node</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Layer 3 Outside (L3Out) logical node profile nodes (l3ext:RsNodeL3OutAtt)</description>
</snippet>