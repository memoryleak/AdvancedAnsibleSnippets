<snippet>
  <content><![CDATA[- name: ${1:Manage SmartOS virtual machines and zones}
  community.general.vmadm:
    archive_on_delete: ${2:# When enabled, the zone dataset will be mounted on C(/zones/archive) upon removal}
    autoboot: ${3:# Whether or not a VM is booted when the system is rebooted}
    brand: ${4:# Type of virtual machine}
    boot: ${5:# Set the boot order for KVM VMs}
    cpu_cap: ${6:# Sets a limit on the amount of CPU time that can be used by a VM}
    cpu_shares: ${7:# Sets a limit on the number of fair share scheduler (FSS) CPU shares for a VM}
    cpu_type: ${8:# Control the type of virtual CPU exposed to KVM VMs}
    customer_metadata: ${9:# Metadata to be set and associated with this VM, this contain customer modifiable keys}
    delegate_dataset: ${10:# Whether to delegate a ZFS dataset to an OS VM}
    disk_driver: ${11:# Default value for a virtual disk model for KVM guests}
    disks: ${12:# A list of disks to add, valid properties are documented in vmadm(1M)}
    dns_domain: ${13:# Domain value for C(/etc/hosts)}
    docker: ${14:# Docker images need this flag enabled along with the I(brand) set to C(lx)}
    filesystems: ${15:# Mount additional filesystems into an OS VM}
    firewall_enabled: ${16:# Enables the firewall, allowing fwadm(1M) rules to be applied}
    force: ${17:# Force a particular action (i}
    fs_allowed: ${18:# Comma separated list of filesystem types this zone is allowed to mount}
    hostname: ${19:# Zone/VM hostname}
    image_uuid: ${20:# Image UUID}
    indestructible_delegated: ${21:# Adds an C(@indestructible) snapshot to delegated datasets}
    indestructible_zoneroot: ${22:# Adds an C(@indestructible) snapshot to zoneroot}
    internal_metadata: ${23:# Metadata to be set and associated with this VM, this contains operator generated keys}
    internal_metadata_namespace: ${24:# List of namespaces to be set as I(internal_metadata-only); these namespaces will come from I(internal_metadata) rather than I(customer_metadata)}
    kernel_version: ${25:# Kernel version to emulate for LX VMs}
    limit_priv: ${26:# Set (comma separated) list of privileges the zone is allowed to use}
    maintain_resolvers: ${27:# Resolvers in C(/etc/resolv}
    max_locked_memory: ${28:# Total amount of memory (in MiBs) on the host that can be locked by this VM}
    max_lwps: ${29:# Maximum number of lightweight processes this VM is allowed to have running}
    max_physical_memory: ${30:# Maximum amount of memory (in MiBs) on the host that the VM is allowed to use}
    max_swap: ${31:# Maximum amount of virtual memory (in MiBs) the VM is allowed to use}
    mdata_exec_timeout: ${32:# Timeout in seconds (or 0 to disable) for the C(svc:/smartdc/mdata:execute) service that runs user-scripts in the zone}
    name: ${33:# Name of the VM}
    nic_driver: ${34:# Default value for a virtual NIC model for KVM guests}
    nics: ${35:# A list of nics to add, valid properties are documented in vmadm(1M)}
    nowait: ${36:# Consider the provisioning complete when the VM first starts, rather than when the VM has rebooted}
    qemu_opts: ${37:# Additional qemu arguments for KVM guests}
    qemu_extra_opts: ${38:# Additional qemu cmdline arguments for KVM guests}
    quota: ${39:# Quota on zone filesystems (in MiBs)}
    ram: ${40:# Amount of virtual RAM for a KVM guest (in MiBs)}
    resolvers: ${41:# List of resolvers to be put into C(/etc/resolv}
    routes: ${42:# Dictionary that maps destinations to gateways, these will be set as static routes in the VM}
    spice_opts: ${43:# Addition options for SPICE-enabled KVM VMs}
    spice_password: ${44:# Password required to connect to SPICE}
    state: ${45:# States for the VM to be in}
    tmpfs: ${46:# Amount of memory (in MiBs) that will be available in the VM for the C(/tmp) filesystem}
    uuid: ${47:# UUID of the VM}
    vcpus: ${48:# Number of virtual CPUs for a KVM guest}
    vga: ${49:# Specify VGA emulation used by KVM VMs}
    virtio_txburst: ${50:# Number of packets that can be sent in a single flush of the tx queue of virtio NICs}
    virtio_txtimer: ${51:# Timeout (in nanoseconds) for the TX timer of virtio NICs}
    vnc_password: ${52:# Password required to connect to VNC}
    vnc_port: ${53:# TCP port to listen of the VNC server}
    zfs_data_compression: ${54:# Specifies compression algorithm used for this VMs data dataset}
    zfs_data_recsize: ${55:# Suggested block size (power of 2) for files in the delegated dataset's filesystem}
    zfs_filesystem_limit: ${56:# Maximum number of filesystems the VM can have}
    zfs_io_priority: ${57:# IO throttle priority value relative to other VMs}
    zfs_root_compression: ${58:# Specifies compression algorithm used for this VMs root dataset}
    zfs_root_recsize: ${59:# Suggested block size (power of 2) for files in the zoneroot dataset's filesystem}
    zfs_snapshot_limit: ${60:# Number of snapshots the VM can have}
    zpool: ${61:# ZFS pool the VM's zone dataset will be created in}
  tags:
    - community
    - general
    - vmadm]]></content>
  <tabTrigger>community.general.vmadm</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage SmartOS virtual machines and zones</description>
</snippet>