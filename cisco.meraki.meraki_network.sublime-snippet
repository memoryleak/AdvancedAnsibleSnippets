<snippet>
  <content><![CDATA[- name: ${1:Manage networks in the Meraki cloud}
  cisco.meraki.meraki_network:
    auth_key: ${2:# Authentication key provided by the dashboard}
    copy_from_network_id: ${3:# New network inherits properties from this network ID}
    enable_vlans: ${4:# Boolean value specifying whether VLANs should be supported on a network}
    host: ${5:# Hostname for Meraki dashboard}
    internal_error_retry_time: ${6:# Number of seconds to retry if server returns an internal server error}
    local_status_page_enabled: ${7:# - This no longer works and will likely be moved to a separate module}
    net_id: ${8:# ID number of a network}
    net_name: ${9:# Name of a network}
    org_id: ${10:# ID of organization}
    org_name: ${11:# Name of organization}
    output_format: ${12:# Instructs module whether response keys should be snake case (ex}
    output_level: ${13:# Set amount of debug output during module execution}
    rate_limit_retry_time: ${14:# Number of seconds to retry if rate limiter is triggered}
    remote_status_page_enabled: ${15:# This no longer works and will likely be moved to a separate module}
    state: ${16:# Create or modify an organization}
    tags: ${17:# List of tags to assign to network}
    timeout: ${18:# Time to timeout for HTTP requests}
    timezone: ${19:# Timezone associated to network}
    type: ${20:# Type of network device network manages}
    use_https: ${21:# If C(no), it will use HTTP}
    use_proxy: ${22:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${23:# Whether to validate HTTP certificates}
  tags:
    - cisco
    - meraki
    - meraki_network]]></content>
  <tabTrigger>cisco.meraki.meraki_network</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage networks in the Meraki cloud</description>
</snippet>