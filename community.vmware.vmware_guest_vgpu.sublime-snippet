<snippet>
  <content><![CDATA[- name: ${1:Modify vGPU video card profile of the specified virtual machine in the given vCenter infrastructure}
  community.vmware.vmware_guest_vgpu:
    cluster: ${2:# The cluster name where the virtual machine is running}
    datacenter: ${3:# The datacenter name to which virtual machine belongs to}
    esxi_hostname: ${4:# The ESXi hostname where the virtual machine is running}
    folder: ${5:# Destination folder, absolute or relative path to find an existing guest}
    force: ${6:# Force operation}
    hostname: ${7:# The hostname or IP address of the vSphere vCenter or ESXi server}
    moid: ${8:# Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance}
    name: ${9:# Name of the virtual machine}
    password: ${10:# The password of the vSphere vCenter or ESXi server}
    port: ${11:# The port number of the vSphere vCenter or ESXi server}
    proxy_host: ${12:# Address of a proxy that will receive all HTTPS requests and relay them}
    proxy_port: ${13:# Port of the HTTP proxy that will receive all HTTPS requests and relay them}
    state: ${14:# vGPU profile state}
    use_instance_uuid: ${15:# Whether to use the VMware instance UUID rather than the BIOS UUID}
    username: ${16:# The username of the vSphere vCenter or ESXi server}
    uuid: ${17:# UUID of the instance to gather facts if known, this is VMware's unique identifier}
    validate_certs: ${18:# Allows connection when SSL certificates are not valid}
    vgpu: ${19:# A supported vGPU profile depending on the GPU model}
  tags:
    - community
    - vmware
    - vmware_guest_vgpu]]></content>
  <tabTrigger>community.vmware.vmware_guest_vgpu</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Modify vGPU video card profile of the specified virtual machine in the given vCenter infrastructure</description>
</snippet>