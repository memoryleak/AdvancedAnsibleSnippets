<snippet>
  <content><![CDATA[- name: ${1:Manage ssl certificate keys}
  community.network.netscaler_ssl_certkey:
    cert: ${2:# Name of and, optionally, path to the X509 certificate file that is used to form the certificate-key pair}
    certkey: ${3:# Name for the certificate and private-key pair}
    expirymonitor: ${4:# Issue an alert when the certificate is about to expire}
    inform: ${5:# Input format of the certificate and the private-key files}
    key: ${6:# Name of and, optionally, path to the private-key file that is used to form the certificate-key pair}
    nitro_pass: ${7:# The password with which to authenticate to the netscaler node}
    nitro_protocol: ${8:# Which protocol to use when accessing the nitro API objects}
    nitro_timeout: ${9:# Time in seconds until a timeout error is thrown when establishing a new session with Netscaler}
    nitro_user: ${10:# The username with which to authenticate to the netscaler node}
    notificationperiod: ${11:# Time, in number of days, before certificate expiration, at which to generate an alert that the certificate is about to expire}
    nsip: ${12:# The ip address of the netscaler appliance where the nitro API calls will be made}
    passplain: ${13:# Pass phrase used to encrypt the private-key}
    password: ${14:# Passphrase that was used to encrypt the private-key}
    save_config: ${15:# If C(yes) the module will save the configuration on the netscaler node if it makes any changes}
    state: ${16:# The state of the resource being configured by the module on the netscaler node}
    validate_certs: ${17:# If C(no), SSL certificates will not be validated}
  tags:
    - community
    - network
    - netscaler_ssl_certkey]]></content>
  <tabTrigger>community.network.netscaler_ssl_certkey</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage ssl certificate keys</description>
</snippet>