<snippet>
  <content><![CDATA[- name: ${1:Manage fabric interface policy leaf breakout port group (infra:BrkoutPortGrp)}
  cisco.aci.aci_interface_policy_leaf_breakout_port_group:
    breakout_port_group: ${2:# Name of the leaf breakout port group to be added/deleted}
    description: ${3:# Description for the leaf breakout port group to be created}
    breakout_map: ${4:# The mapping of breakout port}
    state: ${5:# Use C(present) or C(absent) for adding or removing}
    host: ${6:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${7:# Port number to be used for REST connection}
    username: ${8:# The username to use for authentication}
    password: ${9:# The password to use for authentication}
    private_key: ${10:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${11:# The X}
    output_level: ${12:# Influence the output of this ACI module}
    timeout: ${13:# The socket level timeout in seconds}
    use_proxy: ${14:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${15:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${16:# If C(no), SSL certificates will not be validated}
    output_path: ${17:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${18:# User-defined string for annotating an object}
    owner_key: ${19:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${20:# User-defined string for the ownerTag attribute of an ACI object}
  tags:
    - cisco
    - aci
    - aci_interface_policy_leaf_breakout_port_group]]></content>
  <tabTrigger>cisco.aci.aci_interface_policy_leaf_breakout_port_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage fabric interface policy leaf breakout port group (infra:BrkoutPortGrp)</description>
</snippet>