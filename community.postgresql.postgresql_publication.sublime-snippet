<snippet>
  <content><![CDATA[- name: ${1:Add, update, or remove PostgreSQL publication}
  community.postgresql.postgresql_publication:
    name: ${2:# Name of the publication to add, update, or remove}
    db: ${3:# Name of the database to connect to and where the publication state will be changed}
    tables: ${4:# List of tables to add to the publication}
    state: ${5:# The publication state}
    parameters: ${6:# Dictionary with optional publication parameters}
    owner: ${7:# Publication owner}
    cascade: ${8:# Drop publication dependencies}
    session_role: ${9:# Switch to session_role after connecting}
    trust_input: ${10:# If C(false), check whether values of parameters I(name), I(tables), I(owner), I(session_role), I(params) are potentially dangerous}
    login_user: ${11:# The username this module should use to establish its PostgreSQL session}
    login_password: ${12:# The password this module should use to establish its PostgreSQL session}
    login_host: ${13:# Host running the database}
    login_unix_socket: ${14:# Path to a Unix domain socket for local connections}
    port: ${15:# Database port to connect to}
    ssl_mode: ${16:# Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server}
    ca_cert: ${17:# Specifies the name of a file containing SSL certificate authority (CA) certificate(s)}
    connect_params: ${18:# Any additional parameters to be passed to libpg}
  tags:
    - community
    - postgresql
    - postgresql_publication]]></content>
  <tabTrigger>community.postgresql.postgresql_publication</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Add, update, or remove PostgreSQL publication</description>
</snippet>