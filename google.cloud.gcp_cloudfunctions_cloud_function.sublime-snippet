<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP CloudFunction}
  google.cloud.gcp_cloudfunctions_cloud_function:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    available_memory_mb: ${4:# The amount of memory in MB available for a function}
    description: ${5:# User-provided description of a function}
    entry_point: ${6:# The name of the function (as defined in source code) that will be executed}
    env_type: ${7:# Specifies which Ansible environment you're running this module within}
    environment_variables: ${8:# Environment variables that shall be available during function execution}
    event_trigger: ${9:# An HTTPS endpoint type of source that can be triggered via URL}
    https_trigger: ${10:# An HTTPS endpoint type of source that can be triggered via URL}
    labels: ${11:# A set of key/value label pairs associated with this Cloud Function}
    location: ${12:# The location of this cloud function}
    name: ${13:# A user-defined name of the function}
    project: ${14:# The Google Cloud Platform project to use}
    runtime: ${15:# The runtime in which to run the function}
    scopes: ${16:# Array of scopes to be used}
    service_account_contents: ${17:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${18:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${19:# The path of a Service Account JSON file if serviceaccount is selected as type}
    source_archive_url: ${20:# The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function}
    source_repository: ${21:# The source repository where a function is hosted}
    source_upload_url: ${22:# The Google Cloud Storage signed URL used for source uploading}
    state: ${23:# Whether the given object should exist in GCP}
    timeout: ${24:# The function execution timeout}
    trigger_http: ${25:# Use HTTP to trigger this function}
  tags:
    - google
    - cloud
    - gcp_cloudfunctions_cloud_function]]></content>
  <tabTrigger>google.cloud.gcp_cloudfunctions_cloud_function</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP CloudFunction</description>
</snippet>