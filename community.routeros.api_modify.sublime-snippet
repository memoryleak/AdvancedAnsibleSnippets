<snippet>
  <content><![CDATA[- name: ${1:Modify data at paths with API}
  community.routeros.api_modify:
    ca_path: ${2:# PEM formatted file that contains a CA certificate to be used for certificate validation}
    data: ${3:# Data to ensure that is present for this path}
    encoding: ${4:# Use the specified encoding when communicating with the RouterOS device}
    ensure_order: ${5:# Whether to ensure the same order of the config as present in O(data)}
    force_no_cert: ${6:# Set to V(true) to connect without a certificate when O(tls=true)}
    handle_absent_entries: ${7:# How to handle entries that are present in the current config, but not in O(data)}
    handle_entries_content: ${8:# For a single entry in O(data), this describes how to handle fields that are not mentioned in that entry, but appear in the actual config}
    handle_read_only: ${9:# How to handle values passed in for read-only fields}
    handle_write_only: ${10:# How to handle values passed in for write-only fields}
    hostname: ${11:# RouterOS hostname API}
    password: ${12:# RouterOS user password}
    path: ${13:# Path to query}
    port: ${14:# RouterOS api port}
    restrict: ${15:# Restrict operation to entries matching the following criteria}
    timeout: ${16:# Timeout for the request}
    tls: ${17:# If is set TLS will be used for RouterOS API connection}
    username: ${18:# RouterOS login user}
    validate_cert_hostname: ${19:# Set to V(true) to validate hostnames in certificates}
    validate_certs: ${20:# Set to V(false) to skip validation of TLS certificates}
  tags:
    - community
    - routeros
    - api_modify]]></content>
  <tabTrigger>community.routeros.api_modify</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Modify data at paths with API</description>
</snippet>