<snippet>
  <content><![CDATA[- name: ${1:Manage ESG Tag Selectors (fv:TagSelector)}
  cisco.aci.aci_esg_tag_selector:
    tenant: ${2:# Name of the tenant}
    ap: ${3:# The name of the application profile}
    esg: ${4:# Name of the Endpoint Security Group}
    name: ${5:# ESG Tag Selector Key Name}
    operator: ${6:# C(equals) is the default operator type of the ESG Tag Selector}
    match_value: ${7:# Value filed of the ESG Tag Selector}
    description: ${8:# Description of the ESG Tag Selector}
    state: ${9:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${10:# The alias for the current object}
    host: ${11:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${12:# Port number to be used for REST connection}
    username: ${13:# The username to use for authentication}
    password: ${14:# The password to use for authentication}
    private_key: ${15:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${16:# The X}
    output_level: ${17:# Influence the output of this ACI module}
    timeout: ${18:# The socket level timeout in seconds}
    use_proxy: ${19:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${20:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${21:# If C(no), SSL certificates will not be validated}
    output_path: ${22:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${23:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_esg_tag_selector]]></content>
  <tabTrigger>cisco.aci.aci_esg_tag_selector</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage ESG Tag Selectors (fv:TagSelector)</description>
</snippet>