<snippet>
  <content><![CDATA[- name: ${1:Manage AWS Direct Connect gateway}
  community.aws.directconnect_gateway:
    state: ${2:# Set I(state=present) to ensure a resource is created}
    name: ${3:# Name of the Direct Connect Gateway to be created or deleted}
    amazon_asn: ${4:# The Amazon side ASN}
    direct_connect_gateway_id: ${5:# The ID of an existing Direct Connect Gateway}
    virtual_gateway_id: ${6:# The VPN gateway ID of an existing virtual gateway}
    wait_timeout: ${7:# How long to wait for the association to be deleted}
    access_key: ${8:# AWS access key ID}
    secret_key: ${9:# AWS secret access key}
    session_token: ${10:# AWS STS session token for use with temporary credentials}
    profile: ${11:# A named AWS profile to use for authentication}
    endpoint_url: ${12:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${13:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${14:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${15:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${16:# Use a C(botocore}
    region: ${17:# The AWS region to use}
  tags:
    - community
    - aws
    - directconnect_gateway]]></content>
  <tabTrigger>community.aws.directconnect_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS Direct Connect gateway</description>
</snippet>