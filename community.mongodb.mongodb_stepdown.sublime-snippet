<snippet>
  <content><![CDATA[- name: ${1:Step down the MongoDB node from a PRIMARY state}
  community.mongodb.mongodb_stepdown:
    poll: ${2:# The maximum number of times query for the member status}
    interval: ${3:# The number of seconds to wait between poll executions}
    stepdown_seconds: ${4:# The number of seconds to step down the primary, during which time the stepdown member is ineligible for becoming primary}
    secondary_catch_up: ${5:# The secondaryCatchUpPeriodSecs parameter for the stepDown command}
    force: ${6:# Optional}
    login_user: ${7:# The MongoDB user to login with}
    login_password: ${8:# The password used to authenticate with}
    login_database: ${9:# The database where login credentials are stored}
    login_host: ${10:# The host running MongoDB instance to login to}
    login_port: ${11:# The MongoDB server port to login to}
    strict_compatibility: ${12:# Enforce strict requirements for pymongo and MongoDB software versions}
    ssl: ${13:# Whether to use an SSL connection when connecting to the database}
    ssl_cert_reqs: ${14:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_ca_certs: ${15:# The ssl_ca_certs option takes a path to a CA file}
    ssl_crlfile: ${16:# The ssl_crlfile option takes a path to a CRL file}
    ssl_certfile: ${17:# Present a client certificate using the ssl_certfile option}
    ssl_keyfile: ${18:# Private key for the client certificate}
    ssl_pem_passphrase: ${19:# Passphrase to decrypt encrypted private keys}
    auth_mechanism: ${20:# Authentication type}
    connection_options: ${21:# Additional connection options}
  tags:
    - community
    - mongodb
    - mongodb_stepdown]]></content>
  <tabTrigger>community.mongodb.mongodb_stepdown</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Step down the MongoDB node from a PRIMARY state</description>
</snippet>