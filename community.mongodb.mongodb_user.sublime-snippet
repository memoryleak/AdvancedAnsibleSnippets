<snippet>
  <content><![CDATA[- name: ${1:Adds or removes a user from a MongoDB database}
  community.mongodb.mongodb_user:
    atlas_auth: ${2:# Authentication path intended for MongoDB Atlas Instances}
    auth_mechanism: ${3:# Authentication type}
    connection_options: ${4:# Additional connection options}
    create_for_localhost_exception: ${5:# This is parmeter is only useful for handling special treatment around the localhost exception}
    database: ${6:# The name of the database to add/remove the user from}
    login_database: ${7:# The database where login credentials are stored}
    login_host: ${8:# The host running MongoDB instance to login to}
    login_password: ${9:# The password used to authenticate with}
    login_port: ${10:# The MongoDB server port to login to}
    login_user: ${11:# The MongoDB user to login with}
    name: ${12:# The name of the user to add or remove}
    password: ${13:# The password to use for the user}
    replica_set: ${14:# Replica set to connect to (automatically connects to primary for writes)}
    roles: ${15:# The database user roles valid values could either be one or more of the following strings: 'read', 'readWrite', 'dbAdmin', 'userAdmin', 'clusterAdmin', 'readAnyDatabase', 'readWriteAnyDatabase', 'userAdminAnyDatabase', 'dbAdminAnyDatabase'}
    ssl: ${16:# Whether to use an SSL connection when connecting to the database}
    ssl_ca_certs: ${17:# The ssl_ca_certs option takes a path to a CA file}
    ssl_cert_reqs: ${18:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_certfile: ${19:# Present a client certificate using the ssl_certfile option}
    ssl_crlfile: ${20:# The ssl_crlfile option takes a path to a CRL file}
    ssl_keyfile: ${21:# Private key for the client certificate}
    ssl_pem_passphrase: ${22:# Passphrase to decrypt encrypted private keys}
    state: ${23:# The database user state}
    strict_compatibility: ${24:# Enforce strict requirements for pymongo and MongoDB software versions}
    update_password: ${25:# C(always) will always update passwords and cause the module to return changed}
  tags:
    - community
    - mongodb
    - mongodb_user]]></content>
  <tabTrigger>community.mongodb.mongodb_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Adds or removes a user from a MongoDB database</description>
</snippet>