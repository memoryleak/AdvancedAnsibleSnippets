<snippet>
  <content><![CDATA[- name: ${1:Manage RDS instances}
  amazon.aws.rds_instance:
    access_key: ${2:# AWS access key ID}
    allocated_storage: ${3:# The amount of storage (in gibibytes) to allocate for the DB instance}
    allow_major_version_upgrade: ${4:# Whether to allow major version upgrades}
    apply_immediately: ${5:# A value that specifies whether modifying an instance with I(new_db_instance_identifier) and I(master_user_password) should be applied as soon as possible, regardless of the I(preferred_maintenance_window) setting}
    auto_minor_version_upgrade: ${6:# Whether minor version upgrades are applied automatically to the DB instance during the maintenance window}
    availability_zone: ${7:# A list of EC2 Availability Zones that the DB instance can be created in}
    aws_ca_bundle: ${8:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${9:# A dictionary to modify the botocore configuration}
    backup_retention_period: ${10:# The number of days for which automated backups are retained}
    ca_certificate_identifier: ${11:# The identifier of the CA certificate for the DB instance}
    character_set_name: ${12:# The character set to associate with the DB instance}
    copy_tags_to_snapshot: ${13:# Whether or not to copy all tags from the DB instance to snapshots of the instance}
    creation_source: ${14:# Which source to use if restoring from a template (an existing instance, S3 bucket, or snapshot)}
    db_cluster_identifier: ${15:# The DB cluster (lowercase) identifier to add the aurora DB instance to}
    db_instance_class: ${16:# The compute and memory capacity of the DB instance, for example db}
    db_instance_identifier: ${17:# The DB instance (lowercase) identifier}
    db_name: ${18:# The name for your database}
    db_parameter_group_name: ${19:# The name of the DB parameter group to associate with this DB instance}
    db_security_groups: ${20:# (EC2-Classic platform) A list of DB security groups to associate with this DB instance}
    db_snapshot_identifier: ${21:# The identifier or ARN of the DB snapshot to restore from when using I(creation_source=snapshot)}
    db_subnet_group_name: ${22:# The DB subnet group name to use for the DB instance}
    debug_botocore_endpoint_logs: ${23:# Use a C(botocore}
    deletion_protection: ${24:# A value that indicates whether the DB instance has deletion protection enabled}
    domain: ${25:# The Active Directory Domain to restore the instance in}
    domain_iam_role_name: ${26:# The name of the IAM role to be used when making API calls to the Directory Service}
    enable_cloudwatch_logs_exports: ${27:# A list of log types that need to be enabled for exporting to CloudWatch Logs}
    enable_iam_database_authentication: ${28:# Enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts}
    enable_performance_insights: ${29:# Whether to enable Performance Insights for the DB instance}
    endpoint_url: ${30:# URL to connect to instead of the default AWS endpoints}
    engine: ${31:# The name of the database engine to be used for this DB instance}
    engine_version: ${32:# The version number of the database engine to use}
    final_db_snapshot_identifier: ${33:# The DB instance snapshot identifier of the new DB instance snapshot created when I(skip_final_snapshot) is C(false)}
    force_failover: ${34:# Set to C(true) to conduct the reboot through a MultiAZ failover}
    force_update_password: ${35:# Set to C(true) to update your instance password with I(master_user_password)}
    iam_roles: ${36:# List of Amazon Web Services Identity and Access Management (IAM) roles to associate with DB instance}
    iops: ${37:# The Provisioned IOPS (I/O operations per second) value}
    kms_key_id: ${38:# The ARN of the AWS KMS key identifier for an encrypted DB instance}
    license_model: ${39:# The license model for the DB instance}
    master_user_password: ${40:# An 8-41 character password for the master database user}
    master_username: ${41:# The name of the master user for the DB instance}
    max_allocated_storage: ${42:# The upper limit to which Amazon RDS can automatically scale the storage of the DB instance}
    monitoring_interval: ${43:# The interval, in seconds, when Enhanced Monitoring metrics are collected for the DB instance}
    monitoring_role_arn: ${44:# The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs}
    multi_az: ${45:# Specifies if the DB instance is a Multi-AZ deployment}
    new_db_instance_identifier: ${46:# The new DB instance (lowercase) identifier for the DB instance when renaming a DB instance}
    option_group_name: ${47:# The option group to associate with the DB instance}
    performance_insights_kms_key_id: ${48:# The AWS KMS key identifier (ARN, name, or alias) for encryption of Performance Insights data}
    performance_insights_retention_period: ${49:# The amount of time, in days, to retain Performance Insights data}
    port: ${50:# The port number on which the instances accept connections}
    preferred_backup_window: ${51:# The daily time range (in UTC) of at least 30 minutes, during which automated backups are created if automated backups are enabled using I(backup_retention_period)}
    preferred_maintenance_window: ${52:# The weekly time range (in UTC) of at least 30 minutes, during which system maintenance can occur}
    processor_features: ${53:# A dictionary of Name, Value pairs to indicate the number of CPU cores and the number of threads per core for the DB instance class of the DB instance}
    profile: ${54:# A named AWS profile to use for authentication}
    promotion_tier: ${55:# An integer that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance}
    publicly_accessible: ${56:# Specifies the accessibility options for the DB instance}
    purge_cloudwatch_logs_exports: ${57:# Set to C(false) to retain any enabled cloudwatch logs that aren't specified in the task and are associated with the instance}
    purge_iam_roles: ${58:# Set to C(true) to remove any IAM roles that aren't specified in the task and are associated with the instance}
    purge_security_groups: ${59:# Set to C(false) to retain any enabled security groups that aren't specified in the task and are associated with the instance}
    purge_tags: ${60:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
    read_replica: ${61:# Set to C(false) to promote a read replica instance or C(true) to create one}
    region: ${62:# The AWS region to use}
    restore_time: ${63:# If using I(creation_source=instance) this indicates the UTC date and time to restore from the source instance}
    s3_bucket_name: ${64:# The name of the Amazon S3 bucket that contains the data used to create the Amazon DB instance}
    s3_ingestion_role_arn: ${65:# The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf}
    s3_prefix: ${66:# The prefix for all of the file names that contain the data used to create the Amazon DB instance}
    secret_key: ${67:# AWS secret access key}
    session_token: ${68:# AWS STS session token for use with temporary credentials}
    skip_final_snapshot: ${69:# Whether a final DB instance snapshot is created before the DB instance is deleted}
    source_db_instance_identifier: ${70:# The identifier or ARN of the source DB instance from which to restore when creating a read replica or spinning up a point-in-time DB instance using I(creation_source=instance)}
    source_engine: ${71:# The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket}
    source_engine_version: ${72:# The version of the database that the backup files were created from}
    source_region: ${73:# The region of the DB instance from which the replica is created}
    state: ${74:# Desired state of the RDS Instance}
    storage_encrypted: ${75:# Whether the DB instance is encrypted}
    storage_throughput: ${76:# The storage throughput when the I(storage_type) is C(gp3)}
    storage_type: ${77:# The storage type to be associated with the DB instance}
    tags: ${78:# A dictionary representing the tags to be applied to the resource}
    tde_credential_arn: ${79:# The ARN from the key store with which to associate the instance for Transparent Data Encryption}
    tde_credential_password: ${80:# The password for the given ARN from the key store in order to access the device}
    timezone: ${81:# The time zone of the DB instance}
    use_latest_restorable_time: ${82:# Whether to restore the DB instance to the latest restorable backup time}
    validate_certs: ${83:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    vpc_security_group_ids: ${84:# A list of EC2 VPC security groups to associate with the DB instance}
    wait: ${85:# Whether to wait for the instance to be available, stopped, or deleted}
  tags:
    - amazon
    - aws
    - rds_instance]]></content>
  <tabTrigger>amazon.aws.rds_instance</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage RDS instances</description>
</snippet>