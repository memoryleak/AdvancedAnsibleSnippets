<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP manage Snapshots}
  netapp.ontap.na_ontap_snapshot:
    async_bool: ${2:# If true, the snapshot is to be created asynchronously}
    cert_filepath: ${3:# path to SSL client cert file (}
    comment: ${4:# A human readable comment attached with the snapshot}
    expiry_time: ${5:# Snapshot expire time, only available with REST}
    feature_flags: ${6:# Enable or disable a new feature}
    force_ontap_version: ${7:# Override the cluster ONTAP version when using REST}
    from_name: ${8:# Name of the existing snapshot to be renamed to}
    hostname: ${9:# The hostname or IP address of the ONTAP instance}
    http_port: ${10:# Override the default port (80 or 443) with this port}
    https: ${11:# Enable and disable https}
    ignore_owners: ${12:# if this field is true, snapshot will be deleted even if some other processes are accessing it}
    key_filepath: ${13:# path to SSL client key file}
    ontapi: ${14:# The ontap api version to use}
    password: ${15:# Password for the specified user}
    snapmirror_label: ${16:# A human readable SnapMirror Label attached with the snapshot}
    snapshot: ${17:# Name of the snapshot to be managed}
    snapshot_instance_uuid: ${18:# The 128 bit unique snapshot identifier expressed in the form of UUID}
    state: ${19:# If you want to create/modify a snapshot, or delete it}
    use_rest: ${20:# Whether to use REST or ZAPI}
    username: ${21:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${22:# If set to C(no), the SSL certificates will not be validated}
    volume: ${23:# Name of the volume on which the snapshot is to be created}
    vserver: ${24:# The Vserver name}
  tags:
    - netapp
    - ontap
    - na_ontap_snapshot]]></content>
  <tabTrigger>netapp.ontap.na_ontap_snapshot</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP manage Snapshots</description>
</snippet>