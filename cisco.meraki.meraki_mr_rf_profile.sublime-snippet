<snippet>
  <content><![CDATA[- name: ${1:Manage RF profiles for Meraki wireless networks}
  cisco.meraki.meraki_mr_rf_profile:
    ap_band_settings: ${2:# Settings that will be enabled if selectionType is set to 'ap'}
    auth_key: ${3:# Authentication key provided by the dashboard}
    band_selection_type: ${4:# Sets whether band selection is assigned per access point or SSID}
    client_balancing_enabled: ${5:# Steers client to best available access point}
    five_ghz_settings: ${6:# Settings related to 5Ghz band}
    host: ${7:# Hostname for Meraki dashboard}
    internal_error_retry_time: ${8:# Number of seconds to retry if server returns an internal server error}
    min_bitrate_type: ${9:# Type of minimum bitrate}
    name: ${10:# The unique name of the new profile}
    net_id: ${11:# ID of network}
    net_name: ${12:# Name of network}
    org_id: ${13:# ID of organization}
    org_name: ${14:# Name of organization}
    output_format: ${15:# Instructs module whether response keys should be snake case (ex}
    output_level: ${16:# Set amount of debug output during module execution}
    profile_id: ${17:# Unique identifier of existing RF profile}
    rate_limit_retry_time: ${18:# Number of seconds to retry if rate limiter is triggered}
    state: ${19:# Query, edit, or delete wireless RF profile settings}
    timeout: ${20:# Time to timeout for HTTP requests}
    two_four_ghz_settings: ${21:# Settings related to 2}
    use_https: ${22:# If C(no), it will use HTTP}
    use_proxy: ${23:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    validate_certs: ${24:# Whether to validate HTTP certificates}
  tags:
    - cisco
    - meraki
    - meraki_mr_rf_profile]]></content>
  <tabTrigger>cisco.meraki.meraki_mr_rf_profile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage RF profiles for Meraki wireless networks</description>
</snippet>