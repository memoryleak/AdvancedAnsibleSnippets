<snippet>
  <content><![CDATA[- name: ${1:Manage Fabric Node Members (fabric:NodeIdentP)}
  cisco.aci.aci_fabric_node:
    pod_id: ${2:# The pod id of the new Fabric Node Member}
    serial: ${3:# Serial Number for the new Fabric Node Member}
    node_id: ${4:# Node ID Number for the new Fabric Node Member}
    switch: ${5:# Switch Name for the new Fabric Node Member}
    description: ${6:# Description for the new Fabric Node Member}
    role: ${7:# Role for the new Fabric Node Member}
    state: ${8:# Use C(present) or C(absent) for adding or removing}
    name_alias: ${9:# The alias for the current object}
    host: ${10:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${11:# Port number to be used for REST connection}
    username: ${12:# The username to use for authentication}
    password: ${13:# The password to use for authentication}
    private_key: ${14:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${15:# The X}
    output_level: ${16:# Influence the output of this ACI module}
    timeout: ${17:# The socket level timeout in seconds}
    use_proxy: ${18:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${19:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${20:# If C(no), SSL certificates will not be validated}
    output_path: ${21:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    annotation: ${22:# User-defined string for annotating an object}
  tags:
    - cisco
    - aci
    - aci_fabric_node]]></content>
  <tabTrigger>cisco.aci.aci_fabric_node</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Fabric Node Members (fabric:NodeIdentP)</description>
</snippet>