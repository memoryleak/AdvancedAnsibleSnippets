<snippet>
  <content><![CDATA[- name: ${1:Manage application password}
  azure.azcollection.azure_rm_adpassword:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    api_profile: ${4:# Selects an API profile to use when communicating with Azure services}
    app_id: ${5:# The application ID}
    app_object_id: ${6:# The application object ID}
    auth_source: ${7:# Controls the source of the credentials to use for authentication}
    cert_validation_mode: ${8:# Controls the certificate validation behavior for Azure endpoints}
    client_id: ${9:# Azure client ID}
    cloud_environment: ${10:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    end_date: ${11:# Date or datemtime after which credentials expire}
    key_id: ${12:# The password key ID}
    log_mode: ${13:# Parent argument}
    log_path: ${14:# Parent argument}
    password: ${15:# Active Directory user password}
    profile: ${16:# Security profile found in ~/}
    secret: ${17:# Azure client secret}
    service_principal_object_id: ${18:# The service principal object ID}
    state: ${19:# Assert the state of Active Dirctory Password}
    subscription_id: ${20:# Your Azure subscription Id}
    tenant: ${21:# The tenant ID}
    thumbprint: ${22:# The thumbprint of the private key specified in I(x509_certificate_path)}
    value: ${23:# The application password value}
    x509_certificate_path: ${24:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_adpassword]]></content>
  <tabTrigger>azure.azcollection.azure_rm_adpassword</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage application password</description>
</snippet>