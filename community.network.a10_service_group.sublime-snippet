<snippet>
  <content><![CDATA[- name: ${1:Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' service groups}
  community.network.a10_service_group:
    state: ${2:# If the specified service group should exists}
    partition: ${3:# set active-partition}
    service_group: ${4:# The SLB (Server Load Balancing) service-group name}
    service_group_protocol: ${5:# The SLB service-group protocol of TCP or UDP}
    service_group_method: ${6:# The SLB service-group load balancing method, such as round-robin or weighted-rr}
    servers: ${7:# A list of servers to add to the service group}
    validate_certs: ${8:# If C(no), SSL certificates will not be validated}
    host: ${9:# Hostname or IP of the A10 Networks device}
    username: ${10:# An account with administrator privileges}
    password: ${11:# Password for the C(username) account}
    write_config: ${12:# If C(yes), any changes will cause a write of the running configuration to non-volatile memory}
    url: ${13:# HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host}
    force: ${14:# If C(yes) do not get a cached copy}
    http_agent: ${15:# Header to identify as, generally appears in web server logs}
    use_proxy: ${16:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    url_username: ${17:# The username for use in HTTP basic authentication}
    url_password: ${18:# The password for use in HTTP basic authentication}
    force_basic_auth: ${19:# Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header}
    client_cert: ${20:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${21:# PEM formatted file that contains your private key to be used for SSL client authentication}
    use_gssapi: ${22:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
  tags:
    - community
    - network
    - a10_service_group]]></content>
  <tabTrigger>community.network.a10_service_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' service groups</description>
</snippet>