<snippet>
  <content><![CDATA[- name: ${1:Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' service groups}
  community.network.a10_service_group:
    client_cert: ${2:# PEM formatted certificate chain file to be used for SSL client authentication}
    client_key: ${3:# PEM formatted file that contains your private key to be used for SSL client authentication}
    force: ${4:# If V(yes) do not get a cached copy}
    force_basic_auth: ${5:# Credentials specified with O(url_username) and O(url_password) should be passed in HTTP Header}
    host: ${6:# Hostname or IP of the A10 Networks device}
    http_agent: ${7:# Header to identify as, generally appears in web server logs}
    partition: ${8:# set active-partition}
    password: ${9:# Password for the C(username) account}
    servers: ${10:# A list of servers to add to the service group}
    service_group: ${11:# The SLB (Server Load Balancing) service-group name}
    service_group_method: ${12:# The SLB service-group load balancing method, such as round-robin or weighted-rr}
    service_group_protocol: ${13:# The SLB service-group protocol of TCP or UDP}
    state: ${14:# If the specified service group should exists}
    url: ${15:# HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host}
    url_password: ${16:# The password for use in HTTP basic authentication}
    url_username: ${17:# The username for use in HTTP basic authentication}
    use_gssapi: ${18:# Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication}
    use_proxy: ${19:# If V(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    username: ${20:# An account with administrator privileges}
    validate_certs: ${21:# If C(no), SSL certificates will not be validated}
    write_config: ${22:# If C(yes), any changes will cause a write of the running configuration to non-volatile memory}
  tags:
    - community
    - network
    - a10_service_group]]></content>
  <tabTrigger>community.network.a10_service_group</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage A10 Networks AX/SoftAX/Thunder/vThunder devices&#39; service groups</description>
</snippet>