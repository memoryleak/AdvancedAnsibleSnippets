<snippet>
  <content><![CDATA[- name: ${1:Run commands in a VMware guest operating system}
  community.vmware.vmware_vm_shell:
    cluster: ${2:# The cluster hosting the virtual machine}
    datacenter: ${3:# The datacenter hosting the virtual machine}
    folder: ${4:# Destination folder, absolute or relative path to find an existing guest or create the new guest}
    hostname: ${5:# The hostname or IP address of the vSphere vCenter or ESXi server}
    password: ${6:# The password of the vSphere vCenter or ESXi server}
    port: ${7:# The port number of the vSphere vCenter or ESXi server}
    proxy_host: ${8:# Address of a proxy that will receive all HTTPS requests and relay them}
    proxy_port: ${9:# Port of the HTTP proxy that will receive all HTTPS requests and relay them}
    timeout: ${10:# Timeout in seconds}
    username: ${11:# The username of the vSphere vCenter or ESXi server}
    validate_certs: ${12:# Allows connection when SSL certificates are not valid}
    vm_id: ${13:# Name of the virtual machine to work with}
    vm_id_type: ${14:# The VMware identification method by which the virtual machine will be identified}
    vm_password: ${15:# The password used to login-in to the virtual machine}
    vm_shell: ${16:# The absolute path to the program to start}
    vm_shell_args: ${17:# The argument to the program}
    vm_shell_cwd: ${18:# The current working directory of the application from which it will be run}
    vm_shell_env: ${19:# Comma separated list of environment variable, specified in the guest OS notation}
    vm_username: ${20:# The user to login-in to the virtual machine}
    wait_for_process: ${21:# If set to V(true), module will wait for process to complete in the given virtual machine}
  tags:
    - community
    - vmware
    - vmware_vm_shell]]></content>
  <tabTrigger>community.vmware.vmware_vm_shell</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Run commands in a VMware guest operating system</description>
</snippet>