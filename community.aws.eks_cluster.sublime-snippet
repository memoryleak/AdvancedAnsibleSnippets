<snippet>
  <content><![CDATA[- name: ${1:Manage Elastic Kubernetes Service (EKS) Clusters}
  community.aws.eks_cluster:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    endpoint_url: ${6:# URL to connect to instead of the default AWS endpoints}
    name: ${7:# Name of the EKS cluster}
    profile: ${8:# A named AWS profile to use for authentication}
    region: ${9:# The AWS region to use}
    role_arn: ${10:# ARN of IAM role used by the EKS cluster}
    secret_key: ${11:# AWS secret access key}
    security_groups: ${12:# List of security group names or IDs}
    session_token: ${13:# AWS STS session token for use with temporary credentials}
    state: ${14:# Desired state of the EKS cluster}
    subnets: ${15:# List of subnet IDs for the Kubernetes cluster}
    tags: ${16:# A dictionary of tags to add the EKS cluster}
    validate_certs: ${17:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    version: ${18:# Kubernetes version}
    wait: ${19:# Specifies whether the module waits until the cluster is active or deleted before moving on}
    wait_timeout: ${20:# The duration in seconds to wait for the cluster to become active}
  tags:
    - community
    - aws
    - eks_cluster]]></content>
  <tabTrigger>community.aws.eks_cluster</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Elastic Kubernetes Service (EKS) Clusters</description>
</snippet>