<snippet>
  <content><![CDATA[- name: ${1:Plan info}
  fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo:
    access_token: ${2:# The token to access FortiManager without using username and password}
    adom: ${3:# The parameter (adom) in requested url}
    aoc-list: ${4:# Deprecated, please use 'aoc_list'}
    aoc_list: ${5:# The parameter (aoc-list) in requested url}
    bypass_validation: ${6:# Only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters}
    enable_log: ${7:# Enable/Disable logging for task}
    forticloud_access_token: ${8:# Authenticate Ansible client with forticloud API access token}
    h2qp-advice-of-charge: ${9:# Deprecated, please use 'h2qp_advice_of_charge'}
    h2qp_advice_of_charge: ${10:# The parameter (h2qp-advice-of-charge) in requested url}
    hotspot20_h2qpadviceofcharge_aoclist_planinfo: ${11:# The top level parameters set}
    proposed_method: ${12:# The overridden method for the underlying Json RPC request}
    rc_failed: ${13:# The rc codes list with which the conditions to fail will be overriden}
    rc_succeeded: ${14:# The rc codes list with which the conditions to succeed will be overriden}
    state: ${15:# The directive to create, update or delete an object}
    workspace_locking_adom: ${16:# The adom to lock for FortiManager running in workspace mode, the value can be global and others including root}
    workspace_locking_timeout: ${17:# The maximum time in seconds to wait for other user to release the workspace lock}
  tags:
    - fortinet
    - fortimanager
    - fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo]]></content>
  <tabTrigger>fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Plan info</description>
</snippet>