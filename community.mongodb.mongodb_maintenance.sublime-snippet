<snippet>
  <content><![CDATA[- name: ${1:Enables or disables maintenance mode for a secondary member}
  community.mongodb.mongodb_maintenance:
    atlas_auth: ${2:# Authentication path intended for MongoDB Atlas Instances}
    auth_mechanism: ${3:# Authentication type}
    connection_options: ${4:# Additional connection options}
    login_database: ${5:# The database where login credentials are stored}
    login_host: ${6:# The host running MongoDB instance to login to}
    login_password: ${7:# The password used to authenticate with}
    login_port: ${8:# The MongoDB server port to login to}
    login_user: ${9:# The MongoDB user to login with}
    maintenance: ${10:# Enable or disable maintenance mode}
    ssl: ${11:# Whether to use an SSL connection when connecting to the database}
    ssl_ca_certs: ${12:# The ssl_ca_certs option takes a path to a CA file}
    ssl_cert_reqs: ${13:# Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided}
    ssl_certfile: ${14:# Present a client certificate using the ssl_certfile option}
    ssl_crlfile: ${15:# The ssl_crlfile option takes a path to a CRL file}
    ssl_keyfile: ${16:# Private key for the client certificate}
    ssl_pem_passphrase: ${17:# Passphrase to decrypt encrypted private keys}
    strict_compatibility: ${18:# Enforce strict requirements for pymongo and MongoDB software versions}
  tags:
    - community
    - mongodb
    - mongodb_maintenance]]></content>
  <tabTrigger>community.mongodb.mongodb_maintenance</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Enables or disables maintenance mode for a secondary member</description>
</snippet>