<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP - Create, delete or modify an FPolicy policy}
  netapp.ontap.na_ontap_fpolicy_policy:
    allow_privileged_access: ${2:# Specifies if privileged access should be given to FPolicy servers registered for the policy}
    cert_filepath: ${3:# path to SSL client cert file (}
    engine: ${4:# Name of the Engine}
    events: ${5:# Events for file access monitoring}
    feature_flags: ${6:# Enable or disable a new feature}
    force_ontap_version: ${7:# Override the cluster ONTAP version when using REST}
    hostname: ${8:# The hostname or IP address of the ONTAP instance}
    http_port: ${9:# Override the default port (80 or 443) with this port}
    https: ${10:# Enable and disable https}
    is_mandatory: ${11:# Specifies the action to take on a file access event in the case when all primary and secondary servers are down or no response is received from the}
    is_passthrough_read_enabled: ${12:# Specifies if passthrough-read should be allowed to FPolicy servers registered for the policy}
    key_filepath: ${13:# path to SSL client key file}
    name: ${14:# Name of the policy}
    ontapi: ${15:# The ontap api version to use}
    password: ${16:# Password for the specified user}
    privileged_user_name: ${17:# User name for privileged access}
    state: ${18:# Whether the fPolicy policy should exist or not}
    use_rest: ${19:# Whether to use REST or ZAPI}
    username: ${20:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${21:# If set to C(no), the SSL certificates will not be validated}
    vserver: ${22:# the name of the vserver to create the policy on}
  tags:
    - netapp
    - ontap
    - na_ontap_fpolicy_policy]]></content>
  <tabTrigger>netapp.ontap.na_ontap_fpolicy_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP - Create, delete or modify an FPolicy policy</description>
</snippet>