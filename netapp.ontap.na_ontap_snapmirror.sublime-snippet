<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP or ElementSW Manage SnapMirror}
  netapp.ontap.na_ontap_snapmirror:
    cert_filepath: ${2:# path to SSL client cert file (}
    clean_up_failure: ${3:# An optional parameter to recover from an aborted or failed restore operation}
    connection_type: ${4:# Type of SnapMirror relationship}
    create_destination: ${5:# Requires ONTAP 9}
    destination_cluster: ${6:# Requires ONTAP 9}
    destination_endpoint: ${7:# destination endpoint of a SnapMirror relationship}
    destination_path: ${8:# Specifies the destination endpoint of the SnapMirror relationship}
    destination_volume: ${9:# Specifies the name of the destination volume for the SnapMirror}
    destination_vserver: ${10:# Name of the destination vserver for the SnapMirror}
    feature_flags: ${11:# Enable or disable a new feature}
    force_ontap_version: ${12:# Override the cluster ONTAP version when using REST}
    hostname: ${13:# The hostname or IP address of the ONTAP instance}
    http_port: ${14:# Override the default port (80 or 443) with this port}
    https: ${15:# Enable and disable https}
    identity_preservation: ${16:# Specifies which configuration of the source SVM is replicated to the destination SVM}
    identity_preserve: ${17:# Specifies whether or not the identity of the source Vserver is replicated to the destination Vserver}
    initialize: ${18:# Specifies whether to initialize SnapMirror relation}
    key_filepath: ${19:# path to SSL client key file}
    max_transfer_rate: ${20:# Specifies the upper bound, in kilobytes per second, at which data is transferred}
    ontapi: ${21:# The ontap api version to use}
    password: ${22:# Password for the specified user}
    peer_options: ${23:# IP address and connection options for the peer system}
    policy: ${24:# Specify the name of the SnapMirror policy that applies to this relationship}
    relationship_info_only: ${25:# If relationship-info-only is set to true then only relationship information is removed}
    relationship_state: ${26:# Specifies whether to break SnapMirror relation or establish a SnapMirror relationship}
    relationship_type: ${27:# Specify the type of SnapMirror relationship}
    schedule: ${28:# Specify the name of the current schedule, which is used to update the SnapMirror relationship}
    source_cluster: ${29:# Requires ONTAP 9}
    source_endpoint: ${30:# source endpoint of a SnapMirror relationship}
    source_hostname: ${31:# DEPRECATED - please use C(peer_options)}
    source_password: ${32:# DEPRECATED - please use C(peer_options)}
    source_path: ${33:# Specifies the source endpoint of the SnapMirror relationship}
    source_snapshot: ${34:# Specifies the Snapshot from the source to be restored}
    source_username: ${35:# DEPRECATED - please use C(peer_options)}
    source_volume: ${36:# Specifies the name of the source volume for the SnapMirror}
    source_vserver: ${37:# Name of the source vserver for the SnapMirror}
    state: ${38:# Whether the specified relationship should exist or not}
    transferring_time_out: ${39:# How long to wait when a transfer is in progress (after initializing for instance)}
    update: ${40:# Specifies whether to update the destination endpoint of the SnapMirror relationship only if the relationship is already present and active}
    use_rest: ${41:# Whether to use REST or ZAPI}
    username: ${42:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${43:# If set to C(no), the SSL certificates will not be validated}
    validate_source_path: ${44:# The relationship is found based on the destination as it is unique}
  tags:
    - netapp
    - ontap
    - na_ontap_snapmirror]]></content>
  <tabTrigger>netapp.ontap.na_ontap_snapmirror</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP or ElementSW Manage SnapMirror</description>
</snippet>