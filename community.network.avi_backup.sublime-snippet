<snippet>
  <content><![CDATA[- name: ${1:Module for setup of Backup Avi RESTful Object}
  community.network.avi_backup:
    api_context: ${2:# Avi API context that includes current session ID and CSRF Token}
    api_version: ${3:# Avi API version of to use for Avi API and objects}
    avi_api_patch_op: ${4:# Patch operation to use when using avi_api_update_method as patch}
    avi_api_update_method: ${5:# Default method for object update is HTTP PUT}
    avi_credentials: ${6:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    avi_disable_session_cache_as_fact: ${7:# It disables avi session information to be cached as a fact}
    backup_config_ref: ${8:# Backupconfiguration information}
    controller: ${9:# IP address or hostname of the controller}
    file_name: ${10:# The file name of backup}
    local_file_url: ${11:# Url to download the backup file}
    password: ${12:# Password of Avi user in Avi controller}
    remote_file_url: ${13:# Url to download the backup file}
    scheduler_ref: ${14:# Scheduler information}
    state: ${15:# The state that should be applied on the entity}
    tenant: ${16:# Name of tenant used for all Avi API calls and context of object}
    tenant_ref: ${17:# It is a reference to an object of type tenant}
    tenant_uuid: ${18:# UUID of tenant used for all Avi API calls and context of object}
    timestamp: ${19:# Unix timestamp of when the backup file is created}
    url: ${20:# Avi controller URL of the object}
    username: ${21:# Username used for accessing Avi controller}
    uuid: ${22:# Unique object identifier of the object}
  tags:
    - community
    - network
    - avi_backup]]></content>
  <tabTrigger>community.network.avi_backup</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module for setup of Backup Avi RESTful Object</description>
</snippet>