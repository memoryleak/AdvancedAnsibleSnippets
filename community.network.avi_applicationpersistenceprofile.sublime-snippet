<snippet>
  <content><![CDATA[- name: ${1:Module for setup of ApplicationPersistenceProfile Avi RESTful Object}
  community.network.avi_applicationpersistenceprofile:
    state: ${2:# The state that should be applied on the entity}
    avi_api_update_method: ${3:# Default method for object update is HTTP PUT}
    avi_api_patch_op: ${4:# Patch operation to use when using avi_api_update_method as patch}
    app_cookie_persistence_profile: ${5:# Specifies the application cookie persistence profile parameters}
    description: ${6:# User defined description for the object}
    hdr_persistence_profile: ${7:# Specifies the custom http header persistence profile parameters}
    http_cookie_persistence_profile: ${8:# Specifies the http cookie persistence profile parameters}
    ip_persistence_profile: ${9:# Specifies the client ip persistence profile parameters}
    is_federated: ${10:# This field describes the object's replication scope}
    name: ${11:# A user-friendly name for the persistence profile}
    persistence_type: ${12:# Method used to persist clients to the same server for a duration of time or a session}
    server_hm_down_recovery: ${13:# Specifies behavior when a persistent server has been marked down by a health monitor}
    tenant_ref: ${14:# It is a reference to an object of type tenant}
    url: ${15:# Avi controller URL of the object}
    uuid: ${16:# Uuid of the persistence profile}
    controller: ${17:# IP address or hostname of the controller}
    username: ${18:# Username used for accessing Avi controller}
    password: ${19:# Password of Avi user in Avi controller}
    tenant: ${20:# Name of tenant used for all Avi API calls and context of object}
    tenant_uuid: ${21:# UUID of tenant used for all Avi API calls and context of object}
    api_version: ${22:# Avi API version of to use for Avi API and objects}
    avi_credentials: ${23:# Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details}
    api_context: ${24:# Avi API context that includes current session ID and CSRF Token}
    avi_disable_session_cache_as_fact: ${25:# It disables avi session information to be cached as a fact}
  tags:
    - community
    - network
    - avi_applicationpersistenceprofile]]></content>
  <tabTrigger>community.network.avi_applicationpersistenceprofile</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Module for setup of ApplicationPersistenceProfile Avi RESTful Object</description>
</snippet>