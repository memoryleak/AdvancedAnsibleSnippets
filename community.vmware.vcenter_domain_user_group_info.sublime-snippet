<snippet>
  <content><![CDATA[- name: ${1:Gather user or group information of a domain}
  community.vmware.vcenter_domain_user_group_info:
    domain: ${2:# The I(domain) to be specified searching}
    search_string: ${3:# The I(search_string) is a string to be specified searching}
    belongs_to_group: ${4:# If a group existing, returned contains only users or groups that directly belong to the specified group}
    belongs_to_user: ${5:# If a user existing, returned contains only groups that directly contain the specified user}
    exact_match: ${6:# If I(exact_match) is C(True), it indicates the I(search_string) passed should match a user or group name exactly}
    find_users: ${7:# If I(find_users) is C(True), domain users will be included in the result}
    find_groups: ${8:# If I(find_groups) is C(True), domain groups will be included in the result}
    hostname: ${9:# The hostname or IP address of the vSphere vCenter or ESXi server}
    username: ${10:# The username of the vSphere vCenter or ESXi server}
    password: ${11:# The password of the vSphere vCenter or ESXi server}
    validate_certs: ${12:# Allows connection when SSL certificates are not valid}
    port: ${13:# The port number of the vSphere vCenter or ESXi server}
    proxy_host: ${14:# Address of a proxy that will receive all HTTPS requests and relay them}
    proxy_port: ${15:# Port of the HTTP proxy that will receive all HTTPS requests and relay them}
  tags:
    - community
    - vmware
    - vcenter_domain_user_group_info]]></content>
  <tabTrigger>community.vmware.vcenter_domain_user_group_info</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Gather user or group information of a domain</description>
</snippet>