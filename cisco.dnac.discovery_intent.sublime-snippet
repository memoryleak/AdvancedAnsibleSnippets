<snippet>
  <content><![CDATA[- name: ${1:A resource module for handling device discovery tasks}
  cisco.dnac.discovery_intent:
    config: ${2:# List of details of device being managed}
    config_verify: ${3:# Set to True to verify the Cisco Catalyst Center config after applying the playbook config}
    dnac_api_task_timeout: ${4:# Defines the timeout in seconds for API calls to retrieve task details}
    dnac_debug: ${5:# Flag for Cisco DNA Center SDK to enable debugging}
    dnac_host: ${6:# The Cisco DNA Center hostname}
    dnac_log: ${7:# Flag to enable/disable playbook execution logging}
    dnac_log_append: ${8:# Determines the mode of the file}
    dnac_log_file_path: ${9:# Governs logging}
    dnac_log_level: ${10:# Sets the threshold for log level}
    dnac_password: ${11:# The Cisco DNA Center password to authenticate}
    dnac_port: ${12:# The Cisco DNA Center port}
    dnac_task_poll_interval: ${13:# Specifies the interval in seconds between successive calls to the API to retrieve task details}
    dnac_username: ${14:# The Cisco DNA Center username to authenticate}
    dnac_verify: ${15:# Flag to enable or disable SSL certificate verification}
    dnac_version: ${16:# Informs the SDK which version of Cisco DNA Center to use}
    state: ${17:# The state of Cisco Catalyst Center after module completion}
    validate_response_schema: ${18:# Flag for Cisco DNA Center SDK to enable the validation of request bodies against a JSON schema}
  tags:
    - cisco
    - dnac
    - discovery_intent]]></content>
  <tabTrigger>cisco.dnac.discovery_intent</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>A resource module for handling device discovery tasks</description>
</snippet>