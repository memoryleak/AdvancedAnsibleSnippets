<snippet>
  <content><![CDATA[- name: ${1:Manage firmware policies (firmware:FwP)}
  cisco.aci.aci_firmware_policy:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    description: ${4:# Description for the firmware policy}
    effective_on_reboot: ${5:# A property that indicates if the selected firmware version will be active after reboot}
    host: ${6:# IP Address or hostname of APIC resolvable by Ansible control host}
    ignore_compat: ${7:# Check if compatibility checks should be ignored}
    name: ${8:# The name of the firmware policy}
    name_alias: ${9:# The alias for the current object}
    output_level: ${10:# Influence the output of this ACI module}
    output_path: ${11:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${12:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${13:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${14:# The password to use for authentication}
    port: ${15:# Port number to be used for REST connection}
    private_key: ${16:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    sr_upgrade: ${17:# The SR firware upgrade}
    sr_version: ${18:# The SR version of the firmware associated with this policy}
    state: ${19:# Use C(present) or C(absent) for adding or removing}
    timeout: ${20:# The socket level timeout in seconds}
    use_proxy: ${21:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${22:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${23:# The username to use for authentication}
    validate_certs: ${24:# If C(false), SSL certificates will not be validated}
    version: ${25:# The version of the firmware associated with this policy}
    version_check_override: ${26:# The version check override}
  tags:
    - cisco
    - aci
    - aci_firmware_policy]]></content>
  <tabTrigger>cisco.aci.aci_firmware_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage firmware policies (firmware:FwP)</description>
</snippet>