<snippet>
  <content><![CDATA[- name: ${1:Query the ACI system information (top:System)}
  cisco.aci.aci_system:
    certificate_name: ${2:# The X}
    host: ${3:# IP Address or hostname of APIC resolvable by Ansible control host}
    id: ${4:# The controller node ID}
    output_level: ${5:# Influence the output of this ACI module}
    output_path: ${6:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${7:# The password to use for authentication}
    port: ${8:# Port number to be used for REST connection}
    private_key: ${9:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${10:# Use C(query) for listing an object or multiple objects}
    suppress_previous: ${11:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${12:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    timeout: ${13:# The socket level timeout in seconds}
    use_proxy: ${14:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${15:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${16:# The username to use for authentication}
    validate_certs: ${17:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_system]]></content>
  <tabTrigger>cisco.aci.aci_system</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Query the ACI system information (top:System)</description>
</snippet>