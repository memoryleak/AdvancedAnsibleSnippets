<snippet>
  <content><![CDATA[- name: ${1:Query the ACI system information (top:System)}
  cisco.aci.aci_system:
    id: ${2:# The controller node ID}
    state: ${3:# Use C(query) for listing an object or multiple objects}
    host: ${4:# IP Address or hostname of APIC resolvable by Ansible control host}
    port: ${5:# Port number to be used for REST connection}
    username: ${6:# The username to use for authentication}
    password: ${7:# The password to use for authentication}
    private_key: ${8:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    certificate_name: ${9:# The X}
    output_level: ${10:# Influence the output of this ACI module}
    timeout: ${11:# The socket level timeout in seconds}
    use_proxy: ${12:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${13:# If C(no), an HTTP connection will be used instead of the default HTTPS connection}
    validate_certs: ${14:# If C(no), SSL certificates will not be validated}
    output_path: ${15:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
  tags:
    - cisco
    - aci
    - aci_system]]></content>
  <tabTrigger>cisco.aci.aci_system</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Query the ACI system information (top:System)</description>
</snippet>