<snippet>
  <content><![CDATA[- name: ${1:Manage secrets stored in AWS Secrets Manager}
  community.aws.secretsmanager_secret:
    name: ${2:# Friendly name for the secret you are creating}
    state: ${3:# Whether the secret should be exist or not}
    recovery_window: ${4:# Only used if state is absent}
    description: ${5:# Specifies a user-provided description of the secret}
    kms_key_id: ${6:# Specifies the ARN or alias of the AWS KMS customer master key (CMK) to be used to encrypt the I(secret) values in the versions stored in this secret}
    secret_type: ${7:# Specifies the type of data that you want to encrypt}
    secret: ${8:# Specifies string or binary data that you want to encrypt and store in the new version of the secret}
    json_secret: ${9:# Specifies JSON-formatted data that you want to encrypt and store in the new version of the secret}
    resource_policy: ${10:# Specifies JSON-formatted resource policy to attach to the secret}
    rotation_lambda: ${11:# Specifies the ARN of the Lambda function that can rotate the secret}
    rotation_interval: ${12:# Specifies the number of days between automatic scheduled rotations of the secret}
    region: ${13:# The AWS region to use}
    access_key: ${14:# AWS access key ID}
    secret_key: ${15:# AWS secret access key}
    session_token: ${16:# AWS STS session token for use with temporary credentials}
    profile: ${17:# A named AWS profile to use for authentication}
    endpoint_url: ${18:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${19:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${20:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${21:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${22:# Use a C(botocore}
    tags: ${23:# A dictionary representing the tags to be applied to the resource}
    purge_tags: ${24:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - community
    - aws
    - secretsmanager_secret]]></content>
  <tabTrigger>community.aws.secretsmanager_secret</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage secrets stored in AWS Secrets Manager</description>
</snippet>