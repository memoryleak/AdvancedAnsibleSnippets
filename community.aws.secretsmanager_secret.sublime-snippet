<snippet>
  <content><![CDATA[- name: ${1:Manage secrets stored in AWS Secrets Manager}
  community.aws.secretsmanager_secret:
    access_key: ${2:# AWS access key ID}
    aws_ca_bundle: ${3:# The location of a CA Bundle to use when validating SSL certificates}
    aws_config: ${4:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${5:# Use a C(botocore}
    description: ${6:# Specifies a user-provided description of the secret}
    endpoint_url: ${7:# URL to connect to instead of the default AWS endpoints}
    json_secret: ${8:# Specifies JSON-formatted data that you want to encrypt and store in the new version of the secret}
    kms_key_id: ${9:# Specifies the ARN or alias of the AWS KMS customer master key (CMK) to be used to encrypt the I(secret) values in the versions stored in this secret}
    name: ${10:# Friendly name for the secret you are creating}
    overwrite: ${11:# Whether to overwrite an existing secret with the same name}
    profile: ${12:# A named AWS profile to use for authentication}
    purge_tags: ${13:# If O(purge_tags=true) and O(tags) is set, existing tags will be purged from the resource to match exactly what is defined by O(tags) parameter}
    recovery_window: ${14:# Only used if state is absent}
    region: ${15:# The AWS region to use}
    replica: ${16:# Specifies a list of regions and kms_key_ids (optional) to replicate the secret to}
    resource_policy: ${17:# Specifies JSON-formatted resource policy to attach to the secret}
    rotation_interval: ${18:# Specifies the number of days between automatic scheduled rotations of the secret}
    rotation_lambda: ${19:# Specifies the ARN of the Lambda function that can rotate the secret}
    secret: ${20:# Specifies string or binary data that you want to encrypt and store in the new version of the secret}
    secret_key: ${21:# AWS secret access key}
    secret_type: ${22:# Specifies the type of data that you want to encrypt}
    session_token: ${23:# AWS STS session token for use with temporary credentials}
    state: ${24:# Whether the secret should be exist or not}
    tags: ${25:# A dictionary representing the tags to be applied to the resource}
    validate_certs: ${26:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
  tags:
    - community
    - aws
    - secretsmanager_secret]]></content>
  <tabTrigger>community.aws.secretsmanager_secret</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage secrets stored in AWS Secrets Manager</description>
</snippet>