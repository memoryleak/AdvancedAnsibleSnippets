<snippet>
  <content><![CDATA[- name: ${1:Access and Update Google Cloud Secrets Manager objects}
  google.cloud.gcp_secret_manager:
    auth_kind: ${2:# The type of credential used}
    labels: ${3:# A set of key-value pairs to assign as labels to asecret}
    name: ${4:# Name of the secret to be used}
    project: ${5:# The Google Cloud Platform project to use}
    return_value: ${6:# if true, the value of the secret will be returned unencrypted to Ansible}
    scopes: ${7:# Array of scopes to be used}
    service_account_contents: ${8:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${9:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${10:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${11:# whether the secret should exist}
    value: ${12:# The secret value that the secret should have}
    version: ${13:# A version label to apply to the secret}
  tags:
    - google
    - cloud
    - gcp_secret_manager]]></content>
  <tabTrigger>google.cloud.gcp_secret_manager</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Access and Update Google Cloud Secrets Manager objects</description>
</snippet>