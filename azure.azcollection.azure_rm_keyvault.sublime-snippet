<snippet>
  <content><![CDATA[- name: ${1:Manage Key Vault instance}
  azure.azcollection.azure_rm_keyvault:
    resource_group: ${2:# The name of the Resource Group to which the server belongs}
    vault_name: ${3:# Name of the vault}
    location: ${4:# Resource location}
    vault_tenant: ${5:# The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault}
    sku: ${6:# SKU details}
    access_policies: ${7:# An array of 0 to 16 identities that have access to the key vault}
    enabled_for_deployment: ${8:# Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault}
    enabled_for_disk_encryption: ${9:# Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys}
    enabled_for_template_deployment: ${10:# Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault}
    enable_soft_delete: ${11:# Property to specify whether the soft delete functionality is enabled for this key vault}
    enable_purge_protection: ${12:# Property specifying whether protection against purge is enabled for this vault}
    soft_delete_retention_in_days: ${13:# Property specifying the number of days to retain deleted vaults}
    recover_mode: ${14:# Create vault in recovery mode}
    state: ${15:# Assert the state of the KeyVault}
    ad_user: ${16:# Active Directory username}
    password: ${17:# Active Directory user password}
    profile: ${18:# Security profile found in ~/}
    subscription_id: ${19:# Your Azure subscription Id}
    client_id: ${20:# Azure client ID}
    secret: ${21:# Azure client secret}
    tenant: ${22:# Azure tenant ID}
    cloud_environment: ${23:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    adfs_authority_url: ${24:# Azure AD authority url}
    cert_validation_mode: ${25:# Controls the certificate validation behavior for Azure endpoints}
    auth_source: ${26:# Controls the source of the credentials to use for authentication}
    api_profile: ${27:# Selects an API profile to use when communicating with Azure services}
    log_path: ${28:# Parent argument}
    log_mode: ${29:# Parent argument}
    x509_certificate_path: ${30:# Path to the X509 certificate used to create the service principal in PEM format}
    thumbprint: ${31:# The thumbprint of the private key specified in I(x509_certificate_path)}
    tags: ${32:# Dictionary of string:string pairs to assign as metadata to the object}
    append_tags: ${33:# Use to control if tags field is canonical or just appends to existing tags}
  tags:
    - azure
    - azcollection
    - azure_rm_keyvault]]></content>
  <tabTrigger>azure.azcollection.azure_rm_keyvault</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage Key Vault instance</description>
</snippet>