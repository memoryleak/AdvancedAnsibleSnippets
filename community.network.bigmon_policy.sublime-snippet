<snippet>
  <content><![CDATA[- name: ${1:Create and remove a bigmon out-of-band policy}
  community.network.bigmon_policy:
    access_token: ${2:# Bigmon access token}
    action: ${3:# Forward matching packets to delivery interfaces, Drop is for measure rate of matching packets, but do not forward to delivery interfaces, capture packets and write to a PCAP file, or enable NetFlow generation}
    controller: ${4:# The controller address}
    delivery_packet_count: ${5:# Run policy until delivery_packet_count packets are delivered}
    duration: ${6:# Run policy for duration duration or until delivery_packet_count packets are delivered, whichever comes first}
    name: ${7:# The name of the policy}
    policy_description: ${8:# Description of policy}
    priority: ${9:# A priority associated with this policy}
    start_time: ${10:# Date the policy becomes active}
    state: ${11:# Whether the policy should be present or absent}
    validate_certs: ${12:# If C(false), SSL certificates will not be validated}
  tags:
    - community
    - network
    - bigmon_policy]]></content>
  <tabTrigger>community.network.bigmon_policy</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create and remove a bigmon out-of-band policy</description>
</snippet>