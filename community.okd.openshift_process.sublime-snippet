<snippet>
  <content><![CDATA[- name: ${1:Process an OpenShift template}
  community.okd.openshift_process:
    api_key: ${2:# Token used to authenticate with the API}
    ca_cert: ${3:# Path to a CA certificate used to authenticate with the API}
    client_cert: ${4:# Path to a certificate used to authenticate with the API}
    client_key: ${5:# Path to a key file used to authenticate with the API}
    context: ${6:# The name of a context found in the config file}
    host: ${7:# Provide a URL for accessing the API}
    impersonate_groups: ${8:# Group(s) to impersonate for the operation}
    impersonate_user: ${9:# Username to impersonate for the operation}
    kubeconfig: ${10:# Path to an existing Kubernetes config file}
    name: ${11:# The name of the Template to process}
    namespace: ${12:# The namespace that the template can be found in}
    namespace_target: ${13:# The namespace that resources should be created, updated, or deleted in}
    no_proxy: ${14:# The comma separated list of hosts/domains/IP/CIDR that shouldn't go through proxy}
    parameter_file: ${15:# A path to a file containing template parameter values to override/set values in the Template}
    parameters: ${16:# A set of key: value pairs that will be used to set/override values in the Template}
    password: ${17:# Provide a password for authenticating with the API}
    persist_config: ${18:# Whether or not to save the kube config refresh tokens}
    proxy: ${19:# The URL of an HTTP proxy to use for the connection}
    proxy_headers: ${20:# The Header used for the HTTP proxy}
    resource_definition: ${21:# Provide a valid YAML definition (either as a string, list, or dict) for an object when creating or updating}
    src: ${22:# Provide a path to a file containing a valid YAML definition of an object or objects to be created or updated}
    state: ${23:# Determines what to do with the rendered Template}
    username: ${24:# Provide a username for authenticating with the API}
    validate_certs: ${25:# Whether or not to verify the API server's SSL certificates}
    wait: ${26:# Whether to wait for certain resource kinds to end up in the desired state}
    wait_condition: ${27:# Specifies a custom condition on the status to wait for}
    wait_sleep: ${28:# Number of seconds to sleep between checks}
    wait_timeout: ${29:# How long in seconds to wait for the resource to end up in the desired state}
  tags:
    - community
    - okd
    - openshift_process]]></content>
  <tabTrigger>community.okd.openshift_process</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Process an OpenShift template</description>
</snippet>