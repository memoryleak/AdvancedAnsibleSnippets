<snippet>
  <content><![CDATA[- name: ${1:Manage an AWS Glue job}
  community.aws.glue_job:
    allocated_capacity: ${2:# The number of AWS Glue data processing units (DPUs) to allocate to this Job}
    command_name: ${3:# The name of the job command}
    command_python_version: ${4:# Python version being used to execute a Python shell job}
    command_script_location: ${5:# The S3 path to a script that executes a job}
    connections: ${6:# A list of Glue connections used for this job}
    default_arguments: ${7:# A dict of default arguments for this job}
    description: ${8:# Description of the job being defined}
    glue_version: ${9:# Glue version determines the versions of Apache Spark and Python that AWS Glue supports}
    max_concurrent_runs: ${10:# The maximum number of concurrent runs allowed for the job}
    max_retries: ${11:# The maximum number of times to retry this job if it fails}
    name: ${12:# The name you assign to this job definition}
    number_of_workers: ${13:# The number of workers of a defined workerType that are allocated when a job runs}
    role: ${14:# The name or ARN of the IAM role associated with this job}
    state: ${15:# Create or delete the AWS Glue job}
    timeout: ${16:# The job timeout in minutes}
    worker_type: ${17:# The type of predefined worker that is allocated when a job runs}
    access_key: ${18:# AWS access key ID}
    secret_key: ${19:# AWS secret access key}
    session_token: ${20:# AWS STS session token for use with temporary credentials}
    profile: ${21:# A named AWS profile to use for authentication}
    endpoint_url: ${22:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${23:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${24:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${25:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${26:# Use a C(botocore}
    region: ${27:# The AWS region to use}
    tags: ${28:# A dictionary representing the tags to be applied to the resource}
    purge_tags: ${29:# If I(purge_tags=true) and I(tags) is set, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter}
  tags:
    - community
    - aws
    - glue_job]]></content>
  <tabTrigger>community.aws.glue_job</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage an AWS Glue job</description>
</snippet>