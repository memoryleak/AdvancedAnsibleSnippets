<snippet>
  <content><![CDATA[- name: ${1:Run commands via the MongoDB shell}
  community.mongodb.mongodb_shell:
    mongo_cmd: ${2:# The MongoDB shell command}
    db: ${3:# The database to run commands against}
    file: ${4:# Path to a file containing MongoDB commands}
    eval: ${5:# A MongoDB command to run}
    nodb: ${6:# Specify a non-default encoding for output}
    norc: ${7:# Prevents the shell from sourcing and evaluating ~/}
    quiet: ${8:# Silences output from the shell during the connection process}
    debug: ${9:# show additional debug info}
    transform: ${10:# Transform the output returned to the user}
    split_char: ${11:# Used by the split action in the transform stage}
    stringify: ${12:# Wraps the command in eval in JSON}
    additional_args: ${13:# Additional arguments to supply to the mongo command}
    idempotent: ${14:# Provides a form of pseudo-idempotency to the module}
    omit: ${15:# Parameter to omit from the command line}
    login_user: ${16:# The MongoDB user to login with}
    login_password: ${17:# The password used to authenticate with}
    login_database: ${18:# The database where login credentials are stored}
    login_host: ${19:# The host running MongoDB instance to login to}
    login_port: ${20:# The MongoDB server port to login to}
    strict_compatibility: ${21:# Enforce strict requirements for pymongo and MongoDB software versions}
  tags:
    - community
    - mongodb
    - mongodb_shell]]></content>
  <tabTrigger>community.mongodb.mongodb_shell</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Run commands via the MongoDB shell</description>
</snippet>