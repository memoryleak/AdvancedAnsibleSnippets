<snippet>
  <content><![CDATA[- name: ${1:Run commands via the MongoDB shell}
  community.mongodb.mongodb_shell:
    additional_args: ${2:# Additional arguments to supply to the mongo command}
    atlas_auth: ${3:# Authentication path intended for MongoDB Atlas Instances}
    db: ${4:# The database to run commands against}
    debug: ${5:# show additional debug info}
    eval: ${6:# A MongoDB command to run}
    file: ${7:# Path to a file containing MongoDB commands}
    idempotent: ${8:# Provides a form of pseudo-idempotency to the module}
    login_database: ${9:# The database where login credentials are stored}
    login_host: ${10:# The host running MongoDB instance to login to}
    login_password: ${11:# The password used to authenticate with}
    login_port: ${12:# The MongoDB server port to login to}
    login_user: ${13:# The MongoDB user to login with}
    mongo_cmd: ${14:# The MongoDB shell command}
    nodb: ${15:# Specify a non-default encoding for output}
    norc: ${16:# Prevents the shell from sourcing and evaluating ~/}
    omit: ${17:# Parameter to omit from the command line}
    quiet: ${18:# Silences output from the shell during the connection process}
    split_char: ${19:# Used by the split action in the transform stage}
    strict_compatibility: ${20:# Enforce strict requirements for pymongo and MongoDB software versions}
    stringify: ${21:# Wraps the command in eval in JSON}
    transform: ${22:# Transform the output returned to the user}
  tags:
    - community
    - mongodb
    - mongodb_shell]]></content>
  <tabTrigger>community.mongodb.mongodb_shell</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Run commands via the MongoDB shell</description>
</snippet>