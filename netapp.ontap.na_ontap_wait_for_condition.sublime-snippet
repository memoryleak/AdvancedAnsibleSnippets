<snippet>
  <content><![CDATA[- name: ${1:NetApp ONTAP wait_for_condition}
  netapp.ontap.na_ontap_wait_for_condition:
    attributes: ${2:# a dictionary of custom attributes for the condition}
    cert_filepath: ${3:# path to SSL client cert file (}
    conditions: ${4:# one or more conditions to match}
    feature_flags: ${5:# Enable or disable a new feature}
    force_ontap_version: ${6:# Override the cluster ONTAP version when using REST}
    hostname: ${7:# The hostname or IP address of the ONTAP instance}
    http_port: ${8:# Override the default port (80 or 443) with this port}
    https: ${9:# Enable and disable https}
    key_filepath: ${10:# path to SSL client key file}
    name: ${11:# The name of the event to check for}
    ontapi: ${12:# The ontap api version to use}
    password: ${13:# Password for the specified user}
    polling_interval: ${14:# how ofen to check for the conditions, in seconds}
    state: ${15:# whether the conditions should be present or absent}
    timeout: ${16:# how long to wait for the conditions, in seconds}
    use_rest: ${17:# Whether to use REST or ZAPI}
    username: ${18:# This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}
    validate_certs: ${19:# If set to C(no), the SSL certificates will not be validated}
  tags:
    - netapp
    - ontap
    - na_ontap_wait_for_condition]]></content>
  <tabTrigger>netapp.ontap.na_ontap_wait_for_condition</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>NetApp ONTAP wait_for_condition</description>
</snippet>