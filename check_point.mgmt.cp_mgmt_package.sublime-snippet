<snippet>
  <content><![CDATA[- name: ${1:Manages package objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_package:
    access: ${2:# True - enables, False - disables access & NAT policies, empty - nothing is changed}
    access_layers: ${3:# Access policy layers}
    auto_publish_session: ${4:# Publish the current session if changes have been performed after task completes}
    color: ${5:# Color of the object}
    comments: ${6:# Comments string}
    desktop_security: ${7:# True - enables, False - disables Desktop security policy, empty - nothing is changed}
    details_level: ${8:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    ignore_errors: ${9:# Apply changes ignoring errors}
    ignore_warnings: ${10:# Apply changes ignoring warnings}
    installation_targets: ${11:# Which Gateways identified by the name or UID to install the policy on}
    name: ${12:# Object name}
    qos: ${13:# True - enables, False - disables QoS policy, empty - nothing is changed}
    qos_policy_type: ${14:# QoS policy type}
    state: ${15:# State of the access rule (present or absent)}
    tags: ${16:# Collection of tag identifiers}
    threat_layers: ${17:# Threat policy layers}
    threat_prevention: ${18:# True - enables, False - disables Threat policy, empty - nothing is changed}
    version: ${19:# Version of checkpoint}
    vpn_traditional_mode: ${20:# True - enables, False - disables VPN traditional mode, empty - nothing is changed}
    wait_for_task: ${21:# Wait for the task to end}
    wait_for_task_timeout: ${22:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_package]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_package</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages package objects on Check Point over Web Services API</description>
</snippet>