<snippet>
  <content><![CDATA[- name: ${1:Creates/updates/deletes GitLab Projects}
  community.general.gitlab_project:
    allow_merge_on_skipped_pipeline: ${2:# Allow merge when skipped pipelines exist}
    api_job_token: ${3:# GitLab CI job token for logging in}
    api_oauth_token: ${4:# GitLab OAuth token for logging in}
    api_password: ${5:# The password to use for authentication against the API}
    api_token: ${6:# GitLab access token with API permissions}
    api_url: ${7:# The resolvable endpoint for the API}
    api_username: ${8:# The username to use for authentication against the API}
    avatar_path: ${9:# Absolute path image to configure avatar}
    builds_access_level: ${10:# V(private) means that repository CI/CD is allowed only to project members}
    ca_path: ${11:# The CA certificates bundle to use to verify GitLab server certificate}
    ci_config_path: ${12:# Custom path to the CI configuration file for this project}
    container_expiration_policy: ${13:# Project cleanup policy for its container registry}
    container_registry_access_level: ${14:# V(private) means that container registry is allowed only to project members}
    default_branch: ${15:# The default branch name for this project}
    description: ${16:# An description for the project}
    environments_access_level: ${17:# V(private) means that deployment to environment is allowed only to project members}
    feature_flags_access_level: ${18:# V(private) means that feature rollout is allowed only to project members}
    forking_access_level: ${19:# V(private) means that repository forks is allowed only to project members}
    group: ${20:# Id or the full path of the group of which this projects belongs to}
    import_url: ${21:# Git repository which will be imported into gitlab}
    infrastructure_access_level: ${22:# V(private) means that configuring infrastructure is allowed only to project members}
    initialize_with_readme: ${23:# Will initialize the project with a default C(README}
    issues_access_level: ${24:# V(private) means that accessing issues tab is allowed only to project members}
    issues_enabled: ${25:# Whether you want to create issues or not}
    lfs_enabled: ${26:# Enable Git large file systems to manages large files such as audio, video, and graphics files}
    merge_method: ${27:# What requirements are placed upon merges}
    merge_requests_enabled: ${28:# If merge requests can be made or not}
    model_registry_access_level: ${29:# V(private) means that accessing model registry tab is allowed only to project members}
    monitor_access_level: ${30:# V(private) means that monitoring health is allowed only to project members}
    name: ${31:# The name of the project}
    only_allow_merge_if_all_discussions_are_resolved: ${32:# All discussions on a merge request (MR) have to be resolved}
    only_allow_merge_if_pipeline_succeeds: ${33:# Only allow merges if pipeline succeeded}
    packages_enabled: ${34:# Enable GitLab package repository}
    pages_access_level: ${35:# V(private) means that accessing pages tab is allowed only to project members}
    path: ${36:# The path of the project you want to create, this will be server_url/<group>/path}
    releases_access_level: ${37:# V(private) means that accessing release is allowed only to project members}
    remove_source_branch_after_merge: ${38:# Remove the source branch after merge}
    repository_access_level: ${39:# V(private) means that accessing repository is allowed only to project members}
    security_and_compliance_access_level: ${40:# V(private) means that accessing security and complicance tab is allowed only to project members}
    service_desk_enabled: ${41:# Enable Service Desk}
    shared_runners_enabled: ${42:# Enable shared runners for this project}
    snippets_enabled: ${43:# If creating snippets should be available or not}
    squash_option: ${44:# Squash commits when merging}
    state: ${45:# Create or delete project}
    topics: ${46:# A topic or list of topics to be assigned to a project}
    username: ${47:# Used to create a personal project under a user's name}
    validate_certs: ${48:# Whether or not to validate SSL certs when supplying a HTTPS endpoint}
    visibility: ${49:# V(private) Project access must be granted explicitly for each user}
    wiki_enabled: ${50:# If an wiki for this project should be available or not}
  tags:
    - community
    - general
    - gitlab_project]]></content>
  <tabTrigger>community.general.gitlab_project</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates/updates/deletes GitLab Projects</description>
</snippet>