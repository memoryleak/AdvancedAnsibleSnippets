<snippet>
  <content><![CDATA[- name: ${1:In band or Out of band management EPGs (mgmt:OoB and mgmt:InB)}
  cisco.aci.aci_node_mgmt_epg:
    annotation: ${2:# User-defined string for annotating an object}
    bd: ${3:# The in-band bridge domain which is used when type is in_band}
    certificate_name: ${4:# The X}
    encap: ${5:# The in-band access encapsulation which is used when type is in_band}
    epg: ${6:# The name of the end point group}
    host: ${7:# IP Address or hostname of APIC resolvable by Ansible control host}
    output_level: ${8:# Influence the output of this ACI module}
    output_path: ${9:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    password: ${10:# The password to use for authentication}
    port: ${11:# Port number to be used for REST connection}
    private_key: ${12:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${13:# Use C(present) or C(absent) for adding or removing}
    suppress_previous: ${14:# If C(true), a GET to check previous will not be sent before a POST update to APIC}
    suppress_verification: ${15:# If C(true), a verifying GET will not be sent after a POST update to APIC}
    timeout: ${16:# The socket level timeout in seconds}
    type: ${17:# type of management interface}
    use_proxy: ${18:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${19:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${20:# The username to use for authentication}
    validate_certs: ${21:# If C(false), SSL certificates will not be validated}
  tags:
    - cisco
    - aci
    - aci_node_mgmt_epg]]></content>
  <tabTrigger>cisco.aci.aci_node_mgmt_epg</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>In band or Out of band management EPGs (mgmt:OoB and mgmt:InB)</description>
</snippet>