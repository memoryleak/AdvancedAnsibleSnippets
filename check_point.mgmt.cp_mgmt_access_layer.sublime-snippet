<snippet>
  <content><![CDATA[- name: ${1:Manages access-layer objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_access_layer:
    add_default_rule: ${2:# Indicates whether to include a cleanup rule in the new layer}
    applications_and_url_filtering: ${3:# Whether to enable Applications & URL Filtering blade on the layer}
    auto_publish_session: ${4:# Publish the current session if changes have been performed after task completes}
    color: ${5:# Color of the object}
    comments: ${6:# Comments string}
    content_awareness: ${7:# Whether to enable Content Awareness blade on the layer}
    details_level: ${8:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    detect_using_x_forward_for: ${9:# Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP}
    firewall: ${10:# Whether to enable Firewall blade on the layer}
    ignore_errors: ${11:# Apply changes ignoring errors}
    ignore_warnings: ${12:# Apply changes ignoring warnings}
    implicit_cleanup_action: ${13:# The default 'catch-all' action for traffic that does not match any explicit or implied rules in the layer}
    mobile_access: ${14:# Whether to enable Mobile Access blade on the layer}
    name: ${15:# Object name}
    shared: ${16:# Whether this layer is shared}
    state: ${17:# State of the access rule (present or absent)}
    tags: ${18:# Collection of tag identifiers}
    version: ${19:# Version of checkpoint}
    wait_for_task: ${20:# Wait for the task to end}
    wait_for_task_timeout: ${21:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_access_layer]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_access_layer</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages access-layer objects on Check Point over Web Services API</description>
</snippet>