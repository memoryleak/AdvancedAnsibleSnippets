<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP HttpHealthCheck}
  google.cloud.gcp_compute_http_health_check:
    state: ${2:# Whether the given object should exist in GCP}
    check_interval_sec: ${3:# How often (in seconds) to send a health check}
    description: ${4:# An optional description of this resource}
    healthy_threshold: ${5:# A so-far unhealthy instance will be marked healthy after this many consecutive successes}
    host: ${6:# The value of the host header in the HTTP health check request}
    name: ${7:# Name of the resource}
    port: ${8:# The TCP port number for the HTTP health check request}
    request_path: ${9:# The request path of the HTTP health check request}
    timeout_sec: ${10:# How long (in seconds) to wait before claiming failure}
    unhealthy_threshold: ${11:# A so-far healthy instance will be marked unhealthy after this many consecutive failures}
    project: ${12:# The Google Cloud Platform project to use}
    auth_kind: ${13:# The type of credential used}
    service_account_contents: ${14:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_file: ${15:# The path of a Service Account JSON file if serviceaccount is selected as type}
    service_account_email: ${16:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    scopes: ${17:# Array of scopes to be used}
    env_type: ${18:# Specifies which Ansible environment you're running this module within}
  tags:
    - google
    - cloud
    - gcp_compute_http_health_check]]></content>
  <tabTrigger>google.cloud.gcp_compute_http_health_check</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP HttpHealthCheck</description>
</snippet>