<snippet>
  <content><![CDATA[- name: ${1:Manage configuration templates in the Meraki cloud}
  cisco.meraki.meraki_config_template:
    state: ${2:# Specifies whether configuration template information should be queried, modified, or deleted}
    org_name: ${3:# Name of organization containing the configuration template}
    org_id: ${4:# ID of organization associated to a configuration template}
    config_template: ${5:# Name of the configuration template within an organization to manipulate}
    net_name: ${6:# Name of the network to bind or unbind configuration template to}
    net_id: ${7:# ID of the network to bind or unbind configuration template to}
    auto_bind: ${8:# Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model}
    auth_key: ${9:# Authentication key provided by the dashboard}
    host: ${10:# Hostname for Meraki dashboard}
    use_proxy: ${11:# If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_https: ${12:# If C(no), it will use HTTP}
    output_format: ${13:# Instructs module whether response keys should be snake case (ex}
    output_level: ${14:# Set amount of debug output during module execution}
    timeout: ${15:# Time to timeout for HTTP requests}
    validate_certs: ${16:# Whether to validate HTTP certificates}
    rate_limit_retry_time: ${17:# Number of seconds to retry if rate limiter is triggered}
    internal_error_retry_time: ${18:# Number of seconds to retry if server returns an internal server error}
  tags:
    - cisco
    - meraki
    - meraki_config_template]]></content>
  <tabTrigger>cisco.meraki.meraki_config_template</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage configuration templates in the Meraki cloud</description>
</snippet>