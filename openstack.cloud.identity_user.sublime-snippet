<snippet>
  <content><![CDATA[- name: ${1:Manage a OpenStack identity (Keystone) user}
  openstack.cloud.identity_user:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${6:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${7:# A path to a client key to use as part of the SSL transaction}
    cloud: ${8:# Named cloud or cloud config to operate against}
    default_project: ${9:# Name or ID of the project, the user should be created in}
    description: ${10:# Description about the user}
    domain: ${11:# Domain to create the user in if the cloud supports domains}
    email: ${12:# Email address for the user}
    interface: ${13:# Endpoint URL type to fetch from the service catalog}
    is_enabled: ${14:# Whether the user is enabled or not}
    name: ${15:# Name of the user}
    password: ${16:# Password for the user}
    region_name: ${17:# Name of the region}
    sdk_log_level: ${18:# Log level of the OpenStackSDK}
    sdk_log_path: ${19:# Path to the logfile of the OpenStackSDK}
    state: ${20:# Should the resource be present or absent}
    timeout: ${21:# How long should ansible wait for the requested resource}
    update_password: ${22:# When I(update_password) is C(always), then the password will always be updated}
    validate_certs: ${23:# Whether or not SSL API requests should be verified}
    wait: ${24:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - identity_user]]></content>
  <tabTrigger>openstack.cloud.identity_user</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage a OpenStack identity (Keystone) user</description>
</snippet>