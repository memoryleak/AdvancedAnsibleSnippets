<snippet>
  <content><![CDATA[- name: ${1:Create and delete WAF Conditions}
  community.aws.waf_condition:
    name: ${2:# Name of the Web Application Firewall condition to manage}
    type: ${3:# The type of matching to perform}
    filters: ${4:# A list of the filters against which to match}
    purge_filters: ${5:# Whether to remove existing filters from a condition if not passed in I(filters)}
    waf_regional: ${6:# Whether to use C(waf-regional) module}
    state: ${7:# Whether the condition should be C(present) or C(absent)}
    access_key: ${8:# AWS access key ID}
    secret_key: ${9:# AWS secret access key}
    session_token: ${10:# AWS STS session token for use with temporary credentials}
    profile: ${11:# A named AWS profile to use for authentication}
    endpoint_url: ${12:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${13:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${14:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${15:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${16:# Use a C(botocore}
    region: ${17:# The AWS region to use}
  tags:
    - community
    - aws
    - waf_condition]]></content>
  <tabTrigger>community.aws.waf_condition</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create and delete WAF Conditions</description>
</snippet>