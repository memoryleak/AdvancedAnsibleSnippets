<snippet>
  <content><![CDATA[- name: ${1:Manage systemd units}
  ansible.builtin.systemd:
    daemon_reexec: ${2:# Run daemon_reexec command before doing any other operations, the systemd manager will serialize the manager state}
    daemon_reload: ${3:# Run C(daemon-reload) before doing any other operations, to make sure systemd has read any changes}
    enabled: ${4:# Whether the unit should start on boot}
    force: ${5:# Whether to override existing symlinks}
    masked: ${6:# Whether the unit should be masked or not}
    name: ${7:# Name of the unit}
    no_block: ${8:# Do not synchronously wait for the requested operation to finish}
    scope: ${9:# Run C(systemctl) within a given service manager scope, either as the default system scope V(system), the current user's scope V(user), or the scope of all users V(global)}
    state: ${10:# V(started)/V(stopped) are idempotent actions that will not run commands unless necessary}
  tags:
    - systemd]]></content>
  <tabTrigger>ansible.builtin.systemd</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage systemd units</description>
</snippet>