<snippet>
  <content><![CDATA[- name: ${1:Creates a GCP ServiceAccountKey}
  google.cloud.gcp_iam_service_account_key:
    access_token: ${2:# An OAuth2 access token if credential type is accesstoken}
    auth_kind: ${3:# The type of credential used}
    env_type: ${4:# Specifies which Ansible environment you're running this module within}
    key_algorithm: ${5:# Specifies the algorithm for the key}
    path: ${6:# The full name of the file that will hold the service account private key}
    private_key_type: ${7:# Output format for the service account key}
    project: ${8:# The Google Cloud Platform project to use}
    scopes: ${9:# Array of scopes to be used}
    service_account: ${10:# The name of the serviceAccount}
    service_account_contents: ${11:# The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it}
    service_account_email: ${12:# An optional service account email address if machineaccount is selected and the user does not wish to use the default email}
    service_account_file: ${13:# The path of a Service Account JSON file if serviceaccount is selected as type}
    state: ${14:# Whether the given object should exist in GCP}
  tags:
    - google
    - cloud
    - gcp_iam_service_account_key]]></content>
  <tabTrigger>google.cloud.gcp_iam_service_account_key</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Creates a GCP ServiceAccountKey</description>
</snippet>