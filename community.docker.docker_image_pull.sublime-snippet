<snippet>
  <content><![CDATA[- name: ${1:Pull Docker images from registries}
  community.docker.docker_image_pull:
    api_version: ${2:# The version of the Docker API running on the Docker Host}
    ca_path: ${3:# Use a CA certificate when performing server verification by providing the path to a CA certificate file}
    client_cert: ${4:# Path to the client's TLS certificate file}
    client_key: ${5:# Path to the client's TLS key file}
    debug: ${6:# Debug mode}
    docker_host: ${7:# The URL or Unix socket path used to connect to the Docker API}
    name: ${8:# Image name}
    platform: ${9:# Ask for this specific platform when pulling}
    pull: ${10:# Determines when to pull an image}
    ssl_version: ${11:# Provide a valid SSL version number}
    tag: ${12:# Used to select an image when pulling}
    timeout: ${13:# The maximum amount of time in seconds to wait on a response from the API}
    tls: ${14:# Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server}
    tls_hostname: ${15:# When verifying the authenticity of the Docker Host server, provide the expected name of the server}
    use_ssh_client: ${16:# For SSH transports, use the C(ssh) CLI tool instead of paramiko}
    validate_certs: ${17:# Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server}
  tags:
    - community
    - docker
    - docker_image_pull]]></content>
  <tabTrigger>community.docker.docker_image_pull</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Pull Docker images from registries</description>
</snippet>