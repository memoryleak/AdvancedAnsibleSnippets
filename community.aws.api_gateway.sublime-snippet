<snippet>
  <content><![CDATA[- name: ${1:Manage AWS API Gateway APIs}
  community.aws.api_gateway:
    api_id: ${2:# The ID of the API you want to manage}
    state: ${3:# Create or delete API Gateway}
    swagger_file: ${4:# JSON or YAML file containing swagger definitions for API}
    swagger_text: ${5:# Swagger definitions for API in JSON or YAML as a string direct from playbook}
    swagger_dict: ${6:# Swagger definitions API ansible dictionary which will be converted to JSON and uploaded}
    stage: ${7:# The name of the stage the API should be deployed to}
    deploy_desc: ${8:# Description of the deployment}
    cache_enabled: ${9:# Enable API GW caching of backend responses}
    cache_size: ${10:# Size in GB of the API GW cache, becomes effective when cache_enabled is true}
    stage_variables: ${11:# ENV variables for the stage}
    stage_canary_settings: ${12:# Canary settings for the deployment of the stage}
    tracing_enabled: ${13:# Specifies whether active tracing with X-ray is enabled for the API GW stage}
    endpoint_type: ${14:# Type of endpoint configuration}
    access_key: ${15:# AWS access key ID}
    secret_key: ${16:# AWS secret access key}
    session_token: ${17:# AWS STS session token for use with temporary credentials}
    profile: ${18:# A named AWS profile to use for authentication}
    endpoint_url: ${19:# URL to connect to instead of the default AWS endpoints}
    aws_ca_bundle: ${20:# The location of a CA Bundle to use when validating SSL certificates}
    validate_certs: ${21:# When set to C(false), SSL certificates will not be validated for communication with the AWS APIs}
    aws_config: ${22:# A dictionary to modify the botocore configuration}
    debug_botocore_endpoint_logs: ${23:# Use a C(botocore}
    region: ${24:# The AWS region to use}
  tags:
    - community
    - aws
    - api_gateway]]></content>
  <tabTrigger>community.aws.api_gateway</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage AWS API Gateway APIs</description>
</snippet>