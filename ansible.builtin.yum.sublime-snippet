<snippet>
  <content><![CDATA[- name: ${1:Manages packages with the I(yum) package manager}
  ansible.builtin.yum:
    allow_downgrade: ${2:# Specify if the named package and version is allowed to downgrade a maybe already installed higher version of that package}
    autoremove: ${3:# If V(true), removes all 'leaf' packages from the system that were originally installed as dependencies of user-installed packages but which are no longer required by any such package}
    bugfix: ${4:# If set to V(true), and O(state=latest) then only installs updates that have been marked bugfix related}
    cacheonly: ${5:# Tells yum to run entirely from system cache; does not download or update metadata}
    conf_file: ${6:# The remote yum configuration file to use for the transaction}
    disable_excludes: ${7:# Disable the excludes defined in YUM config files}
    disable_gpg_check: ${8:# Whether to disable the GPG checking of signatures of packages being installed}
    disable_plugin: ${9:# I(Plugin) name to disable for the install/update operation}
    disablerepo: ${10:# I(Repoid) of repositories to disable for the install/update operation}
    download_dir: ${11:# Specifies an alternate directory to store packages}
    download_only: ${12:# Only download the packages, do not install them}
    enable_plugin: ${13:# I(Plugin) name to enable for the install/update operation}
    enablerepo: ${14:# I(Repoid) of repositories to enable for the install/update operation}
    exclude: ${15:# Package name(s) to exclude when state=present, or latest}
    install_repoquery: ${16:# If repoquery is not available, install yum-utils}
    install_weak_deps: ${17:# Will also install all packages linked by a weak dependency relation}
    installroot: ${18:# Specifies an alternative installroot, relative to which all packages will be installed}
    list: ${19:# Package name to run the equivalent of C(yum list --show-duplicates <package>) against}
    lock_timeout: ${20:# Amount of time to wait for the yum lockfile to be freed}
    name: ${21:# A package name or package specifier with version, like V(name-1}
    releasever: ${22:# Specifies an alternative release from which all packages will be installed}
    security: ${23:# If set to V(true), and O(state=latest) then only installs updates that have been marked security related}
    skip_broken: ${24:# Skip all unavailable packages or packages with broken dependencies without raising an error}
    sslverify: ${25:# Disables SSL validation of the repository server for this transaction}
    state: ${26:# Whether to install (V(present) or V(installed), V(latest)), or remove (V(absent) or V(removed)) a package}
    update_cache: ${27:# Force yum to check if cache is out of date and redownload if needed}
    update_only: ${28:# When using latest, only update installed packages}
    use_backend: ${29:# This module supports V(yum) (as it always has), this is known as C(yum3)/C(YUM3)/C(yum-deprecated) by upstream yum developers}
    validate_certs: ${30:# This only applies if using a https url as the source of the rpm}
  tags:
    - yum]]></content>
  <tabTrigger>ansible.builtin.yum</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages packages with the I(yum) package manager</description>
</snippet>