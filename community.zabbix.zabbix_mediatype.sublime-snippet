<snippet>
  <content><![CDATA[- name: ${1:Create/Update/Delete Zabbix media types}
  community.zabbix.zabbix_mediatype:
    attempt_interval: ${2:# The interval between retry attempts}
    description: ${3:# Description of the media type}
    event_menu: ${4:# Can be used when I(type=webhook)}
    event_menu_name: ${5:# Requred when I(event_menu=true)}
    event_menu_url: ${6:# Requred when I(event_menu=true)}
    gsm_modem: ${7:# Serial device name of the gsm modem}
    http_login_password: ${8:# Basic Auth password}
    http_login_user: ${9:# Basic Auth login}
    max_attempts: ${10:# The maximum number of attempts to send an alert}
    max_sessions: ${11:# The maximum number of alerts that can be processed in parallel}
    message_templates: ${12:# Default notification messages for the event types}
    message_text_limit: ${13:# The message text limit}
    name: ${14:# Name of the media type}
    password: ${15:# Authentication password}
    process_tags: ${16:# Can be used when I(type=webhook)}
    script_name: ${17:# The name of the executed script}
    script_params: ${18:# List of script parameters}
    smtp_authentication: ${19:# Whether SMTP authentication with username and password should be enabled or not}
    smtp_email: ${20:# Email address from which notifications will be sent}
    smtp_helo: ${21:# SMTP HELO}
    smtp_security: ${22:# SMTP connection security level to use}
    smtp_server: ${23:# SMTP server host}
    smtp_server_port: ${24:# SMTP server port}
    smtp_verify_host: ${25:# SSL verify host for SMTP}
    smtp_verify_peer: ${26:# SSL verify peer for SMTP}
    state: ${27:# Desired state of the mediatype}
    status: ${28:# Whether the media type is enabled or no}
    type: ${29:# Type of the media type}
    username: ${30:# Username or Jabber identifier}
    webhook_params: ${31:# Can be used when I(type=webhook)}
    webhook_script: ${32:# Required when I(type=webhook)}
    webhook_timeout: ${33:# Can be used when I(type=webhook)}
  tags:
    - community
    - zabbix
    - zabbix_mediatype]]></content>
  <tabTrigger>community.zabbix.zabbix_mediatype</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create/Update/Delete Zabbix media types</description>
</snippet>