<snippet>
  <content><![CDATA[- name: ${1:Manage PostgreSQL Database instance}
  azure.azcollection.azure_rm_postgresqldatabase:
    ad_user: ${2:# Active Directory username}
    adfs_authority_url: ${3:# Azure AD authority url}
    api_profile: ${4:# Selects an API profile to use when communicating with Azure services}
    auth_source: ${5:# Controls the source of the credentials to use for authentication}
    cert_validation_mode: ${6:# Controls the certificate validation behavior for Azure endpoints}
    charset: ${7:# The charset of the database}
    client_id: ${8:# Azure client ID}
    cloud_environment: ${9:# For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack)}
    collation: ${10:# The collation of the database}
    disable_instance_discovery: ${11:# Determines whether or not instance discovery is performed when attempting to authenticate}
    force_update: ${12:# When set to C(true), will delete and recreate the existing PostgreSQL database if any of the properties don't match what is set}
    log_mode: ${13:# Parent argument}
    log_path: ${14:# Parent argument}
    name: ${15:# The name of the database}
    password: ${16:# Active Directory user password}
    profile: ${17:# Security profile found in ~/}
    resource_group: ${18:# The name of the resource group that contains the resource}
    secret: ${19:# Azure client secret}
    server_name: ${20:# The name of the server}
    state: ${21:# Assert the state of the PostgreSQL database}
    subscription_id: ${22:# Your Azure subscription Id}
    tenant: ${23:# Azure tenant ID}
    thumbprint: ${24:# The thumbprint of the private key specified in I(x509_certificate_path)}
    x509_certificate_path: ${25:# Path to the X509 certificate used to create the service principal in PEM format}
  tags:
    - azure
    - azcollection
    - azure_rm_postgresqldatabase]]></content>
  <tabTrigger>azure.azcollection.azure_rm_postgresqldatabase</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage PostgreSQL Database instance</description>
</snippet>