<snippet>
  <content><![CDATA[- name: ${1:Manages power states of virtual machines in vCenter}
  community.vmware.vmware_guest_powerstate:
    datacenter: ${2:# The I(datacenter) where the VM you'd like to operate the power}
    state: ${3:# Set the state of the virtual machine}
    name: ${4:# Name of the virtual machine to work with}
    name_match: ${5:# If multiple virtual machines matching the name, use the first or last found}
    uuid: ${6:# UUID of the instance to manage if known, this is VMware's unique identifier}
    moid: ${7:# Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance}
    use_instance_uuid: ${8:# Whether to use the VMware instance UUID rather than the BIOS UUID}
    folder: ${9:# Destination folder, absolute or relative path to find an existing guest}
    scheduled_at: ${10:# Date and time in string format at which specified task needs to be performed}
    schedule_task_name: ${11:# Name of schedule task}
    schedule_task_description: ${12:# Description of schedule task}
    schedule_task_enabled: ${13:# Flag to indicate whether the scheduled task is enabled or disabled}
    force: ${14:# Ignore warnings and complete the actions}
    state_change_timeout: ${15:# If the C(state) is set to C(shutdown-guest), by default the module will return immediately after sending the shutdown signal}
    answer: ${16:# A list of questions to answer, should one or more arise while waiting for the task to complete}
    hostname: ${17:# The hostname or IP address of the vSphere vCenter or ESXi server}
    username: ${18:# The username of the vSphere vCenter or ESXi server}
    password: ${19:# The password of the vSphere vCenter or ESXi server}
    validate_certs: ${20:# Allows connection when SSL certificates are not valid}
    port: ${21:# The port number of the vSphere vCenter or ESXi server}
    proxy_host: ${22:# Address of a proxy that will receive all HTTPS requests and relay them}
    proxy_port: ${23:# Port of the HTTP proxy that will receive all HTTPS requests and relay them}
  tags:
    - community
    - vmware
    - vmware_guest_powerstate]]></content>
  <tabTrigger>community.vmware.vmware_guest_powerstate</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages power states of virtual machines in vCenter</description>
</snippet>