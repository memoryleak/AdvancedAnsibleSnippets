<snippet>
  <content><![CDATA[- name: ${1:Create or delete routers from OpenStack}
  openstack.cloud.router:
    api_timeout: ${2:# How long should the socket layer wait before timing out for API calls}
    auth: ${3:# Dictionary containing auth information as needed by the cloud's auth plugin strategy}
    auth_type: ${4:# Name of the auth plugin to use}
    ca_cert: ${5:# A path to a CA Cert bundle that can be used as part of verifying SSL API requests}
    client_cert: ${6:# A path to a client certificate to use as part of the SSL transaction}
    client_key: ${7:# A path to a client key to use as part of the SSL transaction}
    cloud: ${8:# Named cloud or cloud config to operate against}
    enable_snat: ${9:# Enable Source NAT (SNAT) attribute}
    external_fixed_ips: ${10:# The IP address parameters for the external gateway network}
    external_gateway_info: ${11:# Information about the router's external gateway}
    interface: ${12:# Endpoint URL type to fetch from the service catalog}
    interfaces: ${13:# List of subnets to attach to the router internal interface}
    is_admin_state_up: ${14:# Desired admin state of the created or existing router}
    name: ${15:# Name to be give to the router}
    network: ${16:# Unique name or ID of the external gateway network}
    project: ${17:# Unique name or ID of the project}
    region_name: ${18:# Name of the region}
    sdk_log_level: ${19:# Log level of the OpenStackSDK}
    sdk_log_path: ${20:# Path to the logfile of the OpenStackSDK}
    state: ${21:# Indicate desired state of the resource}
    timeout: ${22:# How long should ansible wait for the requested resource}
    validate_certs: ${23:# Whether or not SSL API requests should be verified}
    wait: ${24:# Should ansible wait until the requested resource is complete}
  tags:
    - openstack
    - cloud
    - router]]></content>
  <tabTrigger>openstack.cloud.router</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Create or delete routers from OpenStack</description>
</snippet>