<snippet>
  <content><![CDATA[- name: ${1:Manage contexts or VRFs (fv:Ctx)}
  cisco.aci.aci_vrf:
    annotation: ${2:# User-defined string for annotating an object}
    certificate_name: ${3:# The X}
    description: ${4:# The description for the VRF}
    host: ${5:# IP Address or hostname of APIC resolvable by Ansible control host}
    ip_data_plane_learning: ${6:# Whether IP data plane learning is enabled or disabled}
    match_type: ${7:# Configures match type for contracts under vzAny}
    name_alias: ${8:# The alias for the current object}
    output_level: ${9:# Influence the output of this ACI module}
    output_path: ${10:# Path to a file that will be used to dump the ACI JSON configuration objects generated by the module}
    owner_key: ${11:# User-defined string for the ownerKey attribute of an ACI object}
    owner_tag: ${12:# User-defined string for the ownerTag attribute of an ACI object}
    password: ${13:# The password to use for authentication}
    policy_control_direction: ${14:# Determines if the policy should be enforced by the fabric on ingress or egress}
    policy_control_preference: ${15:# Determines if the fabric should enforce contract policies to allow routing and packet forwarding}
    port: ${16:# Port number to be used for REST connection}
    preferred_group: ${17:# Enables preferred groups for the VRF under vzAny}
    private_key: ${18:# Either a PEM-formatted private key file or the private key content used for signature-based authentication}
    state: ${19:# Use C(present) or C(absent) for adding or removing}
    tenant: ${20:# The name of the Tenant the VRF should belong to}
    timeout: ${21:# The socket level timeout in seconds}
    use_proxy: ${22:# If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts}
    use_ssl: ${23:# If C(false), an HTTP connection will be used instead of the default HTTPS connection}
    username: ${24:# The username to use for authentication}
    validate_certs: ${25:# If C(false), SSL certificates will not be validated}
    vrf: ${26:# The name of the VRF}
  tags:
    - cisco
    - aci
    - aci_vrf]]></content>
  <tabTrigger>cisco.aci.aci_vrf</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manage contexts or VRFs (fv:Ctx)</description>
</snippet>