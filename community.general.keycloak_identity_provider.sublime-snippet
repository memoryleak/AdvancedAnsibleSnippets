<snippet>
  <content><![CDATA[- name: ${1:Allows administration of Keycloak identity providers via Keycloak API}
  community.general.keycloak_identity_provider:
    add_read_token_role_on_create: ${2:# Enable/disable whether new users can read any stored tokens}
    alias: ${3:# The alias uniquely identifies an identity provider and it is also used to build the redirect URI}
    auth_client_id: ${4:# OpenID Connect C(client_id) to authenticate to the API with}
    auth_client_secret: ${5:# Client Secret to use in conjunction with O(auth_client_id) (if required)}
    auth_keycloak_url: ${6:# URL to the Keycloak instance}
    auth_password: ${7:# Password to authenticate for API access with}
    auth_realm: ${8:# Keycloak realm name to authenticate to for API access}
    auth_username: ${9:# Username to authenticate for API access with}
    authenticate_by_default: ${10:# Specifies if this identity provider should be used by default for authentication even before displaying login screen}
    config: ${11:# Dict specifying the configuration options for the provider; the contents differ depending on the value of O(provider_id)}
    connection_timeout: ${12:# Controls the HTTP connections timeout period (in seconds) to Keycloak API}
    display_name: ${13:# Friendly name for identity provider}
    enabled: ${14:# Enable/disable this identity provider}
    first_broker_login_flow_alias: ${15:# Alias of authentication flow, which is triggered after first login with this identity provider}
    http_agent: ${16:# Configures the HTTP User-Agent header}
    link_only: ${17:# If true, users cannot log in through this provider}
    mappers: ${18:# A list of dicts defining mappers associated with this Identity Provider}
    post_broker_login_flow_alias: ${19:# Alias of authentication flow, which is triggered after each login with this identity provider}
    provider_id: ${20:# Protocol used by this provider (supported values are V(oidc) or V(saml))}
    realm: ${21:# The Keycloak realm under which this identity provider resides}
    state: ${22:# State of the identity provider}
    store_token: ${23:# Enable/disable whether tokens must be stored after authenticating users}
    token: ${24:# Authentication token for Keycloak API}
    trust_email: ${25:# If enabled, email provided by this provider is not verified even if verification is enabled for the realm}
    validate_certs: ${26:# Verify TLS certificates (do not disable this in production)}
  tags:
    - community
    - general
    - keycloak_identity_provider]]></content>
  <tabTrigger>community.general.keycloak_identity_provider</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Allows administration of Keycloak identity providers via Keycloak API</description>
</snippet>