<snippet>
  <content><![CDATA[- name: ${1:Manages access-role objects on Check Point over Web Services API}
  check_point.mgmt.cp_mgmt_access_role:
    auto_publish_session: ${2:# Publish the current session if changes have been performed after task completes}
    color: ${3:# Color of the object}
    comments: ${4:# Comments string}
    details_level: ${5:# The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object}
    ignore_errors: ${6:# Apply changes ignoring errors}
    ignore_warnings: ${7:# Apply changes ignoring warnings}
    machines: ${8:# Any or All Identified}
    machines_list: ${9:# Machines that can access the system}
    name: ${10:# Object name}
    networks: ${11:# Collection of Network objects identified by the name or UID that can access the system}
    remote_access_clients: ${12:# Remote access clients identified by name or UID}
    state: ${13:# State of the access rule (present or absent)}
    tags: ${14:# Collection of tag identifiers}
    users: ${15:# Any or All Identified}
    users_list: ${16:# Users that can access the system}
    version: ${17:# Version of checkpoint}
    wait_for_task: ${18:# Wait for the task to end}
    wait_for_task_timeout: ${19:# How many minutes to wait until throwing a timeout error}
  tags:
    - check_point
    - mgmt
    - cp_mgmt_access_role]]></content>
  <tabTrigger>check_point.mgmt.cp_mgmt_access_role</tabTrigger>
  <scope>source.yaml,source.ansible</scope>
  <description>Manages access-role objects on Check Point over Web Services API</description>
</snippet>